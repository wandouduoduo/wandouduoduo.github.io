<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>豌豆多多</title>
  
  <subtitle>Deveops Study Notes</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wandouduoduo.netlify.com/"/>
  <updated>2019-10-30T03:08:37.318Z</updated>
  <id>https://wandouduoduo.netlify.com/</id>
  
  <author>
    <name>WanDouDuoDuo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ssh端口转发：ssh隧道</title>
    <link href="https://wandouduoduo.netlify.com/articles/b406f6c6.html"/>
    <id>https://wandouduoduo.netlify.com/articles/b406f6c6.html</id>
    <published>2019-10-30T02:43:48.000Z</published>
    <updated>2019-10-30T03:08:37.318Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>“ssh端口转发”还有一个更加形象的名字，叫做”ssh隧道”，当然，只是纯粹的通过”ssh隧道”这几个字去理解它可能不太容易，我们来描述一些实际的场景，在这些场景中我们可能会遇到一些问题，而这些问题可以通过”ssh隧道”解决，通过这样的方式，我们反而更加容易理解”ssh隧道”是什么以及它的作用。</p><p>假如我们现在有两个台主机，主机A与主机B，主机A上安装有mysql客户端，主机B上安装有mysql服务端，现在，主机A中的mysql客户端需要与主机B中的mysql服务端进行通讯，则需要从mysql的客户端连接到mysql服务端。如下图所示</p><p><img src="/articles/b406f6c6/1.png" alt="ssh端口转发：ssh隧道"></p><p>然而我们知道，mysql在传输数据时是进行明文传输的，如果主机A与主机B只能通过公网进行通讯，那么暴露在公网的mysql通讯是非常不安全的，所以，我们需要借助一些手段，提高访问mysql服务时的安全性，比如，我们可以使用SSL证书为数据加密，或者使用stunnel加密隧道，我们还可以使用VPN，当然，这些方法都不是这篇文章所要描述的重点，我们此处要总结的是”ssh隧道”这种方法，我们可以利用ssh，搭建出一条”通道”，然后将mysq的客户端与服务端通过这条”ssh通道”连接起来，如下图所示</p><p><img src="/articles/b406f6c6/2.png" alt="ssh端口转发：ssh隧道"></p><p>mysql的客户端与服务端的连接方式从原来直连的方式变成了如上图所示的连接方式，它们之间并不直接进行通讯，而是借助ssh隧道将通讯数据转发，虽然仍然跨越了公网，但是由于ssh本身的安全特性，所以别人无法看到明文传输的数据，数据依靠ssh隧道实现了加密的效果，达到了保护数据安全的作用，提升了mysql的客户端与服务端通讯的安全性。</p><a id="more"></a><h2 id="本地转发"><a href="#本地转发" class="headerlink" title="本地转发"></a>本地转发</h2><p>经过上述描述，我想你对”ssh隧道”应该已经有了初步的理解，那么现在我们来实际动手配置一下。</p><p>首选，将实验环境准备好，两台主机的信息如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ServerA：10.1.0.1</span><br><span class="line"></span><br><span class="line">ServerB：10.1.0.2</span><br><span class="line"></span><br><span class="line">ServerA中并不存在mysql服务。</span><br><span class="line"></span><br><span class="line">ServerB中已经安装了mysql服务，mysql服务已经启动并监听了3306端口。</span><br></pre></td></tr></table></figure><p>现在，我们只要在ServerA中执行如下命令，即可在ServerA与ServerB之间建立一条ssh隧道，执行如下命令时会提示输入ServerB的密码</p><p><img src="/articles/b406f6c6/3.png" alt="ssh端口转发：ssh隧道"></p><p>如上图所示，执行上图中的命令后，我们直接从主机A连接到了主机B，这条连接就是我们创建的”ssh隧道”。</p><p>我们先来简单的解释一下上图中命令的含义，为了方便解释，我们把命令分成3部分理解，如下图所示。</p><p><img src="/articles/b406f6c6/4.png" alt="ssh端口转发：ssh隧道"></p><p>第1部分为-L选项，-L 选项表示使用”本地转发”建立ssh隧道，本地转发是什么意思呢？</p><p>“本地转发”表示本地的某个端口上的通讯数据会被转发到目标主机的对应端口，你可以把它抽象的理解成一种”映射”，注意，我们把执行上述命令的主机称为”本地主机”。</p><p>比如，访问本地(当前主机)的端口A，就相当于访问目标主机的端口B，因为当你访问本地的端口A时，通讯数据会被转发到目标主机的端口B，这就是本地转发，其实，”本地转发”是与”远程转发”相对应的，但是我们还没有介绍到远程转发，所以并不用在意那么多，我们只要先了解本地转发的作用就行了。</p><p>刚才说过，”本地转发”表示本地的某个端口上的通讯数据会被转发到目标主机的对应端口，那么你一定能够理解上述命令中第2部分的含义了</p><p>第2部分表示：通讯数据会从本地的9906端口上被转发，最终被转发到10.1.0.2的3306端口。</p><p>第3部分表示：我们创建的ssh隧道是连接到10.1.0.2上的root用户的，其实，第3部分可以与之前的ssh连在一起去理解，比如，ssh <a href="mailto:root@10.1.0.2" target="_blank" rel="noopener">root@10.1.0.2</a>，其实就是使用ssh命令从ServerA中连接到ServerB的root用户，这就是为什么执行上述命令以后，会提示我们输入10.1.0.2中root用户的密码，当然，如果你已经在ServerB中配置好了ServerA对应用户的公钥，那么则可以省去输入密码的步骤直接连接，此时，ServerA的角色是ssh的客户端，ServerB的角色是ssh的服务端，而这条ssh隧道就是建立在ServerA与ServerB之间的。</p><p>了解完上述命令的3个部分，我们来把它当做一个整体去理解一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -L 9906:10.1.0.2:3306 root@10.1.0.2</span><br></pre></td></tr></table></figure><p>上述命令表示从本机(ServerA)建立一个到ServerB(10.1.0.2)的ssh隧道，使用本地端口转发模式，监听ServerA本地的9906端口，访问本机的9906端口时，通讯数据将会被转发到ServerB(10.1.0.2)的3306端口。</p><p>好了，命令解释完了，现在我们来试试实际的使用效果，注意，此刻我们已经创建了ssh隧道，从serverA中已经连接到了ServerB，不要退出这个ssh连接，否则刚才创建的ssh隧道将会消失（稍后会介绍怎样后台建立连接），此刻，我们再打开一个新的ssh连接，连接到ServerA，如下图所示</p><p><img src="/articles/b406f6c6/5.png" alt="ssh端口转发：ssh隧道"></p><p>在新链接中查看对应的端口号，本地回环地址的9906端口已经被监听了（稍后介绍怎样监听ServerA中指定的IP，即非本地回环地址）。</p><p>此时，我们直接在ServerA中通过mysql命令访问127.0.0.1的9906端口，就相当于访问ServerB的mysql服务了，我们来试试。</p><p>执行mysql命令时需要指定IP与端口号，因为我的ServerB中的mysql只是用于测试，所以没有为用户设置密码，如下图即可连接</p><p><img src="/articles/b406f6c6/6.png" alt="ssh端口转发：ssh隧道"></p><p>如上图所示，已经可以正常在ServerA中连接到数据库，但是连接的数据库其实是ServerB中的mysql服务。</p><p>这就是通过ssh隧道访问远程主机的mysql服务的示例，这样做就是利用ssh的安全特性加密了mysql的通讯数据。</p><p>在没有使用ssh隧道时，直接从ServerA跨越公网访问ServerB的mysql服务时，如果在ServerB中通过抓包工具对通讯网卡进行抓包，可以直接从抓到的数据包中看到mysql的传输数据。</p><p>但是如果使用了ssh隧道，并且在ServerB中仅对通讯网卡进行抓包时，则只能看到经过加密的ssh数据包，此时，如果对ServerB的本地回环网卡同时进行抓包，则可以看到未加密的mysql传输数据，不过，这并不影响mysql通讯数据跨越公网时的安全性，因为这时已经是ServerB本机中的数据传输了，也就是说，mysql通讯数据在跨越公网时，是经过ssh隧道加密的，mysql通讯数据到达ServerB本机以后，是明文传输的。</p><p>不过，当我们执行上述命令创建ssh隧道时，总会从ServerA中连接到ServerB中，而通常，我们只希望建立ssh隧道，并不会使用到这个新建立的ssh连接，而且在实际使用中，我们往往会在建立隧道以后，退出当前的ssh会话，所以，上述命令并不能满足我们的需求，因为，我们一旦退出对应的ssh会话，相应的ssh隧道也会消失，所以，我们还需要配合另外两个选项，”-N选项”与”-f选项”，我们一一道来。</p><p>首先来试试”-N选项”，当配合此选项创建ssh隧道时，并不会打开远程shell连接到目标主机，我们来试试，如下图所示，配合-N选项创建隧道，输入ServerB的密码以后，并没有连接到ServerB，而是停留在了如下图的位置</p><p><img src="/articles/b406f6c6/7.png" alt="ssh端口转发：ssh隧道"></p><p>此时，再打开一个新的ssh会话连接到ServerA，可以看到，9906端口已经被监听。</p><p>但是，这样仍然不能满足我们的要求，虽然建立隧道时并没有连接到ServerB，但是，我们仍然不能关闭创建ssh隧道时所使用的ssh会话。</p><p>这时，只要配合”-f”选项即可，”-f”选项表示后台运行ssh隧道，即使我们关闭了创建隧道时所使用的ssh会话，对应的ssh隧道也不会消失，”-f”选项需要跟”-N”选项配合使用，所以通常，我们会使用如下命令创建ssh隧道</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -f -N -L 9906:10.1.0.2:3306 root@10.1.0.2</span><br></pre></td></tr></table></figure><p>配合上述选项创建ssh隧道时，即使我们完全关闭了执行命令时的ssh会话，对应创建的隧道也可以完全正常运行。</p><p>不过，当我们使用上述命令建立隧道时，只有127.0.0.1这个回环地址的9906端口会被监听，这样就会出现一个小问题，也就是说，我们只能在ServerA本机上访问9906端口，并不能通过其他主机访问ServerA的9906端口，因为ServerA其他IP的9906端口并未被监听，那么怎么办呢？很简单，使用如下命令，即可让9906端口监听在ServerA中指定的IP上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -f -N -L 10.1.0.1:9906:10.1.0.2:3306 root@10.1.0.2</span><br></pre></td></tr></table></figure><p>在ServerA中执行上述命令时，ServerA的10.1.0.1的9906端口会被监听，此刻，我们可以通过其他主机访问10.1.0.1的9906端口，即可访问到ServerB中的mysql服务，其实，与之前的命令相比，只是在9906前增加了ServerA中对应的IP地址罢了，很简单吧。</p><p>如果你觉得这还不够，希望ServerA中的所有IP地址的9906端口都被监听，那么可以在建立隧道时开启”网关功能”，使用”-g”选项可以开启”网关功能”，开启网关功能以后，ServerA中的所有IP都会监听对应端口，示例如下</p><p><img src="/articles/b406f6c6/8.png" alt="ssh端口转发：ssh隧道"></p><p>好了，说了这么多，终于把ssh隧道(本地转发)给解释明白了，不过，我们也只是说明了本地转发，现在，我们来聊聊远程转发。</p><h2 id="远程转发"><a href="#远程转发" class="headerlink" title="远程转发"></a>远程转发</h2><p>在了解远程转发之前，请先确定你已经理解了”本地转发”。</p><p>老规矩，为了方便理解，我们先来描述一个场景。</p><p>公司有一台服务器ServerB，ServerB处于公司的内网中，公司内网中的所有主机都通过路由器访问互联网（典型的NAT网络），ServerB中有提供mysql服务，如果此时，我们想要通过外网访问到ServerB中的mysql服务，该怎么办呢？通常的做法是，通过路由器或者防火墙，将公司的固定外网IP上的某个端口映射到ServerB内网IP的3306端口上，这样，我们只要访问公司外网IP的对应端口，即可访问到内网ServerB中的mysql服务了，但是，如果你没有权限控制公司的防火墙或者路由器呢，这时该怎么办呢？</p><p>假设，你无法控制防火墙去进行端口映射，但是，公司在公网上有另外一台服务器ServerA，ServerA有自己的公网IP，你有权控制ServerA，这时，我们就可以利用ServerA达到我们的目的，聪明如你，一定想到了解决方案，没错，我们可以在ServerA与ServerB之间创建一条SSH隧道，利用这条隧道将ServerA中的某个端口(假设仍然使用9906端口)与ServerB中的3306端口连接起来，这样，当我们访问ServerA的9906端口时，就相当于访问到内网ServerB中的mysql服务了，那么，我们能不能使用之前的”本地转发”的方式，在ServerA中创建SSH隧道呢？我们来模拟一下，看看会不会遇到什么问题，如果想要使用之前的命令创建SSH隧道，那么我们则需要在ServerA中执行如下命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -f -N -L AIP:9906:BIP:3306 root@BIP</span><br></pre></td></tr></table></figure><p>问题来了，ServerA有自己的公网IP，我们只要把上述命令中的AIP替换成ServerA的公网IP即可，但是ServerB是内网主机，虽然ServerB能够通过公司内的路由器访问到互联网，但是ServerB并不持有任何公网IP，ServerB只有内网IP，所以，我们并不可能把上述命令中的BIP替换成B主机的内网IP，所以，使用上述命令是无法在ServerA中创建ssh隧道连接到ServerB的，那么该怎么办呢？</p><p>虽然我们无法从ServerA中使用ssh命令连接到ServerB，但是，我们可以从ServerB中使用ssh命令连接到ServerA啊，虽然ServerB是没有公网IP的内网主机，但是它仍然可以依靠公司的路由器访问互联网，所以，我们只要在ServerB中执行如下命令，即可从ServerB中连接到ServerA中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@AIP</span><br></pre></td></tr></table></figure><p>那么，按照这个思路，我们似乎找到了方向，我们现在需要一种方法，能够从ServerB中创建SSH隧道连接到ServerA，并且，隧道创建后，ServerA中会监听9906端口，以便别人能够通过外网访问，也就是说，我们需要一种方法，能够满足如下两个条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">条件1：从ServerB中主动连接到ServerA，即在ServerB中执行创建隧道的命令，连接到ServerA。</span><br><span class="line"></span><br><span class="line">条件2：隧道创建后，转发端口需要监听在ServerA中，以便利用ServerA访问到内网的ServerB。</span><br></pre></td></tr></table></figure><p>这种方法就是”远程转发”。</p><p>你可能还是不太明白，没有关系，我们先来实际动手操作一下，稍后，我们会对比本地转发与远程转发的具体区别。</p><p>为了方便，我们仍然使用之前的实验环境，假设ServerA是外网主机，ServerB是内网主机，ServerA的IP为10.1.0.1（假设此IP为公网IP），ServerB的IP为10.1.0.2，并且已经将之前本地转发的进程关闭，相当于一个没有任何隧道的新的实验环境。</p><p>使用”-R选项”，可以创建一个”远程转发”模式的ssh隧道，我们在ServerB中，执行如下命令即可</p><p><img src="/articles/b406f6c6/9.png" alt="ssh端口转发：ssh隧道"></p><p>上述命令在ServerB中执行，执行后，即可在ServerA与ServerB之间建立ssh隧道，此时，ServerB是ssh客户端，ServerA是ssh服务端，隧道建立后，ServerA中的9906端口会被监听，在ServerA中查看对应端口，如下图所示</p><p><img src="/articles/b406f6c6/10.png" alt="ssh端口转发：ssh隧道"></p><p>从图中可以看出，ServerA中的9906端口已经被监听，此刻，我们通过外网IP登录到ServerA，在ServerA中访问本地回环地址的9906端口，即可访问到内网ServerB中的mysql服务，如下图所示。</p><p><img src="/articles/b406f6c6/11.png" alt="ssh端口转发：ssh隧道"></p><p>不过你肯定注意到了，当使用远程转发的命令时，我并没有指定监听ServerA的外网IP，也没有使用”-g选项”开启网关功能，这是因为，即使你在命令中指定了IP地址，最终在ServerA中还是会只监听127.0.0.1的9906端口，你可以在ServerB中尝试一下如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -f -N -R 10.1.0.1:9906:10.1.0.2:3306 root@10.1.0.1</span><br></pre></td></tr></table></figure><p>即使在ServerB中执行上述命令时指定了IP或者开启了网关功能，ServerA的9906端口仍然只监听在127.0.0.1上，当然，如果你一心想要通过别的主机访问ServerA的9906端口，也可以使用其他程序去反代ServerA的9906端口，还有，我在实际的使用过程中，如果使用远程转发穿透到内网，ssh隧道将会非常不稳定，隧道会莫名其妙的消失或者失效，特别是在没有固定IP的网络内，网上有些朋友提供了autossh的解决方案，不过我并没有尝试过，如果你有兴趣，可以试一试。</p><h2 id="本地转发与远程转发的区别"><a href="#本地转发与远程转发的区别" class="headerlink" title="本地转发与远程转发的区别"></a>本地转发与远程转发的区别</h2><p>读到此处，你可能会有些蒙圈，”远程转发”与”本地转发”到底有什么不一样，我们来对比一下</p><p>在对比之前，再强调一点，我们把执行创建隧道命令的主机称为本地主机(本地)。</p><p><strong>“本地转发”</strong></p><p>在本机执行创建隧道的命令时，本地是ssh客户端，隧道的另一头是远程主机(ssh服务端)，本地主机(也就是ssh客户端)会监听一个端口，当访问本地主机的这个端口时，通讯数据会通过ssh隧道转发到ssh服务端(即远程主机)，远程主机再将通讯数据发往应用服务所监听端口，在本地转发中，本地主机不仅扮演了ssh客户端的角色，也扮演了应用程序的客户端(比如mysql客户端)，远程主机不仅扮演了ssh服务端，也扮演了应用程序服务端(比如mysql服务端)，那么我们可以总结一下，本地转发的特性如下</p><p>本地主机：隧道的一头，本地主机既是ssh客户端，又是应用客户端</p><p>远程主机：隧道的另一头，远程主机既是ssh服务端，又是应用服务端</p><p>隧道创建以后，转发端口监听在本地主机中，即监听在ssh客户端主机中。</p><p><strong>“远程转发”</strong></p><p>在本机执行创建隧道的命令时，本地是ssh客户端，隧道的另一头是远程主机(ssh服务端)，远程主机(也就是ssh服务端)会监听一个端口，当访问远程主机的这个端口时，通讯数据会通过ssh隧道转发到ssh客户端(即本地主机)，本地主机再将通讯数据发往应用服务所监听端口，在远程转发中，本地主机不仅扮演了ssh客户端的角色，也扮演了应用程序的服务端(比如mysql服务端)，远程主机不仅扮演了ssh服务端，也扮演了应用程序客户端(比如mysql客户端)，那么我们可以总结一下，远程转发的特性如下</p><p>本地主机：隧道的一头，本地主机既是ssh客户端，又是应用服务端</p><p>远程主机：隧道的另一头，远程主机既是ssh服务端，又是应用客户端</p><p>隧道创建以后，转发端口监听在远程主机中，即监听在ssh服务端主机中。</p><p>“本地转发”与”远程转发”都属于ssh端口转发，也可以称呼它们为”ssh隧道”，只不过，有的朋友喜欢将”远程转发”称呼为为”ssh反向隧道”或者”ssh逆向隧道”</p><p>经过上述描述，我想你应该已经明白了它们之间的区别。</p><h2 id="一些扩展"><a href="#一些扩展" class="headerlink" title="一些扩展"></a>一些扩展</h2><p>在之前的示例中，ServerB是ssh隧道的一头，同时，ServerB也是应用的服务端，也就是说，应用程序的服务端与ssh隧道的连接端在同一台服务器上，那么，当应用程序的服务端处于其他主机时（比如ServerC），我们还能够通过ServerB去转发通讯数据吗？我们来动手试试，不过在动手之前，先来描述一下实验场景，实验场景如下图所示</p><p><img src="/articles/b406f6c6/12.png" alt="ssh端口转发：ssh隧道"></p><p>如上图所示，我们想要在A与B之间创建隧道，最终通过隧道访问到ServerC中的mysql服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ServerAIP：10.1.0.1</span><br><span class="line"></span><br><span class="line">ServerBIP：10.1.0.2</span><br><span class="line"></span><br><span class="line">ServerCIP：10.1.0.3</span><br><span class="line"></span><br><span class="line">ServerA与ServerB上没有开启任何mysql服务。</span><br><span class="line"></span><br><span class="line">ServerC中开启了mysql服务，监听了3306端口。</span><br></pre></td></tr></table></figure><p>之前用于示例所创建的ssh隧道已经全部关闭，相当于一个全新的实验环境。</p><p>好了，实验环境描述完毕，现在开始实际操作，就以本地转发为例，在ServerA中执行如下命令，即可创建一条隧道并满足上图中的应用场景。</p><p><img src="/articles/b406f6c6/13.png" alt="ssh端口转发：ssh隧道"></p><p>如上图所示，ServerA的9906端口已经被监听，细心如你一定发现了，上图中的命令与之前创建隧道时所使用的命令在结构上并没有什么不同，只是目标端口所对应的IP地址变为了ServerC的IP，是不是很简单，我再来啰嗦一遍，上述命令表示，从本机（ServerA）建立一条ssh隧道连接到10.1.0.2（ServerB），隧道使用本地转发模式建立，转发端口监听在本地的9906端口上，访问本机的9906端口时，数据会被ssh隧道转发到10.1.0.3（ServerC)的3306端口。</p><p>我们来测试一下实际的使用效果，如下图所示，一切正常。</p><p><img src="/articles/b406f6c6/14.png" alt="ssh端口转发：ssh隧道"></p><p>上述场景中存在一个问题，就是数据安全性的问题，我们之所以使用ssh隧道，就是为了用它来保护明文传输的数据，从而提升安全性，不过，在上例的场景中，只有ServerA与ServerB之间的传输是受ssh隧道保护的，ServerB与ServerC之间的传输，仍然是明文的，所以，如果想要在上述场景中使用ssh隧道进行数据转发，首先要考虑ServerB与ServerC之间的网络是否可靠。</p><p>其实，当我们在创建隧道时如果开启了网关功能，那么应用客户端与ServerA之间的通讯也会面临同样的问题，如下图所示</p><p><img src="/articles/b406f6c6/15.png" alt="ssh端口转发：ssh隧道"></p><p>既然上述场景中存在没有办法通过ssh隧道保护的连接，那么为什么还要使用上述方式进行转发呢？</p><p>这是因为，在某些实际的使用场景中，我们使用ssh隧道的目的并不是提升数据的安全性，而是为了”绕过防火墙”，比如如下场景</p><p><img src="/articles/b406f6c6/16.png" alt="ssh端口转发：ssh隧道"></p><p>上图中，ServerC中提供了mysql服务，我们想要通过ServerA访问ServerC中的mysql服务，但是，ServerA与ServerC之间存在防火墙，阻断了它们的通讯，所以，我们无法从ServerA中直接访问ServerC中的服务，不过幸运的是，我们还有另外一台机器：ServerB，ServerA与ServerB之间可以自由通讯，同时，ServerB与ServerC之间也可以自由通讯，没错，你一定想到了，我们可以利用ServerB，在ServerA与ServerB之间建立ssh隧道，达到我们的最终目的：使得ServerA可以访问到ServerC中的mysql服务，如下图所示</p><p><img src="/articles/b406f6c6/17.png" alt="ssh端口转发：ssh隧道"></p><p>当上图中的ssh隧道建立以后，访问ServerA中的转发端口，即可访问到ServerC中的mysql服务，因为对于ServerC来说，ServerA是透明的，ServerC并不知道ServerA的存在，它只能看到ServerB，当你在ServerA中使用ssh隧道访问ServerC的mysql服务时，如果你在ServerC中的网卡上进行抓包，只会看到ServerB的IP地址，因为数据经过ServerB转发了。</p><h2 id="一些配置"><a href="#一些配置" class="headerlink" title="一些配置"></a>一些配置</h2><p>其实，如果想要能够正常的使用ssh端口转发，我们还需要做出正确的配置才行，之前一直没有说明，是因为openssh默认的配置就是支持端口转发的。</p><p>如果想要ssh端口转发能够正常工作，需要在ssh服务端的配置文件中将AllowTcpForwarding的值设置为yes。</p><p>此处所指的ssh服务端即ssh隧道中的一头，扮演ssh服务端角色的那台主机。</p><p>当隧道建立以后，经过一段时间后，ssh隧道链接可能会被断开，这有可能是因为ssh客户端和ssh服务端长时间没有通讯，于是ssh服务端主动断开了链接，如果想要解决这个问题，可以在ssh服务端进行配置，调整ssh服务端的ClientAliveInterval配置和ClientAliveCountMax配置即可。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>经过上述描述，我想你应该已经了解的ssh隧道的作用。</p><p>通常，ssh隧道可以帮助我们达到如下目的：</p><p>1、保护tcp会话，保护会话中明文传输的内容。</p><p>2、绕过防火墙或者穿透到内网，访问对应的服务。</p><p>为了以后方便回顾，我们将上文中使用到的命令及选项进行总结</p><p>创建隧道时的常用选项有：</p><p>“-L选项”：表示使用本地端口转发创建ssh隧道</p><p>“-R选项”：表示使用远程端口转发创建ssh隧道</p><p>“-N选项”： 表示创建隧道以后不连接到sshServer端，通常与”-f”选项连用</p><p>“-f选项”：表示在后台运行ssh隧道，通常与”-N”选项连用</p><p>“-g选项”：表示ssh隧道对应的转发端口将监听在主机的所有IP中，不使用”-g选项”时，转发端口默认只监听在主机的本地回环地址中，”-g”表示开启网关模式，远程端口转发中，无法开启网关功能。</p><p>创建本地转发模式的ssh隧道，命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -g -f -N -L forwardingPort:targetIP:targetPort user@sshServerIP</span><br></pre></td></tr></table></figure><p>本机上的forwardingPort将会被监听，访问本机的forwardingPort，就相当于访问targetIP的targetPort，ssh隧道建立在本机与sshServer之间。</p><p>创建远程转发模式的ssh隧道，命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -f -N -R forwardingPort:targetIP:targetPort user@sshServerIP</span><br></pre></td></tr></table></figure><p>sshServer上的forwardingPort将会被监听，访问sshServer上的forwardingPort，就相当于访问targetIP的targetPort，ssh隧道建立在本机与sshServer之间。</p><p>关于ssh的端口转发就总结到这里，希望可以帮助到你。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;“ssh端口转发”还有一个更加形象的名字，叫做”ssh隧道”，当然，只是纯粹的通过”ssh隧道”这几个字去理解它可能不太容易，我们来描述一些实际的场景，在这些场景中我们可能会遇到一些问题，而这些问题可以通过”ssh隧道”解决，通过这样的方式，我们反而更加容易理解”ssh隧道”是什么以及它的作用。&lt;/p&gt;
&lt;p&gt;假如我们现在有两个台主机，主机A与主机B，主机A上安装有mysql客户端，主机B上安装有mysql服务端，现在，主机A中的mysql客户端需要与主机B中的mysql服务端进行通讯，则需要从mysql的客户端连接到mysql服务端。如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/b406f6c6/1.png&quot; alt=&quot;ssh端口转发：ssh隧道&quot;&gt;&lt;/p&gt;
&lt;p&gt;然而我们知道，mysql在传输数据时是进行明文传输的，如果主机A与主机B只能通过公网进行通讯，那么暴露在公网的mysql通讯是非常不安全的，所以，我们需要借助一些手段，提高访问mysql服务时的安全性，比如，我们可以使用SSL证书为数据加密，或者使用stunnel加密隧道，我们还可以使用VPN，当然，这些方法都不是这篇文章所要描述的重点，我们此处要总结的是”ssh隧道”这种方法，我们可以利用ssh，搭建出一条”通道”，然后将mysq的客户端与服务端通过这条”ssh通道”连接起来，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/b406f6c6/2.png&quot; alt=&quot;ssh端口转发：ssh隧道&quot;&gt;&lt;/p&gt;
&lt;p&gt;mysql的客户端与服务端的连接方式从原来直连的方式变成了如上图所示的连接方式，它们之间并不直接进行通讯，而是借助ssh隧道将通讯数据转发，虽然仍然跨越了公网，但是由于ssh本身的安全特性，所以别人无法看到明文传输的数据，数据依靠ssh隧道实现了加密的效果，达到了保护数据安全的作用，提升了mysql的客户端与服务端通讯的安全性。&lt;/p&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://wandouduoduo.netlify.com/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Network" scheme="https://wandouduoduo.netlify.com/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>SSH隧道与端口转发及内网穿透</title>
    <link href="https://wandouduoduo.netlify.com/articles/95ca2546.html"/>
    <id>https://wandouduoduo.netlify.com/articles/95ca2546.html</id>
    <published>2019-10-29T11:30:24.000Z</published>
    <updated>2019-10-29T11:36:30.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSH隧道与端口转发及内网穿透"><a href="#SSH隧道与端口转发及内网穿透" class="headerlink" title="SSH隧道与端口转发及内网穿透"></a>SSH隧道与端口转发及内网穿透</h2><p>大家都知道SSH是一种安全的传输协议，用在连接服务器上比较多。不过其实除了这个功能，它的隧道转发功能更是吸引人。下面是个人根据自己的需求以及在网上查找的资料配合自己的实际操作所得到的一些心得。</p><p><strong>SSH/plink命令的基本资料：</strong></p><p>首先，认识下这三个非常强大的命令：</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; ssh -C -f -N -g -L listen_port:DST_Host:DST_port user@Tunnel_Host</span><br><span class="line">&gt; ssh -C -f -N -g -R listen_port:DST_Host:DST_port user@Tunnel_Host</span><br><span class="line">&gt; ssh -C -f -N -g -D listen_port user@Tunnel_Host</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>相关参数的解释：</p><p>-f Fork into background after authentication.<br>后台认证用户/密码，通常和-N连用，不用登录到远程主机。</p><p>-L port:host:hostport<br>将本地机(客户机)的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 同时远程主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport</p><p>-R port:host:hostport<br>将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去, 同时本地主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport</p><p>-D port<br>指定一个本地机器 “动态的’’ 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS4 协议, 将充当 SOCKS4 服务器. 只有 root 才能转发特权端口. 可以在配置文件中指定动态端口的转发.</p><p>-C Enable compression.<br>压缩数据传输。</p><p>-N Do not execute a shell or command.<br>不执行脚本或命令，通常与-f连用。</p><p>-g Allow remote hosts to connect to forwarded ports.<br>在-L/-R/-D参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接。注：这个参数我在实践中似乎始终不起作用。</p><a id="more"></a><p><strong>建立本地SSH隧道例子</strong></p><p>在我们计划建立一个本地SSH隧道之前，我们必须清楚下面这些数据：</p><ol><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 中间服务器d的IP地址</span><br><span class="line">2. 要访问服务器c的IP地址</span><br><span class="line">3. 要访问服务器c的端口</span><br></pre></td></tr></table></figure></li></ol><p>现在，我们把上面这张图变得具体一些，给这些机器加上IP地址。并且根据下面这张图列出我们的计划：</p><ol><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 需要访问234.234.234.234的FTP服务，也就是端口21</span><br><span class="line">2. 中间服务器是123.123.123.123</span><br></pre></td></tr></table></figure></li></ol><p>现在我们使用下面这条命令来达成我们的目的</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; ssh -N -f -L 2121:234.234.234.234:21 123.123.123.123</span><br><span class="line">&gt; ftp localhost:2121 # 现在访问本地2121端口，就能连接234.234.234.234的21端口了</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>这里我们用到了SSH客户端的三个参数，下面我们一一做出解释：</p><ul><li>-N 告诉SSH客户端，这个连接不需要执行任何命令。仅仅做端口转发</li><li>-f 告诉SSH客户端在后台运行</li><li>-L 做本地映射端口，被冒号分割的三个部分含义分别是<ul><li>需要使用的本地端口号</li><li>需要访问的目标机器IP地址（IP: 234.234.234.234）</li><li>需要访问的目标机器端口（端口: 21)</li></ul></li><li>最后一个参数是我们用来建立隧道的中间机器的IP地址(IP: 123.123.123.123)</li></ul><p>我们再重复一下-L参数的行为。-L X:Y:Z的含义是，将IP为Y的机器的Z端口通过中间服务器映射到本地机器的X端口。</p><p>在这条命令成功执行之后，我们已经具有绕过公司防火墙的能力，并且成功访问到了我们喜欢的一个FTP服务器了。</p><h5 id="如何建立远程SSH隧道"><a href="#如何建立远程SSH隧道" class="headerlink" title="如何建立远程SSH隧道"></a>如何建立远程SSH隧道</h5><p>通过建立本地SSH隧道，我们成功地绕过防火墙开始下载FTP上的资源了。那么当我们在家里的时候想要察看下载进度怎么办呢？大多数公司的网络是通过路由器接入互联网的，公司内部的机器不会直接与互联网连接，也就是不能通过互联网直接访问。通过线路D-B-A访问公司里的机器a便是不可能的。也许你已经注意到了，虽然D-B-A这个方向的连接不通，但是A-B-D这个方向的连接是没有问题的。那么，我们能否利用一条已经连接好的A-B-D方向的连接来完成D-B-A方向的访问呢？答案是肯定的，这就是远程SSH隧道的用途。</p><p>与本地SSH一样，我们在建立远程SSH隧道之前要清楚下面几个参数：</p><ul><li>需要访问内部机器的远程机器的IP地址（这里是123.123.123.123）</li><li>需要让远程机器能访问的内部机器的IP地址(这里因为是想把本机映射出去，因此IP是127.0.0.1)</li><li>需要让远程机器能访问的内部机器的端口号(端口:22)</li></ul><p>在清楚了上面的参数后，我们使用下面的命令来建立一个远程SSH隧道</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; ssh -N -f -R 2222:127.0.0.1:22 123.123.123.123</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>现在，在IP是123.123.123.123的机器上我们用下面的命令就可以登陆公司的IP是192.168.0.100的机器了。</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; ssh -p 2222 localhost</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>-N，-f 这两个参数我们已经在本地SSH隧道中介绍过了。我们现在重点说说参数-R。该参数的三个部分的含义分别是:</p><ul><li>远程机器使用的端口（2222）</li><li>需要映射的内部机器的IP地址(127.0.0.1)</li><li>需要映射的内部机器的端口(22)</li></ul><p>例如：-R X:Y:Z 就是把我们内部的Y机器的Z端口映射到远程机器的X端口上。</p><p><strong>建立SSH隧道的几个技巧</strong></p><p><strong>自动重连</strong></p><p>隧道可能因为某些原因断开，例如：机器重启，长时间没有数据通信而被路由器切断等等。因此我们可以用程序控制隧道的重新连接，例如一个简单的循环或者使用 <a href="http://cr.yp.to/daemontools.html" target="_blank" rel="noopener">djb’s daemontools</a> . 不管用哪种方法，重连时都应避免因输入密码而卡死程序。关于如何安全的避免输入密码的方法，请参考我的 <a href="http://blog.jianingy.com/node/73" target="_blank" rel="noopener">如何实现安全的免密码ssh登录</a> 。这里请注意，如果通过其他程序控制隧道连接，应当避免将SSH客户端放到后台执行，也就是去掉-f参数。</p><p><strong>保持长时间连接</strong></p><p>有些路由器会把长时间没有通信的连接断开。SSH客户端的TCPKeepAlive选项可以避免这个问题的发生，默认情况下它是被开启的。如果它被关闭了，可以在ssh的命令上加上-o TCPKeepAlive=yes来开启。</p><p>另一种方法是，去掉-N参数，加入一个定期能产生输出的命令。例如: top或者vmstat。下面给出一个这种方法的例子：</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; ssh -R 2222:localhost:22 123.123.123.123 &quot;vmstat 30&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>检查隧道状态</strong></p><p>有些时候隧道会因为一些原因通信不畅而卡死，例如：由于传输数据量太大，被路由器带入stalled状态。这种时候，往往SSH客户端并不退出，而是卡死在那里。一种应对方法是，使用SSH客户端的ServerAliveInterval和ServerAliveCountMax选项。 ServerAliveInterval会在隧道无通信后的一段设置好的时间后发送一个请求给服务器要求服务器响应。如果服务器在 ServerAliveCountMax次请求后都没能响应，那么SSH客户端就自动断开连接并退出，将控制权交给你的监控程序。这两个选项的设置方法分别是在ssh时加入-o ServerAliveInterval=n和-o ServerAliveCountMax=m。其中n, m可以自行定义。</p><p><strong>如何将端口绑定到外部地址上</strong></p><p>使用上面的方法，映射的端口只能绑定在127.0.0.1这个接口上。也就是说，只能被本机自己访问到。如何才能让其他机器访问这个端口呢？我们可以把这个映射的端口绑定在0.0.0.0的接口上，方法是加上参数-b 0.0.0.0。同时还需要打开SSH服务器端的一个选项－GatewayPorts。默认情况下它应当是被打开的。如果被关闭的话，可以在/etc /sshd_config中修改GatewayPorts no为GatewayPorts yes来打开它。</p><p><strong>通过SSH隧道建立SOCKS服务器</strong></p><p>如果我们需要借助一台中间服务器访问很多资源，一个个映射显然不是高明的办法（事实上，高明确实没有用这个方法）。幸好，SSH客户端为我们提供了通过SSH隧道建立SOCKS服务器的功能。</p><p>通过下面的命令我们可以建立一个通过123.123.123.123的SOCKS服务器。</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; ssh -N -f -D 1080 123.123.123 # 将端口绑定在127.0.0.1上</span><br><span class="line">&gt; ssh -N -f -D 0.0.0.0:1080 123.123.123.123 # 将端口绑定在0.0.0.0上</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>通过SSH建立的SOCKS服务器使用的是SOCKS5协议，在为应用程序设置SOCKS代理的时候要特别注意。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SSH隧道与端口转发及内网穿透&quot;&gt;&lt;a href=&quot;#SSH隧道与端口转发及内网穿透&quot; class=&quot;headerlink&quot; title=&quot;SSH隧道与端口转发及内网穿透&quot;&gt;&lt;/a&gt;SSH隧道与端口转发及内网穿透&lt;/h2&gt;&lt;p&gt;大家都知道SSH是一种安全的传输协议，用在连接服务器上比较多。不过其实除了这个功能，它的隧道转发功能更是吸引人。下面是个人根据自己的需求以及在网上查找的资料配合自己的实际操作所得到的一些心得。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SSH/plink命令的基本资料：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，认识下这三个非常强大的命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; ssh -C -f -N -g -L listen_port:DST_Host:DST_port user@Tunnel_Host&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; ssh -C -f -N -g -R listen_port:DST_Host:DST_port user@Tunnel_Host&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; ssh -C -f -N -g -D listen_port user@Tunnel_Host&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;相关参数的解释：&lt;/p&gt;
&lt;p&gt;-f Fork into background after authentication.&lt;br&gt;后台认证用户/密码，通常和-N连用，不用登录到远程主机。&lt;/p&gt;
&lt;p&gt;-L port:host:hostport&lt;br&gt;将本地机(客户机)的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 同时远程主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport&lt;/p&gt;
&lt;p&gt;-R port:host:hostport&lt;br&gt;将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去, 同时本地主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport&lt;/p&gt;
&lt;p&gt;-D port&lt;br&gt;指定一个本地机器 “动态的’’ 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS4 协议, 将充当 SOCKS4 服务器. 只有 root 才能转发特权端口. 可以在配置文件中指定动态端口的转发.&lt;/p&gt;
&lt;p&gt;-C Enable compression.&lt;br&gt;压缩数据传输。&lt;/p&gt;
&lt;p&gt;-N Do not execute a shell or command.&lt;br&gt;不执行脚本或命令，通常与-f连用。&lt;/p&gt;
&lt;p&gt;-g Allow remote hosts to connect to forwarded ports.&lt;br&gt;在-L/-R/-D参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接。注：这个参数我在实践中似乎始终不起作用。&lt;/p&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://wandouduoduo.netlify.com/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Network" scheme="https://wandouduoduo.netlify.com/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix Server增加微信告警</title>
    <link href="https://wandouduoduo.netlify.com/articles/63c5195d.html"/>
    <id>https://wandouduoduo.netlify.com/articles/63c5195d.html</id>
    <published>2019-10-29T09:06:37.000Z</published>
    <updated>2019-10-29T09:26:02.779Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>微信现在是我们手机中必不可少的软件，通过它可以和朋友亲人聊天视频等。作为运维，让监控系统通过微信报警，及时提醒我们，保证线上服务稳定运行，这是SRE的职责所在。通过本教程学习，让zabbix  server增加微信报警媒介。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@p34044v ~]<span class="comment"># cat /etc/redhat-release </span></span><br><span class="line">CentOS Linux release 7.7.1908 (Core)</span><br><span class="line">[root@p34044v ~]<span class="comment"># python -V</span></span><br><span class="line">Python 2.7.5</span><br><span class="line">[root@p34044v ~]<span class="comment"># zabbix_server -V</span></span><br><span class="line">zabbix_server (Zabbix) 4.0.13</span><br><span class="line">Revision 4e383bb6c5 2 October 2019, compilation time: Oct  2 2019 08:45:35</span><br><span class="line"></span><br><span class="line">Copyright (C) 2019 Zabbix SIA</span><br><span class="line">License GPLv2+: GNU GPL version 2 or later &lt;http://gnu.org/licenses/gpl.html&gt;.</span><br><span class="line">This is free software: you are free to change and redistribute it according to</span><br><span class="line">the license. There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line"></span><br><span class="line">This product includes software developed by the OpenSSL Project</span><br><span class="line"><span class="keyword">for</span> use <span class="keyword">in</span> the OpenSSL Toolkit (http://www.openssl.org/).</span><br><span class="line"></span><br><span class="line">Compiled with OpenSSL 1.0.1e-fips 11 Feb 2013</span><br><span class="line">Running with OpenSSL 1.0.1e-fips 11 Feb 2013</span><br><span class="line">[root@p34044v ~]<span class="comment"># zabbix_agentd -V</span></span><br><span class="line">zabbix_agentd (daemon) (Zabbix) 4.0.9</span><br><span class="line">Revision 97a69d5d5a 5 June 2019, compilation time: Jun  7 2019 08:45:50</span><br><span class="line"></span><br><span class="line">Copyright (C) 2019 Zabbix SIA</span><br><span class="line">License GPLv2+: GNU GPL version 2 or later &lt;http://gnu.org/licenses/gpl.html&gt;.</span><br><span class="line">This is free software: you are free to change and redistribute it according to</span><br><span class="line">the license. There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line"></span><br><span class="line">This product includes software developed by the OpenSSL Project</span><br><span class="line"><span class="keyword">for</span> use <span class="keyword">in</span> the OpenSSL Toolkit (http://www.openssl.org/).</span><br><span class="line"></span><br><span class="line">Compiled with OpenSSL 1.0.1e-fips 11 Feb 2013</span><br><span class="line">Running with OpenSSL 1.0.1e-fips 11 Feb 2013</span><br><span class="line">[root@p34044v ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="申请企业微信号"><a href="#申请企业微信号" class="headerlink" title="申请企业微信号"></a>申请企业微信号</h2><h5 id="申请企业号并记录相关信息"><a href="#申请企业号并记录相关信息" class="headerlink" title="申请企业号并记录相关信息"></a>申请企业号并记录相关信息</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://qy.weixin.qq.com</span><br><span class="line"></span><br><span class="line">后边需要用到的几个信息：</span><br><span class="line">    1.登录网页 - 我的企业 - 企业ID：xxxxx</span><br><span class="line">        或者：企业微信客户端：工作台 - 管理企业 - 企业信息 - 企业ID</span><br></pre></td></tr></table></figure><h5 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">登录网页 - 应用与小程序 - 创建应用。创建完成后记录以下信息：</span><br><span class="line">    AgentId：xxxxx</span><br><span class="line">    Secret：SacUM-xxxxxxxxxx</span><br></pre></td></tr></table></figure><h5 id="添加通讯录（添加后才可接受告警消息）"><a href="#添加通讯录（添加后才可接受告警消息）" class="headerlink" title="添加通讯录（添加后才可接受告警消息）"></a>添加通讯录（添加后才可接受告警消息）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">登录网页 - 通讯录 - 添加成员</span><br></pre></td></tr></table></figure><h2 id="设置Python脚本"><a href="#设置Python脚本" class="headerlink" title="设置Python脚本"></a>设置Python脚本</h2><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y python-requests</span><br></pre></td></tr></table></figure><h5 id="准备Python脚本"><a href="#准备Python脚本" class="headerlink" title="准备Python脚本"></a>准备Python脚本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">附录内有具体脚本内容，这里是使用Python脚本来实现的。</span><br><span class="line">脚本内有3项内容是必须根据自己情况做修改的。详情请看脚本备注</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.查看Zabbix Server脚本目录设置</span></span><br><span class="line">[root@localhost ~]<span class="comment"># grep AlertScriptsPath /etc/zabbix/zabbix_server.conf</span></span><br><span class="line"><span class="comment">### Option: AlertScriptsPath</span></span><br><span class="line"><span class="comment"># AlertScriptsPath=$&#123;datadir&#125;/zabbix/alertscripts</span></span><br><span class="line">AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.编辑Python脚本</span></span><br><span class="line">vim /usr/lib/zabbix/alertscripts/weixin.py</span><br><span class="line">添加附录内脚本内容</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.给脚本执行权限</span></span><br><span class="line">chmod 755 /usr/lib/zabbix/alertscripts/weixin.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.测试脚本</span></span><br><span class="line">/usr/lib/zabbix/alertscripts/weixin.py name <span class="built_in">test</span> 123456</span><br><span class="line">    name：收件人账号（登录企业微信网站 - 通讯录 - 打开某个收件人 - 账号）</span><br><span class="line">    <span class="built_in">test</span>：标题?</span><br><span class="line">    123456：具体需要发送的内容</span><br><span class="line"></span><br><span class="line">如果没有错误的话，收件人将可以在手机APP企业微信上收到此消息。</span><br></pre></td></tr></table></figure><h5 id="手动建立日志文件并赋予写入权限"><a href="#手动建立日志文件并赋予写入权限" class="headerlink" title="手动建立日志文件并赋予写入权限"></a>手动建立日志文件并赋予写入权限</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">因为Python脚本设置了记录日志，但是脚本所在路径隶属于root组</span><br><span class="line">而Zabbix Server是使用zabbix用户运行的，对此目录没有写入权限</span><br><span class="line">所以这里先手动建立一个空的<span class="built_in">log</span>文件，并赋予所有用户写入权限</span><br><span class="line"></span><br><span class="line">touch /usr/lib/zabbix/alertscripts/weixin.log</span><br><span class="line">chmod 766 /usr/lib/zabbix/alertscripts/weixin.log</span><br></pre></td></tr></table></figure><h2 id="设置Zabbix-Server开启微信告警"><a href="#设置Zabbix-Server开启微信告警" class="headerlink" title="设置Zabbix Server开启微信告警"></a>设置Zabbix Server开启微信告警</h2><h5 id="添加告警媒介"><a href="#添加告警媒介" class="headerlink" title="添加告警媒介"></a>添加告警媒介</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">管理 - 报警媒介类型 - 创建媒体类型</span><br><span class="line">    名称：微信</span><br><span class="line">    类型：脚本</span><br><span class="line">    脚本名称：weixin.py</span><br><span class="line">    脚本参数：</span><br><span class="line">        &#123;ALERT.SENDTO&#125;</span><br><span class="line">        &#123;ALERT.SUBJECT&#125;</span><br><span class="line">        &#123;ALERT.MESSAGE&#125;</span><br></pre></td></tr></table></figure><h5 id="为用户添加报警媒介"><a href="#为用户添加报警媒介" class="headerlink" title="为用户添加报警媒介"></a>为用户添加报警媒介</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">管理 - 用户 - 报警媒介 - 添加</span><br><span class="line">    类型：微信</span><br><span class="line">    收件人：收件人账号（登录企业微信网站 - 通讯录 - 打开某个收件人 - 账号）</span><br><span class="line">    当启用时：1-7,00:00-24:00</span><br><span class="line">    如果存在严重性则使用：根据自己需要选择发送告警类型</span><br><span class="line">    已启用：必须勾选</span><br></pre></td></tr></table></figure><h5 id="打开触发器动作"><a href="#打开触发器动作" class="headerlink" title="打开触发器动作"></a>打开触发器动作</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.管理 - 动作：这里默认是停用状态，需要手动开启</span><br><span class="line"></span><br><span class="line">2.管理 - 动作 - Report problems to Zabbix administrators</span><br><span class="line">    操作 - 编辑：查看【仅送到】选项是否是所有或者微信。</span><br><span class="line">    </span><br><span class="line">    关于这里的操作细节：</span><br><span class="line">    步骤：1-1（假如故障持续了1个小时，它也只发送一次。）</span><br><span class="line">             （如果改成1-0，0是表示不限制.无限发送)</span><br><span class="line">              (发送间隔是下边的【步骤持续时间】）</span><br></pre></td></tr></table></figure><h4 id="模拟测试"><a href="#模拟测试" class="headerlink" title="模拟测试"></a>模拟测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将新某台被监控主机关机或zabbix-agentd暂停，查看是否能收到微信告警。</span><br></pre></td></tr></table></figure><h2 id="附录：使用普通微信接受消息"><a href="#附录：使用普通微信接受消息" class="headerlink" title="附录：使用普通微信接受消息"></a>附录：使用普通微信接受消息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">成员无需下载企业微信客户端，直接用微信扫码关注微工作台，即可在微信中接收企业通知和使用企业应用。</span><br><span class="line"></span><br><span class="line">方法：登录企业微信管理页面 - 我的企业 - 微工作台 - 邀请关注的二维码</span><br><span class="line">    关注后即可。</span><br></pre></td></tr></table></figure><h2 id="附录：Python脚本内容"><a href="#附录：Python脚本内容" class="headerlink" title="附录：Python脚本内容"></a>附录：Python脚本内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#author: 1327133225@qq.com</span></span><br><span class="line"><span class="comment">#date: 2019-01-13</span></span><br><span class="line"><span class="comment">#comment: zabbix接入微信报警脚本</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置记录日志</span></span><br><span class="line">logging.basicConfig(level = logging.DEBUG, format = <span class="string">'%(asctime)s, %(filename)s, %(levelname)s, %(message)s'</span>,</span><br><span class="line">                datefmt = <span class="string">'%a, %d %b %Y %H:%M:%S'</span>,</span><br><span class="line">                filename = os.path.join(<span class="string">'/usr/lib/zabbix/alertscripts'</span>,<span class="string">'weixin.log'</span>),</span><br><span class="line">                filemode = <span class="string">'a'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 必须修改1:企业ID</span></span><br><span class="line">corpid=<span class="string">'wwxxxxxx'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 必须修改2：Secret</span></span><br><span class="line">appsecret=<span class="string">'xxxxxxxxxxxxxxxxxxxxxxxxxx'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 必须修改3:AgentId</span></span><br><span class="line">agentid=xxxxxxxxx</span><br><span class="line"><span class="comment">#获取accesstoken</span></span><br><span class="line">token_url=<span class="string">'https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid='</span> + corpid + <span class="string">'&amp;corpsecret='</span> + appsecret</span><br><span class="line">req=requests.get(token_url)</span><br><span class="line">accesstoken=req.json()[<span class="string">'access_token'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#发送消息</span></span><br><span class="line">msgsend_url=<span class="string">'https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token='</span> + accesstoken</span><br><span class="line"></span><br><span class="line">touser=sys.argv[<span class="number">1</span>]</span><br><span class="line">subject=sys.argv[<span class="number">2</span>]</span><br><span class="line"><span class="comment">#toparty='3|4|5|6'</span></span><br><span class="line">message=sys.argv[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">params=&#123;</span><br><span class="line">        <span class="string">"touser"</span>: touser,</span><br><span class="line"><span class="comment">#       "toparty": toparty,</span></span><br><span class="line">        <span class="string">"msgtype"</span>: <span class="string">"text"</span>,</span><br><span class="line">        <span class="string">"agentid"</span>: agentid,</span><br><span class="line">        <span class="string">"text"</span>: &#123;</span><br><span class="line">                <span class="string">"content"</span>: message</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"safe"</span>:<span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req=requests.post(msgsend_url, data=json.dumps(params))</span><br><span class="line">logging.info(<span class="string">'sendto:'</span> + touser + <span class="string">';;subject:'</span> + subject + <span class="string">';;message:'</span> + message)</span><br></pre></td></tr></table></figure><h2 id="附录：shell脚本内容-待验证"><a href="#附录：shell脚本内容-待验证" class="headerlink" title="附录：shell脚本内容(待验证)"></a>附录：shell脚本内容(待验证)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="comment">#set -x</span></span><br><span class="line">CorpID=<span class="string">"wwbc27916706540977"</span>                   <span class="comment">#我的企业下面的CorpID</span></span><br><span class="line">Secret=<span class="string">"6cMYoDUUdOiLjawS487dLr4SNp1Gku_nQTq22uV9gNM"</span>            <span class="comment">#创建的应用那有Secret</span></span><br><span class="line">GURL=<span class="string">"https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=<span class="variable">$CorpID</span>&amp;corpsecret=<span class="variable">$Secret</span>"</span></span><br><span class="line">Token=$(/usr/bin/curl -s -G <span class="variable">$GURL</span> |awk -F\": <span class="string">'&#123;print $4&#125;'</span>|awk -F\" <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line"><span class="comment">#echo $Token</span></span><br><span class="line">PURL=<span class="string">"https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=<span class="variable">$Token</span>"</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">body</span></span>()&#123;</span><br><span class="line">        <span class="built_in">local</span> int agentid=1000002   <span class="comment">#改为AgentId 在创建的应用那里看</span></span><br><span class="line">        <span class="built_in">local</span> UserID=<span class="variable">$1</span>             <span class="comment">#发送的用户位于$1的字符串</span></span><br><span class="line">        <span class="built_in">local</span> PartyID=2           <span class="comment">#第一步看的通讯录中的部门ID</span></span><br><span class="line">        <span class="built_in">local</span> Msg=$(<span class="built_in">echo</span> <span class="string">"<span class="variable">$@</span>"</span> | cut -d<span class="string">" "</span> -f3-)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">'&#123;\n'</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">'\t"touser": "'</span><span class="string">"<span class="variable">$UserID</span>"</span>\"<span class="string">",\n"</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">'\t"toparty": "'</span><span class="string">"<span class="variable">$PartyID</span>"</span>\"<span class="string">",\n"</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">'\t"msgtype": "text",\n'</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">'\t"agentid": "'</span><span class="string">"<span class="variable">$agentid</span>"</span>\"<span class="string">",\n"</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">'\t"text": &#123;\n'</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">'\t\t"content": "'</span><span class="string">"<span class="variable">$Msg</span>"</span>\"<span class="string">"\n"</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">'\t&#125;,\n'</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">'\t"safe":"0"\n'</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">'&#125;\n'</span></span><br><span class="line">&#125;</span><br><span class="line">/usr/bin/curl --data-ascii <span class="string">"<span class="variable">$(body $1 $2 $3)</span>"</span> <span class="variable">$PURL</span></span><br></pre></td></tr></table></figure><h2 id="附录：github脚本"><a href="#附录：github脚本" class="headerlink" title="附录：github脚本"></a>附录：github脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/OneOaaS/weixin-alert</span><br><span class="line">使用教程参考：https://blog.51cto.com/11975865/2344314?<span class="built_in">source</span>=dra</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;微信现在是我们手机中必不可少的软件，通过它可以和朋友亲人聊天视频等。作为运维，让监控系统通过微信报警，及时提醒我们，保证线上服务稳定运行，这是SRE的职责所在。通过本教程学习，让zabbix  server增加微信报警媒介。&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@p34044v ~]&lt;span class=&quot;comment&quot;&gt;# cat /etc/redhat-release &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CentOS Linux release 7.7.1908 (Core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@p34044v ~]&lt;span class=&quot;comment&quot;&gt;# python -V&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Python 2.7.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@p34044v ~]&lt;span class=&quot;comment&quot;&gt;# zabbix_server -V&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zabbix_server (Zabbix) 4.0.13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Revision 4e383bb6c5 2 October 2019, compilation time: Oct  2 2019 08:45:35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Copyright (C) 2019 Zabbix SIA&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;License GPLv2+: GNU GPL version 2 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;This is free software: you are free to change and redistribute it according to&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;the license. There is NO WARRANTY, to the extent permitted by law.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;This product includes software developed by the OpenSSL Project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; use &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the OpenSSL Toolkit (http://www.openssl.org/).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Compiled with OpenSSL 1.0.1e-fips 11 Feb 2013&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running with OpenSSL 1.0.1e-fips 11 Feb 2013&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@p34044v ~]&lt;span class=&quot;comment&quot;&gt;# zabbix_agentd -V&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zabbix_agentd (daemon) (Zabbix) 4.0.9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Revision 97a69d5d5a 5 June 2019, compilation time: Jun  7 2019 08:45:50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Copyright (C) 2019 Zabbix SIA&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;License GPLv2+: GNU GPL version 2 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;This is free software: you are free to change and redistribute it according to&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;the license. There is NO WARRANTY, to the extent permitted by law.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;This product includes software developed by the OpenSSL Project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; use &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the OpenSSL Toolkit (http://www.openssl.org/).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Compiled with OpenSSL 1.0.1e-fips 11 Feb 2013&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running with OpenSSL 1.0.1e-fips 11 Feb 2013&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@p34044v ~]&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Zabbix" scheme="https://wandouduoduo.netlify.com/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>zabbix使用LDAP认证并批量导入用户</title>
    <link href="https://wandouduoduo.netlify.com/articles/970a7010.html"/>
    <id>https://wandouduoduo.netlify.com/articles/970a7010.html</id>
    <published>2019-10-29T05:57:07.000Z</published>
    <updated>2019-10-29T08:53:16.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>公司用openldap搭了一套ldap认证系统，用于统一内部各个系统的账户，避免每次添加或删除用户还得一个个登陆上去操作，使账户密码统一，能减轻很多工作和保证安全性，今天是想把ldap与zabbix进行结合。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>centos7.x</p><p>zabbix4.0.x</p><a id="more"></a><h2 id="配置zabbix"><a href="#配置zabbix" class="headerlink" title="配置zabbix"></a>配置zabbix</h2><h4 id="安装php-ldap模块"><a href="#安装php-ldap模块" class="headerlink" title="安装php-ldap模块"></a><strong>安装php-ldap模块</strong></h4><p>php需要这个模块来进行ldap认证，安装方法网上都有这里只列举一种；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">yum install php-ldap</span><br><span class="line"><span class="comment">#验证</span></span><br><span class="line">》/usr/<span class="built_in">local</span>/php/bin/php -m|grep ldap</span><br><span class="line">ldap</span><br></pre></td></tr></table></figure><h4 id="zabbix页面配置"><a href="#zabbix页面配置" class="headerlink" title="zabbix页面配置"></a><strong>zabbix页面配置</strong></h4><p><img src="/articles/970a7010/1.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">LDAP host：访问ldap的地址。格式：ldap://ip地址</span><br><span class="line">Port：默认389</span><br><span class="line">Base DN: dc=tencent,dc=com,也就是域名(tencent.com)</span><br><span class="line">Search attribute: uid，属性值，网上有填sAMAccountName。</span><br><span class="line"></span><br><span class="line">Bind DN： cn=Admin, ou=People, dc=tencent, dc=com。 cn就是在DC中创建的LDAPuser用户， ou就是LDAPuser属于哪个ou，dc=tencent和dc=com不在解释。</span><br><span class="line"></span><br><span class="line">Bind password：xxxx ，改密码为LDAPuser用户的密码</span><br><span class="line">Login：Admin</span><br><span class="line">User password：在DC中创建Admin用户的密码</span><br></pre></td></tr></table></figure><p>点击”Test”。如果没有报什么错误，就可以点击”Save”。现在ZABBIX的LDAP认证方式就已经配置完成了。</p><h4 id="用户配置"><a href="#用户配置" class="headerlink" title="用户配置"></a><strong>用户配置</strong></h4><p>上述配置完成后已经把ldap和zabbix打通了，用户登录zabbix时，会先到ldap认证，判断用户是否有效；但是zabbix不会把ldap的用户同步过了，你要登录，得先在zabbix上创建和ldap内同名的用户才行。</p><p><img src="/articles/970a7010/2.png" alt></p><p>验证登录</p><p><img src="/articles/970a7010/3.png" alt></p><h4 id="同步用户"><a href="#同步用户" class="headerlink" title="同步用户"></a>同步用户</h4><p>上面显得很被动了，于是写个脚本，定时往zabbix数据库插入用户，这样就免去手工创建的用户的烦恼。</p><p>先需要安装ldap客户端工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openldap-clients</span><br></pre></td></tr></table></figure><p><img src="/articles/970a7010/4.png" alt></p><p>先查询测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -x -LLL -H ldap://xxxxx -b ou=People,dc=xxxxx,dc=net -D <span class="string">"cn=admin,dc=xxxxxx,dc=net"</span> -w 密码 displayName|sed <span class="string">'/^$/d'</span>|sed <span class="string">'1d'</span></span><br></pre></td></tr></table></figure><p><img src="/articles/970a7010/5.png" alt></p><p>uid是zabbix的alias字段，displayName需要base64解码成中文名</p><p>同步脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> commands</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 避免中文乱码</span></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">ldap_list=<span class="string">'/usr/local/zabbix/sh/ldap.list'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先从ldap服务器把用户数据导入文件</span></span><br><span class="line">ldap_users=commands.getoutput(<span class="string">"ldapsearch -x -LLL -H ldap://xxxxxx -b ou=People,dc=xxxxx,dc=net -D "</span>cn=admin,dc=xxxxx,dc=net<span class="string">" -w xxxxx displayName|sed '/^$/d'|sed '1d' &gt; %s"</span> % ldap_list)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 因为zabbix的表没有自增id，所以每次操作都会记录下id，并递增</span></span><br><span class="line">idfile = <span class="string">'/usr/local/zabbix/sh/userid'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理元数据，把文件里的每行数据转化成方便使用的格式</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_item</span><span class="params">(fobj)</span>:</span></span><br><span class="line">    item = [<span class="string">''</span>, <span class="string">''</span>, <span class="string">''</span>]</span><br><span class="line">    <span class="keyword">for</span> no,line <span class="keyword">in</span> enumerate(fobj):</span><br><span class="line">        <span class="comment">#print no,line</span></span><br><span class="line">        slot = no % <span class="number">2</span></span><br><span class="line">        item[slot] = line.rstrip()</span><br><span class="line">        <span class="keyword">if</span> slot == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_user</span><span class="params">()</span>:</span></span><br><span class="line">    conn = pymysql.connect(host=<span class="string">'2.2.2.2'</span>, port=<span class="number">3306</span>, user=<span class="string">'zabbix'</span>, passwd=<span class="string">'zabbix'</span>, db=<span class="string">'zabbix'</span>, charset=<span class="string">'utf8'</span>)</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    fs = open(idfile,<span class="string">'r'</span>)</span><br><span class="line">    n = int(fs.read())</span><br><span class="line">    fs.close()</span><br><span class="line">    <span class="keyword">with</span> open(ldap_list) <span class="keyword">as</span> fobj:</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> get_item(fobj):</span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                s=<span class="string">'&#123;0&#125;&#123;1&#125;&#123;2&#125;'</span>.format(*item)</span><br><span class="line">                l = re.search(<span class="string">'uid=(.*),ou.*:: (.*)'</span>,s)</span><br><span class="line">                name = base64.b64decode(l.group(<span class="number">2</span>))</span><br><span class="line">                alias = l.group(<span class="number">1</span>)</span><br><span class="line">                search = cur.execute(<span class="string">"""select * from users where alias = %s"""</span>, (alias, ))</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> search:</span><br><span class="line">                    sql = <span class="string">"insert into users(userid,name,alias) values ('%s','%s','%s');"</span> % (n,name,alias)</span><br><span class="line">                    insert = cur.execute(sql)</span><br><span class="line">                    <span class="keyword">if</span> sql:</span><br><span class="line">                        <span class="keyword">print</span> <span class="string">"User %s Add Succed!"</span> % alias</span><br><span class="line">                        <span class="keyword">print</span> sql</span><br><span class="line">            <span class="keyword">except</span> AttributeError <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">print</span> e</span><br><span class="line">    conn.commit()   <span class="comment">#这步很必要，不然插入的数据不生效</span></span><br><span class="line">    cur.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    fe = open(idfile,<span class="string">'w'</span>)</span><br><span class="line">    fe.write(str(n))</span><br><span class="line">    fe.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    insert_user()</span><br></pre></td></tr></table></figure><p>执行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python insert_sql.py</span><br></pre></td></tr></table></figure><p><img src="/articles/970a7010/6.png" alt></p><p>到页面用户中就可看到</p><p><img src="/articles/970a7010/7.png" alt></p><p>登录下，认证是成功的，接下来，你可以对用户进行分组和授权了</p><h2 id="LDAP挂掉后该怎么办"><a href="#LDAP挂掉后该怎么办" class="headerlink" title="LDAP挂掉后该怎么办"></a>LDAP挂掉后该怎么办</h2><p>更改认证类型为Internal，然后使用Admin登陆，如果忘记密码，也可以重置Admin密码为admin。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#登录mysql，</span></span><br><span class="line"></span><br><span class="line">use zabbix;</span><br><span class="line"></span><br><span class="line">select userid,<span class="built_in">alias</span>,passwd from zabbix.users;</span><br><span class="line"></span><br><span class="line">update zabbix.users <span class="built_in">set</span> passwd=md5(<span class="string">"admin"</span>) <span class="built_in">where</span> userid=<span class="string">'1'</span>;</span><br><span class="line"></span><br><span class="line">update zabbix.config <span class="built_in">set</span> authentication_type=0;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>至此，zabbix  ldap认证教程已经全面完成。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;公司用openldap搭了一套ldap认证系统，用于统一内部各个系统的账户，避免每次添加或删除用户还得一个个登陆上去操作，使账户密码统一，能减轻很多工作和保证安全性，今天是想把ldap与zabbix进行结合。&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;centos7.x&lt;/p&gt;
&lt;p&gt;zabbix4.0.x&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Zabbix" scheme="https://wandouduoduo.netlify.com/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Nat回环(Lan--&gt;Lan端口映射原理)</title>
    <link href="https://wandouduoduo.netlify.com/articles/6fa007b.html"/>
    <id>https://wandouduoduo.netlify.com/articles/6fa007b.html</id>
    <published>2019-10-25T10:46:58.000Z</published>
    <updated>2019-10-25T11:10:04.904Z</updated>
    
    <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>局域网内网有服务器对外发布，基于对服务器的保护，内网用户需通过域名或者公网ip来访问内网服务器。如下图所示：</p><p> <img src="/articles/6fa007b/1.jpg" alt="img"></p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><p>DNAT：转换目标ip地址。</p><p>SNAT：转换源ip地址。</p><a id="more"></a><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>将外网202.96.128.5的80端口映射至内网192.168.2.10的80端口，外网地址对应有域名，以对外服务。同时，内网无DNS服务器，内网用户通过公网DNS解析通过同样的公网域名访问内网web服务器，要求防火墙能将内网访问该域名80端口的请求再次定向到内网服务器，使得内部访问公网域名的数据直接返回给内网服务器，以节省互联网带宽。</p><h2 id="数据流走向分析"><a href="#数据流走向分析" class="headerlink" title="数据流走向分析"></a>数据流走向分析</h2><p>内网服务器的真实ip和访问端口是192.168.2.10：80，要能够访问到这个服务器资源，必须需要把访问的目标ip 202.96.128.5转换成192.168.2.10，这样访问数据包才会转回内网，否则数据包交到公网上，将访问不到真实的服务器。那么需要在设备上做一次DNAT（对访问服务器的数据做目标ip的转换）。</p><p>如果只在设备上做一次DNAT上网转换的数据包和转发流程如下图所示:</p><p><img src="/articles/6fa007b/2.jpg" alt="img"></p><p>文中所列的数据包的结构均为：<img src="http://1874.img.pp.sohu.com.cn/images/blog/2010/7/7/16/11/12a5f3b367eg214.jpg" alt="img"></p><p>第一步：封装访问到目标ip为202.96.128.5的数据由客户端发出</p><p>第二步：在设备的LAN口接受到数据包，匹配DNAT规则，对数据包进行目标IP的转换</p><p>第三步：经过设备转换的数据包从lan口发出，交给局域网的真实服务器192.168.2.10.</p><p>第四步：服务器对访问请求做回应，它收到数据包的源ip是192.168.2.3，成为封装回应的目标ip，那么数据包有内网服务器直接发给内网主机</p><p>第五步：内网主机收到一个源ip为192.168.2.10的回应，和它发给目标ip为202.96.128.5的请求不一致，所以数据包直接被丢弃。在客户端看来，访问服务器失败。</p><p>由以上的数据包流程可以看出，要保证内网客户端能访问到服务器，只做DNAT是不够的。</p><p>那么需要服务器将回应数据发回给网关设备，再由网关设备转回给客户端，客户端才会接受数据。流程图应该如下图所示：</p><p><img src="/articles/6fa007b/3.jpg" alt="img"></p><p>那么要让服务器的数据发给网关，那么在服务器接收到的数据源IP是网关的IP，所以网关</p><p>发给服务器的数据包结构应该是：<img src="http://1874.img.pp.sohu.com.cn/images/blog/2010/7/7/16/13/12a5f3cfb78g215.jpg" alt="img"></p><p>这个数据包，和只做了一次DNAT从网关处发出的数据包：<img src="http://1821.img.pp.sohu.com.cn/images/blog/2012/3/20/17/10/u67435314_136eff6da7fg215.jpg" alt="img"></p><p>相比，源IP 做了转换。所以才需要在网关设备处再做一次SNAT。</p><p>如果网关要代理内网上外网的话，那么也启用了SNAT，进行私有地址到公网地址的转换。</p><p>所以这里的SNAT，必须要设置条件，符合条件才转换，而且要比上网的SNAT优先匹配。否则会对上网产生影响。</p><p>先经过网关设备DNAT处理，再经过SNAT处理的数据包走向如下图：</p><p><img src="/articles/6fa007b/4.jpg" alt="img"></p><p>由于在网关处做了DNAT和SNAT的转换，每做一次转换，设备都会记录一个链接，当服务器回应数据再经过网关时，网关会根据链接再做一次DNAT和SNAT，那么数据包发回给访问客户端的是:<img src="http://1871.img.pp.sohu.com.cn/images/blog/2012/3/20/17/11/u67435314_136eff82fa2g214.jpg" alt="img">，对于客户端来说，它之前是发给202.96.128.5的访问请求，所以会接受数据包。</p><p>此外对于网关设备来说，数据包是由LAN传给LAN 的，所以还需放通防火墙的LAN–LAN规则。</p><h2 id="应用举例"><a href="#应用举例" class="headerlink" title="应用举例"></a>应用举例</h2><p><strong>用户需求：</strong></p><p>用户内网有一台服务器：192.168.0.1，WAN1 口使用光纤接入，有公网IP 地址（202.x.x.x），该公网IP 地址对应一个域名：<a href="http://www.xxx.com，已经使用DNAT" target="_blank" rel="noopener">www.xxx.com，已经使用DNAT</a> 做端口映射把服务器发布至公网，并可以在公网访问<a href="http://www.xxx.com；现在要求在局域网（192.168.0.0/24" target="_blank" rel="noopener">www.xxx.com；现在要求在局域网（192.168.0.0/24</a> 连接在LAN 口），也可以通过访问域名：<a href="http://www.xxx.com" target="_blank" rel="noopener">www.xxx.com</a> 达到访问web server：192.168.0.1，规则如下：</p><p>用一国内产品演示：</p><p>1）      做端口映射，注意外网接口选择LAN 口</p><p><img src="/articles/6fa007b/Nat%E5%9B%9E%E7%8E%AF-Lan-Lan%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E5%8E%9F%E7%90%86%5C5.jpg" alt="img"> </p><p>2）  做SNAT：将源地址转换成LAN 口。</p><p><img src="/articles/6fa007b/6.jpg" alt="img"></p><p>如果有Lan-Lan规则，放通规则。开放LAN1→LAN1 的防火墙规则：</p><p><img src="/articles/6fa007b/7.jpg" alt="img"></p><p>注意事项：</p><p>a）如果服务器在DMZ 区，则第二步可以省略，但要注意放通LAN→DMZ 的防火墙规则。</p><p>b）上面的方法也适用于WAN 口为ADSL 拨号使用动态域名的情况。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h2&gt;&lt;p&gt;局域网内网有服务器对外发布，基于对服务器的保护，内网用户需通过域名或者公网ip来访问内网服务器。如下图所示：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;/articles/6fa007b/1.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;名词解释&quot;&gt;&lt;a href=&quot;#名词解释&quot; class=&quot;headerlink&quot; title=&quot;名词解释&quot;&gt;&lt;/a&gt;名词解释&lt;/h2&gt;&lt;p&gt;DNAT：转换目标ip地址。&lt;/p&gt;
&lt;p&gt;SNAT：转换源ip地址。&lt;/p&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://wandouduoduo.netlify.com/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Network" scheme="https://wandouduoduo.netlify.com/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>zabbix教程之自动注册</title>
    <link href="https://wandouduoduo.netlify.com/articles/276c6656.html"/>
    <id>https://wandouduoduo.netlify.com/articles/276c6656.html</id>
    <published>2019-10-25T02:25:23.000Z</published>
    <updated>2019-10-25T06:29:49.993Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>对于监控服务器越来越多的情况，如果还单独一个一个添加，那效率也太低，因此就要实现批量添加监控服务器的操作，Zabbix提供两种批量自动监控的方式：</p><p><strong>自动发现：由服务端主动发起，Zabbix Server开启发现进程，定时扫描局域网中IP服务器、设备。</strong></p><p><strong>自动注册：由客户端主动发起，客户端必须安装并启动Agentd，否则无法被自动注册添加至主机列表。对于使用SNMP的就要采用自动发现了。</strong></p><p>本篇教程就是自动注册，让客户端自动向Server去注册。</p><a id="more"></a><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h4 id="zabbix-agent批量安装脚本"><a href="#zabbix-agent批量安装脚本" class="headerlink" title="zabbix-agent批量安装脚本"></a>zabbix-agent批量安装脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 功能：centos6.x或7.x都可以自动安装最新稳定版4.0.x agent</span></span><br><span class="line"></span><br><span class="line">vernum=`cat /etc/redhat-release|sed -r <span class="string">'s/.* ([0-9]+)\..*/\1/'</span>`</span><br><span class="line"><span class="comment"># vernum也可以这样获取： rpm -q centos-release|cut -d- -f3</span></span><br><span class="line"></span><br><span class="line">wget http://repo.zabbix.com/zabbix/4.0/rhel/<span class="variable">$&#123;vernum&#125;</span>/x86_64/zabbix-agent-4.0.9-3.el<span class="variable">$&#123;vernum&#125;</span>.x86_64.rpm</span><br><span class="line"></span><br><span class="line">rpm -ivh zabbix-agent-4.0.9-3.el<span class="variable">$&#123;vernum&#125;</span>.x86_64.rpm</span><br><span class="line"></span><br><span class="line">sed -i.ori <span class="string">'s#Server=127.0.0.1#Server=10.216.1.106#'</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i.ori <span class="string">'s#ServerActive=127.0.0.1#ServerActive=10.216.1.106#'</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i.ori <span class="string">'s#Hostname=Zabbix server#Hostname='</span>$(hostname)<span class="string">'#'</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i.ori <span class="string">'180a HostMetadataItem=system.uname'</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line"></span><br><span class="line">service zabbix-agent start</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$vernum</span> == 6 ];<span class="keyword">then</span></span><br><span class="line">        chkconfig --add zabbix-agent</span><br><span class="line">        chkconfig zabbix-agent on</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        systemctl <span class="built_in">enable</span>  zabbix-agent.service</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="zabbix-server页面配置"><a href="#zabbix-server页面配置" class="headerlink" title="zabbix-server页面配置"></a>zabbix-server页面配置</h4><p>配置—-&gt;动作—–&gt;事件源选择自动注册—-&gt;创建动作</p><p><img src="/articles/276c6656/1.png" alt></p><p>触发条件</p><p><img src="/articles/276c6656/2.png" alt></p><p>我这里因为都是linux服务器，并且服务器hostname都有相同后缀，所以可以设置两个条件共同满足才可以。</p><p><img src="/articles/276c6656/3.png" alt></p><p>选择操作—-&gt;添加操作：添加主机，添加群组、链接到模板</p><p><img src="/articles/276c6656/4.png" alt></p><p>点击添加完成</p><p>等待几分钟 ，新的agent就会自动注册到server上了。可以查看server和agent日志查看</p><p><img src="/articles/276c6656/5.png" alt></p><p><img src="/articles/276c6656/6.png" alt></p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>页面操作是主机元数据的值 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]<span class="comment"># uname</span></span><br><span class="line">Linux</span><br></pre></td></tr></table></figure><p>或者是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]<span class="comment"># zabbix_get -s 192.168.11.12 -p 10050 -k "system.uname"</span></span><br><span class="line">Linux ltt02.xxx.net 3.10.0-693.el7.x86_64 <span class="comment">#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64</span></span><br></pre></td></tr></table></figure><p>获取到的就是agent配置中，把类型赋值给主机元数据，在条件中就可以设定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HostMetadataItem=system.uname</span><br></pre></td></tr></table></figure><p>同理：hostname也是一样的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;对于监控服务器越来越多的情况，如果还单独一个一个添加，那效率也太低，因此就要实现批量添加监控服务器的操作，Zabbix提供两种批量自动监控的方式：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自动发现：由服务端主动发起，Zabbix Server开启发现进程，定时扫描局域网中IP服务器、设备。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自动注册：由客户端主动发起，客户端必须安装并启动Agentd，否则无法被自动注册添加至主机列表。对于使用SNMP的就要采用自动发现了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本篇教程就是自动注册，让客户端自动向Server去注册。&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Zabbix" scheme="https://wandouduoduo.netlify.com/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix在Ubuntu 14.04上apt-get安装</title>
    <link href="https://wandouduoduo.netlify.com/articles/aeb6452a.html"/>
    <id>https://wandouduoduo.netlify.com/articles/aeb6452a.html</id>
    <published>2019-10-24T14:25:16.000Z</published>
    <updated>2019-10-25T01:53:32.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装Apache、Mysql、Php、zabbix</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install apache2 mysql-server libapache2-mod-php5 php5-gd php5-mysql  php5-common zabbix-server-mysql zabbix-frontend-php</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><h4 id="配置数据库连接"><a href="#配置数据库连接" class="headerlink" title="配置数据库连接"></a>配置数据库连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/zabbix/zabbix_server.conf</span><br></pre></td></tr></table></figure><p>修改相关</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line">#非必需，但推荐</span><br><span class="line">StartDiscoverers=5</span><br></pre></td></tr></table></figure><h4 id="创建mysql账号"><a href="#创建mysql账号" class="headerlink" title="创建mysql账号"></a>创建mysql账号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">mysql&gt; create user &apos;zabbix&apos;@&apos;localhost&apos; identified by &apos;zabbix&apos;;</span><br><span class="line">mysql&gt; create database zabbix default character set utf8;</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to &apos;zabbix&apos;@&apos;localhost&apos;;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; exit;</span><br></pre></td></tr></table></figure><h4 id="导入初始化数据"><a href="#导入初始化数据" class="headerlink" title="导入初始化数据"></a>导入初始化数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/zabbix-server-mysql/</span><br><span class="line">sudo gunzip *.gz</span><br><span class="line">mysql -u zabbix -p zabbix &lt; schema.sql</span><br><span class="line">mysql -u zabbix -p zabbix &lt; images.sql</span><br><span class="line">mysql -u zabbix -p zabbix &lt; data.sql</span><br></pre></td></tr></table></figure><h4 id="修改-PHP-参数"><a href="#修改-PHP-参数" class="headerlink" title="修改 PHP 参数"></a>修改 PHP 参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/php5/apache2/php.ini</span><br></pre></td></tr></table></figure><p>修改项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_max_size = 16M</span><br><span class="line">max_execution_time = 300</span><br><span class="line">max_input_time = 300</span><br><span class="line">date.timezone = &quot;Asia/Shanghai&quot;</span><br></pre></td></tr></table></figure><h4 id="配置网页"><a href="#配置网页" class="headerlink" title="配置网页"></a>配置网页</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/share/doc/zabbix-frontend-php/examples/zabbix.conf.php.example /etc/zabbix/zabbix.conf.php</span><br><span class="line">sudo vim /etc/zabbix/zabbix.conf.php</span><br></pre></td></tr></table></figure><p>修改项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$DB[&apos;DATABASE&apos;] = &apos;zabbix&apos;;</span><br><span class="line">$DB[&apos;USER&apos;] = &apos;zabbix&apos;;</span><br><span class="line">$DB[&apos;PASSWORD&apos;] = &apos;zabbix&apos;</span><br></pre></td></tr></table></figure><p>配置apache</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/share/doc/zabbix-frontend-php/examples/apache.conf /etc/apache2/conf-available/zabbix.conf</span><br><span class="line">sudo a2enconf zabbix.conf</span><br><span class="line">sudo a2enmod alias</span><br><span class="line">sudo service apache2 restart</span><br></pre></td></tr></table></figure><h4 id="配置-zabbix-server-启动"><a href="#配置-zabbix-server-启动" class="headerlink" title="配置 zabbix server 启动"></a>配置 zabbix server 启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/default/zabbix-server</span><br></pre></td></tr></table></figure><p>修改项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">START=yes</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service zabbix-server start</span><br></pre></td></tr></table></figure><h4 id="本机监控"><a href="#本机监控" class="headerlink" title="本机监控"></a>本机监控</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install zabbix-agent</span><br><span class="line">sudo service zabbix-agent restart</span><br></pre></td></tr></table></figure><h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.xxx.xxx.xxx/zabbix</span><br></pre></td></tr></table></figure><p>缺省的账户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username = admin</span><br><span class="line">Password = zabbix</span><br></pre></td></tr></table></figure><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install zabbix-agent</span><br></pre></td></tr></table></figure><p>修改配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/zabbix/zabbix_agentd.conf</span><br></pre></td></tr></table></figure><p>调整项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Server=127.0.0.1 #修改为 zabbix server 服务器的IP，如果有网关或被监控机为虚拟机也加上母机的IP</span><br><span class="line">ServerActive=127.0.0.1 #修改为 zabbix server 服务器的IP</span><br><span class="line">Hostname=Zabbix server #修改为网页里面添加的Hostname，需要保持一致。</span><br></pre></td></tr></table></figure><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p><strong>中文显示</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install language-pack-zh-hans</span><br></pre></td></tr></table></figure><p><a href="http://www.ttlsa.com/monitor/zabbix/" target="_blank" rel="noopener">zabbix</a>是一个多语言监控系统，默认使用英文并且也支持中文语言，详见《<a href="http://www.ttlsa.com/zabbix/zabbix-convert-into-chinese-8-ttlsa/" target="_blank" rel="noopener">zabbix汉化方法</a>》，但是近期有人反映说zabbix里面看不到中文语言.请往下看</p><p><strong>zabbix不支持中文图</strong></p><p><img src="/articles/aeb6452a/1.png" alt="Linux"></p><p><strong>开启zabbix对中文的支持</strong></p><p>原来zabbix默认把对中文的支持给关闭了，我们需要修改zabbix的<a href="http://www.ttlsa.com/php/" target="_blank" rel="noopener">php</a>源文件. 修改站点根目录下include/locales.inc.php文件.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim include/locales.inc.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getLocales</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> array(</span><br><span class="line">                <span class="string">'en_GB'</span> =&gt; array(<span class="string">'name'</span> =&gt; _(<span class="string">'English (en_GB)'</span>),        <span class="string">'display'</span> =&gt; <span class="literal">true</span>),</span><br><span class="line">                <span class="string">'en_US'</span> =&gt; array(<span class="string">'name'</span> =&gt; _(<span class="string">'English (en_US)'</span>),        <span class="string">'display'</span> =&gt; <span class="literal">true</span>),</span><br><span class="line">                <span class="string">'bg_BG'</span> =&gt; array(<span class="string">'name'</span> =&gt; _(<span class="string">'Bulgarian (bg_BG)'</span>),      <span class="string">'display'</span> =&gt; <span class="literal">true</span>),</span><br><span class="line">                <span class="string">'zh_CN'</span> =&gt; array(<span class="string">'name'</span> =&gt; _(<span class="string">'Chinese (zh_CN)'</span>),        <span class="string">'display'</span> =&gt; <span class="literal">true</span>),</span><br><span class="line">                //原本这里为<span class="literal">false</span>,请改为<span class="literal">true</span></span><br><span class="line">                ...........代码省略掉........</span><br><span class="line">        );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>中文乱码</strong></p><p>1、历史记录处出现 ???? 乱码：</p><p><img src="/articles/aeb6452a/2.png" alt="img"></p><p>出现原因：</p><p>mysql数据库默认字符集为 latin1，而 zabbix 需要使用 utf8，在初始化创建 zabbix 库时没有指定具体的字符集，倒入三张表时会继承 Mysql 的默认字符集，所以此处会出现乱码；</p><p><img src="/articles/aeb6452a/3.png" alt="img"></p><p>解决办法：</p><p>1、将 zabbix 数据库中的表备份；</p><p>2、手动删除 zabbix 数据库；</p><p>3、重新创建 zabbix 库时手动指定字符集为 utf8；</p><p>4、将倒出的 sql 文件中字符集为latin1的表字符集替换为 utf8；</p><p>5、将备份的zabbix库重新倒入即可；</p><p><img src="/articles/aeb6452a/4.png" alt="img"></p><p><img src="/articles/aeb6452a/5.png" alt="img"></p><p><img src="/articles/aeb6452a/6.png" alt="img"></p><p><img src="/articles/aeb6452a/7.png" alt="img"></p><p><img src="/articles/aeb6452a/8.png" alt="img"></p><p><img src="/articles/aeb6452a/9.png" alt="img"></p><p>此时重新访问 zabbix web页面，点击几次菜单，历史记录处一切正常；</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;安装Apache、Mysql、Php、zabbix&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install apache2 mysql-server libapache2-mod-php5 php5-gd php5-mysql  php5-common zabbix-server-mysql zabbix-frontend-php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Zabbix" scheme="https://wandouduoduo.netlify.com/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>git拉取项目下单个目录</title>
    <link href="https://wandouduoduo.netlify.com/articles/25be17f8.html"/>
    <id>https://wandouduoduo.netlify.com/articles/25be17f8.html</id>
    <published>2019-10-24T14:13:58.000Z</published>
    <updated>2019-10-25T01:53:32.481Z</updated>
    
    <content type="html"><![CDATA[<p>有时git库里的东西比较多，我们只希望像SVN一样，只拉取git库的一个目录。</p><p>例如：基础代码仓库infra-code_ops有很多基础代码，我们只想拉取仓库里nginx-conf目录的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git init infra-code_ops-nginx &amp;&amp; <span class="built_in">cd</span>  infra-code_ops-nginx          //初始化仓库,并进入该目录</span><br><span class="line">$ git remote add -f origin http:``//gitlab.xxx.com/ops/infra-code_ops.git   //添加远程仓库地址</span><br><span class="line">$ git config core.sparsecheckout ``<span class="literal">true</span>    //开启sparse checkout功能</span><br><span class="line">$ <span class="built_in">echo</span> ``<span class="string">"nginx-conf/"</span>` `&gt;&gt; .git/info/sparse-checkout   //将nginx-conf/目录写入到该文件中</span><br><span class="line">$ cat .git/info/sparse-checkout   //确认查看该文件内容</span><br><span class="line">$ git pull origin master    //拉取远程master分支</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有时git库里的东西比较多，我们只希望像SVN一样，只拉取git库的一个目录。&lt;/p&gt;
&lt;p&gt;例如：基础代码仓库infra-code_ops有很多基础代码，我们只想拉取仓库里nginx-conf目录的文件。&lt;/p&gt;
&lt;figure class=&quot;highlight bash
      
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Git" scheme="https://wandouduoduo.netlify.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Docker知识点</title>
    <link href="https://wandouduoduo.netlify.com/articles/1e48ce52.html"/>
    <id>https://wandouduoduo.netlify.com/articles/1e48ce52.html</id>
    <published>2019-10-24T14:08:06.000Z</published>
    <updated>2019-10-25T07:08:13.284Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>运维日常工作中常见服务的docker快速安装汇总。</p><p>cadvisor docker监控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run —cpu-period=100000 —cpu-quota=100000 -m 1g --volume=/:/rootfs:ro --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=9999:8080 --name=cadvisor google/cadvisor -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=172.18.203.15:8086 -storage_driver_user=cadvisor -storage_driver_password=cadvisor</span><br></pre></td></tr></table></figure><a id="more"></a><p>启动postgresql容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run pgsql -p 0.0.0.0:5432:5432 -e POSTGRES_PASSWORD=jftest123 -v /data/postgres:/var/lib/postgresql/data -d postgres</span><br></pre></td></tr></table></figure><p>启动rocketmq namesrv 容器 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --name rmq-namesrv \</span><br><span class="line">--net=host \</span><br><span class="line">-v $PWD/test/namesrv/logs:/opt/logs \</span><br><span class="line">-v $PWD/test/namesrv/store:/opt/store \</span><br><span class="line">-d registry-nexus.jr.qa.ly.com:10013/rocketmq-namesrv:4.2.0</span><br></pre></td></tr></table></figure><p>启动rocketmq broker 容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --name rmq-broker \</span><br><span class="line">--net=host \</span><br><span class="line">-v $PWD/test/broker/logs:/opt/logs \</span><br><span class="line">-v $PWD/test/broker/store:/opt/store \</span><br><span class="line">-v $PWD/test/broker/conf:/opt/conf \</span><br><span class="line">-d registry-nexus.jr.qa.ly.com:10013/rocketmq-broker:4.2.0 sh /opt/rocketmq-4.2.0/bin/mqbroker -c /opt/conf/broker.properties</span><br></pre></td></tr></table></figure><p>过滤ip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E -o &quot;172.18.[0-9]&#123;1,3&#125;[\.][0-9]&#123;1,3&#125;&quot; filename</span><br></pre></td></tr></table></figure><p>linux删除乱码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . ! -regex &apos;.*\.jar\|.*\.war\|.*\.zip&apos;|xargs rm</span><br></pre></td></tr></table></figure><p>ansible命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ansible rabbitmq -m shell -a &quot;cp /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.20180315&quot;</span><br><span class="line">ansible rabbitmq -m shell -a &quot;mv /etc/haproxy/template.cfg.bak /etc/haproxy/haproxy.bak&quot;</span><br><span class="line">ansible rabbitmq -m shell -a &quot;mv /etc/haproxy/template.cfg /etc/haproxy/haproxy.cfg&quot;</span><br><span class="line">ansibel rabbitmq -m shell -a &quot;/etc/init.d/haproxy restart&quot;</span><br></pre></td></tr></table></figure><p>inluxdb保留策略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SHOW RETENTION POLICIES ON cadvisor</span><br><span class="line">CREATE RETENTION POLICY &quot;15_days&quot; ON &quot;cadvisor&quot; DURATION 15d REPLICATION 1 DEFAULT</span><br><span class="line">drop retention POLICY &quot;15_days&quot; ON &quot;cadvisor&quot;</span><br></pre></td></tr></table></figure><p>elasticsearch</p><p>标准配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cluster.name: sunelk</span><br><span class="line">node.name: node-195</span><br><span class="line">path.data: /home/es/elasticsearch/data/</span><br><span class="line">path.logs: /home/es/elasticsearch/logs/</span><br><span class="line"></span><br><span class="line">bootstrap.memory_lock: false</span><br><span class="line">bootstrap.system_call_filter: false</span><br><span class="line"></span><br><span class="line">node.master: true   </span><br><span class="line">node.data: false   </span><br><span class="line">node.ingest: false   </span><br><span class="line">search.remote.connect: false </span><br><span class="line"></span><br><span class="line">network.host: 0.0.0.0  </span><br><span class="line"></span><br><span class="line">http.port: 9200</span><br><span class="line"></span><br><span class="line">discovery.zen.ping.unicast.hosts: [&quot;10.10.0.193&quot;, &quot;10.10.0.194&quot;,&quot;10.10.0.195&quot;]     </span><br><span class="line">                                                                        </span><br><span class="line">discovery.zen.minimum_master_nodes: 2 </span><br><span class="line">      </span><br><span class="line">http.cors.enabled: true                                                                                                                                                                                                   </span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure><p>验证</p><p><a href="http://10.10.0.195:9200/_cat/nodes?v" target="_blank" rel="noopener">http://10.10.0.195:9200/_cat/nodes?v</a></p><p><a href="http://10.10.0.195:9200/_cluster/health" target="_blank" rel="noopener">http://10.10.0.195:9200/_cluster/health</a></p><p>集群健康状况</p><p>curl ‘192.168.77.128:9200/_cluster/health?pretty’</p><p>集群详细情况</p><p>curl ‘192.168.77.128:9200/_cluster/state?pretty’</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;运维日常工作中常见服务的docker快速安装汇总。&lt;/p&gt;
&lt;p&gt;cadvisor docker监控&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run —cpu-period=100000 —cpu-quota=100000 -m 1g --volume=/:/rootfs:ro --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=9999:8080 --name=cadvisor google/cadvisor -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=172.18.203.15:8086 -storage_driver_user=cadvisor -storage_driver_password=cadvisor&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Docker" scheme="https://wandouduoduo.netlify.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>centos7 yum安装zabbix4.0长期稳定版及优化</title>
    <link href="https://wandouduoduo.netlify.com/articles/4140dae2.html"/>
    <id>https://wandouduoduo.netlify.com/articles/4140dae2.html</id>
    <published>2019-10-24T04:33:35.000Z</published>
    <updated>2019-10-24T08:40:37.384Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>zabbix监控系统是目前企业常用的监控系统之一。具有快速上手，监控简单明了等特点。通过本文教程快速安装zabbix4.0 LST监控系统，为企业搭建监控系统，保驾护航。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>centos7.x</p><p>zabbix4.0.x  LST</p><h2 id="参考文档和下载地址"><a href="#参考文档和下载地址" class="headerlink" title="参考文档和下载地址"></a>参考文档和下载地址</h2><p><a href="https://www.zabbix.com/documentation/4.0/zh/manual" target="_blank" rel="noopener">官方文档</a></p><p><a href="http://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/" target="_blank" rel="noopener">下载地址</a></p><a id="more"></a><h2 id="环境确认"><a href="#环境确认" class="headerlink" title="环境确认"></a>环境确认</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/redhat-release <span class="comment">#  查看CentOS版本 </span></span><br><span class="line">cat /proc/version         <span class="comment">#查看存放与内核相关的文件</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/1.png" alt></p><h2 id="搭建之前的操作"><a href="#搭建之前的操作" class="headerlink" title="搭建之前的操作"></a><strong>搭建之前的操作</strong></h2><h4 id="升级系统组件到最新的版本"><a href="#升级系统组件到最新的版本" class="headerlink" title="升级系统组件到最新的版本"></a><strong>升级系统组件到最新的版本</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/2.png" alt></p><h4 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a><strong>关闭selinux</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/selinux/config    <span class="comment">#将SELINUX=enforcing改为SELINUX=disabled 设置后需要重启才能生效</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/3.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0       <span class="comment">#临时关闭命令</span></span><br><span class="line">getenforce         <span class="comment">#检测selinux是否关闭，Disabled 为关闭</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/4.png" alt></p><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a><strong>关闭防火墙</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state    <span class="comment">#查看默认防火墙状态，关闭后显示not running，开启后显示running</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/5.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service    <span class="comment">#临时关闭firewall</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service <span class="comment">#禁止firewall开机启动</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/6.png" alt></p><h2 id="搭建LAMP环境"><a href="#搭建LAMP环境" class="headerlink" title="搭建LAMP环境"></a><strong>搭建LAMP环境</strong></h2><h4 id="安装所需所有软体仓库"><a href="#安装所需所有软体仓库" class="headerlink" title="安装所需所有软体仓库"></a><strong>安装所需所有软体仓库</strong></h4><p>Zabbix是建立在LAMP或者LNMP环境之上，在此为了方便就使用yum安装LAMP环境.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y httpd mariadb-server mariadb php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mhash</span><br><span class="line"></span><br><span class="line">rpm -qa httpd php mariadb            <span class="comment">#安装完成后检查应用版本</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/7.png" alt></p><p><img src="/articles/4140dae2/centos7-yum%E5%AE%89%E8%A3%85zabbix4-0%E9%95%BF%E6%9C%9F%E7%A8%B3%E5%AE%9A%E7%89%88%E5%8F%8A%E4%BC%98%E5%8C%96%5C8.png" alt></p><h4 id="编辑httpd"><a href="#编辑httpd" class="headerlink" title="编辑httpd"></a><strong>编辑httpd</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/httpd/conf/httpd.conf</span><br><span class="line"></span><br><span class="line">ServerName www.zabbixyk.com      <span class="comment">#修改为主机名</span></span><br><span class="line">DirectoryIndex index.html index.php   <span class="comment"># 添加首页支持格式</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/9.png" alt></p><h4 id="编辑配置php，配置中国时区"><a href="#编辑配置php，配置中国时区" class="headerlink" title="编辑配置php，配置中国时区"></a><strong>编辑配置php，配置中国时区</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/php.ini</span><br><span class="line"></span><br><span class="line">date.timezone = Asia/Shanghai   <span class="comment"># 配置时区</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/10.png" alt></p><h4 id="启动httpd和mysqld服务"><a href="#启动httpd和mysqld服务" class="headerlink" title="启动httpd和mysqld服务"></a><strong>启动httpd和mysqld服务</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd   <span class="comment">#启动并加入开机自启动httpd</span></span><br><span class="line">systemctl <span class="built_in">enable</span> httpd</span><br><span class="line">systemctl start mariadb  <span class="comment">#启动并加入开机自启动mysqld</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line"></span><br><span class="line">ss -anplt | grep httpd   <span class="comment">#查看httpd启动情况，80端口监控表示httpd已启动</span></span><br><span class="line">ss -naplt | grep mysqld  <span class="comment">#查看mysqld启动情况，3306端口监控表示mysqld已启动</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/11.png" alt></p><p><img src="/articles/4140dae2/12.png" alt></p><p><img src="/articles/4140dae2/13.png" alt></p><h4 id="创建一个测试页"><a href="#创建一个测试页" class="headerlink" title="创建一个测试页"></a><strong>创建一个测试页</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /var/www/html/index.php <span class="comment">#创建一个测试页，并编辑</span></span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo()</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/14.png" alt></p><p><img src="/articles/4140dae2/15.png" alt></p><h4 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://127.0.0.1 -I         <span class="comment">#本地测试</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/16.png" alt></p><h4 id="配置mysql和权限"><a href="#配置mysql和权限" class="headerlink" title="配置mysql和权限"></a><strong>配置mysql和权限</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root password ykadmin123           <span class="comment">#设置数据库root密码</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/17.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p        <span class="comment">#root用户登陆数据库</span></span><br><span class="line">CREATE DATABASE zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;       <span class="comment">#创建zabbix数据库（中文编码格式）</span></span><br><span class="line">GRANT all ON zabbix.* TO <span class="string">'zabbix'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'ykadmin123'</span>;  <span class="comment">#授予zabbix用户zabbix数据库的所有权限，密码ykadmin123</span></span><br><span class="line">flush privileges;    <span class="comment">#刷新权限</span></span><br><span class="line">quit                 <span class="comment">#退出数据库</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/18.png" alt></p><p>为保证zabbix用户也可以登录数据库，若出现本地无法登录情况，解决方式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p  <span class="comment">#使用root账户登录数据库；</span></span><br><span class="line">select user,host from mysql.user;   <span class="comment">#有空用户名称占用导致本地无法登录远程可登录</span></span><br><span class="line">drop user <span class="string">''</span>@localhost;  <span class="comment">#删除空用户</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/19.png" alt></p><h2 id="安装zabbix"><a href="#安装zabbix" class="headerlink" title="安装zabbix"></a>安装zabbix</h2><h4 id="安装依赖包-组件"><a href="#安装依赖包-组件" class="headerlink" title="安装依赖包 + 组件"></a><strong>安装依赖包 + 组件</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install net-snmp net-snmp-devel curl curl-devel libxml2 libxml2-devel libevent-devel.x86_64 javacc.noarch  javacc-javadoc.noarch javacc-maven-plugin.noarch javacc*</span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/20.png" alt></p><h4 id="安装zabbix-server，并初始化库"><a href="#安装zabbix-server，并初始化库" class="headerlink" title="安装zabbix-server，并初始化库"></a>安装zabbix-server，并初始化库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install php-bcmath php-mbstring -y <span class="comment">#安装php支持zabbix组件</span></span><br><span class="line"> </span><br><span class="line">rpm -ivh http://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm  <span class="comment">#会自动生成yum源文件，保证系统可以上网</span></span><br><span class="line"> </span><br><span class="line">yum install zabbix-server-mysql zabbix-web-mysql -y    <span class="comment">#安装zabbix组件</span></span><br><span class="line"> </span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql-4.0.0/create.sql.gz | mysql -uzabbix -p -h 172.18.20.224 zabbix   <span class="comment">#导入数据到数据库zabbix中(最后一个zabbix是数据库zabbix)，且因为用户zabbix是%(任意主机)，所以登录时需要加上当前主机ip(-h 172.18.20.224),密码是用户zabbix登陆密码ykadmin123</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/21.png" alt></p><p><img src="/articles/4140dae2/22.png" alt></p><p><img src="/articles/4140dae2/23.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/zabbix/zabbix_server.conf   <span class="comment">#配置数据库用户及密码</span></span><br><span class="line">grep -n <span class="string">'^'</span>[a-Z] /etc/zabbix/zabbix_server.conf   <span class="comment">#确认数据库用户及密码</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/24.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/httpd/conf.d/zabbix.conf     //修改时区</span><br><span class="line"></span><br><span class="line">将<span class="comment"># php_value date.timezone Europe/Riga 变更成php_value date.timezone Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server <span class="comment"># #启动并加入开机自启动zabbix-server</span></span><br><span class="line">systemctl start zabbix-server</span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/25.png" alt></p><p><img src="/articles/4140dae2/26.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anpt | grep zabbix      //监听在10051端口上,如果没监听成功，可重启zabbix-server服务试试</span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/27.png" alt></p><p>建议重启服务器，再继续。</p><h4 id="web界面安装zabbix"><a href="#web界面安装zabbix" class="headerlink" title="web界面安装zabbix"></a><strong>web界面安装zabbix</strong></h4><p>如果以上步骤无误，现在可以使用web打开  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://172.18.20.224/zabbix　　//注意这里IE浏览器打不开，本次测试使用chrome浏览器</span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/28.png" alt></p><p><img src="/articles/4140dae2/29.png" alt></p><p><img src="/articles/4140dae2/30.png" alt></p><p><img src="/articles/4140dae2/31.png" alt></p><p><img src="/articles/4140dae2/32.png" alt></p><p><img src="/articles/4140dae2/33.png" alt></p><p><img src="/articles/4140dae2/34.png" alt></p><p><img src="/articles/4140dae2/35.png" alt></p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><h4 id="安装graphtree"><a href="#安装graphtree" class="headerlink" title="安装graphtree"></a>安装graphtree</h4><p>graphtree的功能</p><blockquote><p>1)集中展示所有分组设备 </p><p>2)集中展示一个分组图像 </p><p>3)集中展示一个设备图像 </p><p>4)展示设备下的Application </p><p>5)展示每个Application下的图像</p><p> 6)展示每个Application下的日志 </p><p>7)对原生无图的监控项进行绘图 (注意问题:在组和主机级别，默认只显示<a href="https://www.2cto.com/os/" target="_blank" rel="noopener">系统</a>配置的graph)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/zabbix</span><br><span class="line">wget https://raw.githubusercontent.com/OneOaaS/graphtrees/master/graphtree3.2.x.patch</span><br><span class="line">yum install -y patch</span><br><span class="line">patch -Np0 &lt; graphtree3.2.x.patch</span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/36.png" alt></p><p><strong># 注意此处的权限，必须和nginx或者apache的用户一致，我用的是apache，则此处为chown -R apache:apache oneoaas</strong></p><p>graphtree的删除广告部分修改配置 进入graphtree配置文件，进行相关修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim oneoaas/templates/graphtree/graphtree.tpl</span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/37.png" alt></p><p>修改logo</p><p><img src="/articles/4140dae2/38.png" alt></p><p><img src="/articles/4140dae2/39.png" alt></p><p>重启httpd服务然后查看效果</p><p><img src="/articles/4140dae2/40.png" alt></p><p><img src="/articles/4140dae2/41.png" alt></p><h4 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h4><p><img src="/articles/4140dae2/42.png" alt></p><h6 id="复制字体"><a href="#复制字体" class="headerlink" title="复制字体"></a>复制字体</h6><p>复制本地电脑C:\Windows\Fonts\simkai.ttf（楷体）上传到zabbix服务器网站目录的fonts目录下</p><p><img src="/articles/4140dae2/43.png" alt></p><p>yum或rpm安装的zabbix-server字体目录为：/usr/share/zabbix/assets/fonts</p><p><img src="/articles/4140dae2/44.png" alt></p><p>graphfont.ttf是zabbix默认字符集，simkai.ttf是从windows复制过来的字体文件，权限最好给777，要不会影响到zabbix图形显示异常。</p><h6 id="字体替换"><a href="#字体替换" class="headerlink" title="字体替换"></a>字体替换</h6><p>方法一：</p><p>修改此/usr/share/zabbix/include/defines.inc.php文件中字体的配置，将里面关于字体设置从graphfont都替换成simkai，注意:realpath的字体设置路径</p><p><img src="/articles/4140dae2/47.png" alt></p><p>方法二：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span>  /etc/alternatives/</span><br><span class="line">mv zabbix-web-font zabbix-web-font.bak   <span class="comment">#备份</span></span><br><span class="line">ln -sf /usr/share/zabbix/assets/fonts/simkai.ttf zabbix-web-font  <span class="comment">#新链接</span></span><br></pre></td></tr></table></figure><p><img src="/articles/4140dae2/45.png" alt></p><p>到页面刷新就可看到，如果没有更改，请重启zabbix-server</p><p><img src="/articles/4140dae2/46.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;zabbix监控系统是目前企业常用的监控系统之一。具有快速上手，监控简单明了等特点。通过本文教程快速安装zabbix4.0 LST监控系统，为企业搭建监控系统，保驾护航。&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;centos7.x&lt;/p&gt;
&lt;p&gt;zabbix4.0.x  LST&lt;/p&gt;
&lt;h2 id=&quot;参考文档和下载地址&quot;&gt;&lt;a href=&quot;#参考文档和下载地址&quot; class=&quot;headerlink&quot; title=&quot;参考文档和下载地址&quot;&gt;&lt;/a&gt;参考文档和下载地址&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.zabbix.com/documentation/4.0/zh/manual&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="监控运维" scheme="https://wandouduoduo.netlify.com/categories/%E7%9B%91%E6%8E%A7%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Zabbix" scheme="https://wandouduoduo.netlify.com/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>jira低版本(7.4.1)发现漏洞升级到最新版本(8.4.1)</title>
    <link href="https://wandouduoduo.netlify.com/articles/ecacdd4f.html"/>
    <id>https://wandouduoduo.netlify.com/articles/ecacdd4f.html</id>
    <published>2019-09-27T03:55:30.000Z</published>
    <updated>2019-09-27T05:42:13.332Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>早上到公司就接到总部信息安全组邮件。邮件内容是：Atlassian公开了一个Jira未授权SSRF漏洞。Jira的/plugins/servlet/gadgets/makeRequest资源存在SSRF漏洞，原因在于JiraWhitelist这个类的逻辑缺陷，成功利用此漏洞的远程攻击者可以以Jira服务端的身份访问内网资源。此漏洞无需任何凭据即可触发。</p><p><strong>影响范围</strong></p><p>版本小于8.4.0</p><p>漏洞详情链接： <a href="https://jira.atlassian.com/browse/JRASERVER-69793" target="_blank" rel="noopener">https://jira.atlassian.com/browse/JRASERVER-69793</a></p><p>基于以上情况，把在线上的jira 7.4.1版本升级为最新版本8.4.1，因为官方在8.4.0已经修复这个漏洞。</p><a id="more"></a><h2 id="程序目录"><a href="#程序目录" class="headerlink" title="程序目录"></a>程序目录</h2><ul><li>JIRA7.4.1安装目录(以下简称<strong>原目录</strong>): /opt/atlassian/jira-7.4.1-bak</li><li>JIRA7.4.1 HOME目录(以下简称<strong>原HOME</strong>): /var/atlassian/application-data/jira-7.4.1-bak</li><li>JIRA8.4.1安装目录(以下简称<strong>新目录</strong>): /opt/atlassian/jira</li><li>JIRA8.4.1 HOME目录(以下简称<strong>新HOME</strong>): /var/atlassian/application-data/jira</li></ul><h2 id="升级步骤"><a href="#升级步骤" class="headerlink" title="升级步骤"></a>升级步骤</h2><ul><li>注：本次升级是在同一服务器升级</li><li>JIRA7.4.1数据备份</li><li>JIRA8.4.1安装</li><li>备份数据导入JIRA8.4.1</li><li>后续</li></ul><h2 id="停止原JIRA服务"><a href="#停止原JIRA服务" class="headerlink" title="停止原JIRA服务"></a>停止原JIRA服务</h2><p>停止服务可以保证后续备份的干净。所以建议升级前先把服务停止。</p><ul><li><p>在<strong>原目录</strong>的bin文件夹下</p></li><li><p>执行 ./stop-jira.sh 停止JIRA服务</p></li></ul><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><h3 id="备份数据库内容"><a href="#备份数据库内容" class="headerlink" title="备份数据库内容"></a>备份数据库内容</h3><p>有两种方法备份数据库内容：<strong>本地数据库备份工具或JIRA的XML备份工具</strong></p><ul><li><strong>本地数据库备份工具</strong><ul><li>调用诸如mysqldump或pg_dump之类的命令行工具</li></ul></li><li><strong>JIRA的XML备份工具</strong><ul><li>选择系统–&gt;导入和导出–&gt;备份系统，在’文件名’字段中，输入备份文件的名称。</li><li>点击’备份’按钮，JIRA会将您的XML备份保存为压缩的归档文件。备份完成后，将显示一条信息，确认JIRA已将其数据写入指定的文件。</li><li>备份将存储在JIRA应用程序主目录的export(<strong>HOME目录</strong> 下的export)子目录中</li></ul></li></ul><h3 id="备份data目录"><a href="#备份data目录" class="headerlink" title="备份data目录"></a>备份data目录</h3><p>该目录包含JIRA实例的应用数据，例如，问题附件存储在目录中。在Linux上，可以编写一个小的shell脚本，将其放到/etc/cron.daily一个目录中备份 /var/backup/jira。如果你将attachments目录放在自定义位置而不是data目录中，则需要attachments单独备份目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -rf /var/atlassian/application-data/jira  /var/atlassian/application-data/jira-7.4.1-bak</span><br></pre></td></tr></table></figure><h3 id="程序目录备份"><a href="#程序目录备份" class="headerlink" title="程序目录备份"></a>程序目录备份</h3><p>将<strong>安装目录</strong>和<strong>HOME目录</strong>也进行备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -rf /opt/atlassian/jira  /opt/atlassian//jira-7.4.1-bak</span><br></pre></td></tr></table></figure><h2 id="Jira新版本-8-4-1-安装"><a href="#Jira新版本-8-4-1-安装" class="headerlink" title="Jira新版本(8.4.1)安装"></a>Jira新版本(8.4.1)安装</h2><h3 id="下载程序"><a href="#下载程序" class="headerlink" title="下载程序"></a>下载程序</h3><p><a href="https://www.atlassian.com/software/jira/download" target="_blank" rel="noopener">官网下载地址</a></p><h3 id="安装程序"><a href="#安装程序" class="headerlink" title="安装程序"></a>安装程序</h3><h5 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h5><ul><li><p>安装JDK(JIRA8.4.1需要JVM1.8及以上环境)</p></li><li><p>由于本次为升级，因此默认以上环境已经安装</p></li><li><p>将下载的atlassian-jira-software-8.4.1.tar.gz压缩包解压到安装目录中(参考<strong>新目录</strong>)</p></li><li><p>解压后修改安装包名称为jira，即为<strong>新目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载</span></span><br><span class="line">wget https://product-downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-8.4.1.tar.gz</span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar -xzvf  atlassian-jira-software-8.4.1.tar.gz -C /opt/atlassian/</span><br><span class="line">mv /opt/atlassian/mv atlassian-jira-software-8.4.1-standalone /opt/atlassian/jira</span><br></pre></td></tr></table></figure></li></ul><h5 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h5><p>配置文件列表</p><p><a href="https://confluence.atlassian.com/adminjiraserver/important-directories-and-files-938847744.html" target="_blank" rel="noopener">Jira中重要文件</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server.xml</span><br><span class="line">dbconfig.xml</span><br><span class="line">jira-config.properties</span><br><span class="line">setenv.sh /  setenv.bat （内存分配和其他JVM参数）有关更多信息，请参阅  Jira中的重要文件链接</span><br></pre></td></tr></table></figure><ul><li><p>JAVA配置有两个办法：直接复制原目录的jre目录至新目录或者直接配置本机java环境</p><p>将<strong>原目录</strong>下的jre文件夹复制到<strong>新目录</strong>下</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r /opt/atlassian/jira-7.4.1/jre /opt/atlassian/jira</span><br></pre></td></tr></table></figure><ul><li>修改<strong>新目录</strong>bin文件夹下的setenv.sh,在 <strong>#!INSTALLER SET JAVA_HOME</strong> 下一行加入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制目录配置</span></span><br><span class="line">JAVA_HOME=<span class="string">"/opt/atlassian/jira/jre/"</span>; <span class="built_in">export</span> JAVA_HOME</span><br><span class="line"><span class="comment"># 配置本机配置</span></span><br><span class="line">JAVA_HOME=<span class="string">"/usr/java/jdk1.8.0_202/jre/"</span>; <span class="built_in">export</span> JAVA_HOME</span><br></pre></td></tr></table></figure><ul><li>设置Jira HOME，编辑文件，设置Jira HOME目录<ul><li>查找jira-application.properties文件，设置jira.home</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#查找配置文件</span><br><span class="line">find . -name jira-application.properties </span><br><span class="line">#编辑</span><br><span class="line">vim /opt/atlassian/jira/atlassian-jira/WEB-INF/classes/jira-application.properties</span><br><span class="line"></span><br><span class="line">jira.home = /var/atlassian/application-data/jira</span><br><span class="line">#创建Jira home目录</span><br><span class="line">mkdir -p /var/atlassian/application-data/jira</span><br></pre></td></tr></table></figure><h5 id="旧配置复制"><a href="#旧配置复制" class="headerlink" title="旧配置复制"></a>旧配置复制</h5><ul><li><p>把破解包里面的atlassian-extras-3.2.jar和mysql-connector-java-5.1.39-bin.jar两个文件复制到/opt/atlassian/jira/atlassian-jira/WEB-INF/lib/目录下。</p><p>其中atlassian-extras-3..2.jar是用来替换原来的atlassian-extras-3.2.jar文件，用作破解jira系统的。</p><p>而mysql-connector-java-5.1.39-bin.jar是用来连接mysql数据库的驱动软件包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /opt/atlassian/jira-7.4.1-bak/atlassian-jira/WEB-INF/lib/mysql-connector-java-5.1.39-bin.jar /opt/atlassian/jira/atlassian-jira/WEB-INF/lib/</span><br><span class="line">cp /opt/atlassian/jira-7.4.1-bak/atlassian-jira/WEB-INF/lib/atlassian-extras-3.2.jar /opt/atlassian/jira/atlassian-jira/WEB-INF/lib/</span><br></pre></td></tr></table></figure></li><li><p>数据库配置文件复制，因为安装数据库需要为空库，配置时需要创建配置文件。本教程为升级，所以直接复制原配置即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /var/atlassian/application-data/jira-7.4.1-bak/dbconfig.xml /var/atlassian/application-data/jira/dbconfig.xml</span><br></pre></td></tr></table></figure></li></ul><h5 id="禁用自动重新索引"><a href="#禁用自动重新索引" class="headerlink" title="禁用自动重新索引"></a>禁用自动重新索引</h5><p>官方文档中指出：建议从平台升级（即从7.x升级到8.x）进行此步骤。</p><p>由于我们在Jira 8.0中引入了对索引的更改，因此您的旧索引与新版本不兼容。要创建一个新文件，Jira将在您启动它后立即触发自动重新索引。为避免两次重新编制索引（在启动后和升级应用程序之后），您可以禁用自动重新编制索引，并在准备就绪后再运行第二次重新编制索引。</p><p>编辑或创建以下文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch /var/atlassian/application-data/jira/jira-config.properties</span><br></pre></td></tr></table></figure><p>添加以下行，并保存文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upgrade.reindex.allowed=<span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li><p>完成基础配置后，就可以启动Jira服务了(在<strong>新目录</strong>的bin文件夹下，执行./start-jira.sh)</p></li><li><p>浏览器访问</p></li><li><p>重置索引：点击设置-系统-高级-重新索引，<strong>重新索引操作</strong> 选择 <strong>后台重新索引</strong>，点击<strong>重新索引</strong></p></li></ul><h2 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h2><ul><li>将备份的.zip文件放入<strong>新HOME</strong>的import文件夹下，管理员账号访问浏览器，点击系统-恢复，选择文件后等待系统完成恢复。恢复完成后将重新登录JIRA，账号密码为原JIRA管理员信息</li><li>将备份的data文件下的数据放入<strong>新HOME</strong>的data文件夹下</li></ul><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><h4 id="（可选）更新Jira服务台"><a href="#（可选）更新Jira服务台" class="headerlink" title="（可选）更新Jira服务台"></a>（可选）更新Jira服务台</h4><p>如果您使用的是Jira Service Desk，则可以直接在UI中进行更新，而无需下载单独的安装程序。</p><ol><li>转到  <strong>&gt;应用程序&gt;版本和许可证</strong>。</li><li>更新Jira服务台。这将自动将Service Desk更新到兼容版本。</li></ol><p>### </p><h4 id="升级应用程序（附加组件）"><a href="#升级应用程序（附加组件）" class="headerlink" title="升级应用程序（附加组件）"></a>升级应用程序（附加组件）</h4><p>现在，您可以升级同时具有<strong>兼容</strong>  状态的应用程序  。如果您一般需要有关状态和应用程序的更多信息，请参阅“  <a href="https://confluence.atlassian.com/adminjiraserver/preparing-for-the-upgrade-966063325.html" target="_blank" rel="noopener">准备升级”</a>。</p><ol><li>转到  <strong>&gt;管理应用&gt;管理应用</strong>。</li><li>将您的应用升级到支持的版本。</li><li>应用程序升级后，即可启用它们。</li></ol><p>### </p><h4 id="重建索引"><a href="#重建索引" class="headerlink" title="重建索引"></a>重建索引</h4><p>由于您的旧索引不兼容，因此请重新索引Jira以重建它。此步骤可能需要一些时间，具体取决于您遇到的问题和应用程序的数量。</p><ol><li>转到  <strong>&gt;索引编制</strong>，然后运行  <strong>Lock Jira并重建reindex</strong>。</li></ol><h2 id="做得好！"><a href="#做得好！" class="headerlink" title="做得好！"></a>做得好！</h2><p>您已将Jira升级到新版本。</p><h4 id="升级后登录页面"><a href="#升级后登录页面" class="headerlink" title="升级后登录页面"></a>升级后登录页面</h4><p>成功升级后，您应该会看到升级后的登录页面。它具有有关新版本的一些有用信息，如下所示。</p><p><img src="/articles/ecacdd4f/pulpscreen.png" alt></p><ol><li><strong>需要知道：</strong>  可能会影响您作为管理员工作的新功能列表。</li><li><strong>用户应用程序：</strong>升级后<strong>应用程序的</strong> 状态。</li><li><strong>应用程序链接：</strong>  您的应用程序链接的状态。</li><li><strong>发行说明：</strong>  链接到发行说明，您可以在其中查看有关已升级到的版本的更多详细信息</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;早上到公司就接到总部信息安全组邮件。邮件内容是：Atlassian公开了一个Jira未授权SSRF漏洞。Jira的/plugins/servlet/gadgets/makeRequest资源存在SSRF漏洞，原因在于JiraWhitelist这个类的逻辑缺陷，成功利用此漏洞的远程攻击者可以以Jira服务端的身份访问内网资源。此漏洞无需任何凭据即可触发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;影响范围&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;版本小于8.4.0&lt;/p&gt;
&lt;p&gt;漏洞详情链接： &lt;a href=&quot;https://jira.atlassian.com/browse/JRASERVER-69793&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://jira.atlassian.com/browse/JRASERVER-69793&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基于以上情况，把在线上的jira 7.4.1版本升级为最新版本8.4.1，因为官方在8.4.0已经修复这个漏洞。&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Confluence" scheme="https://wandouduoduo.netlify.com/tags/Confluence/"/>
    
  </entry>
  
  <entry>
    <title>nginx中https的配置和http强制跳转</title>
    <link href="https://wandouduoduo.netlify.com/articles/ebb4cd52.html"/>
    <id>https://wandouduoduo.netlify.com/articles/ebb4cd52.html</id>
    <published>2019-09-20T11:11:13.000Z</published>
    <updated>2019-09-20T14:39:00.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>随着现在网络互联网的告诉发展，给人们带来的很多便利，但也出现了很多隐患。作为站长，网站的安全至关重要。怎么做才安全呢？建议把http改为https，因为增加了证书认证，相对来说就会安全很多，并且对用户的体验也比较好，谁也不想访问个网站，在地址栏中显示不安全或直接显示不安全等。</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>centos7</p><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>1，nginx有安装ssl模块，这样才可以使用证书。<a href="https://wandouduoduo.github.io/articles/88000f44.html" target="_blank" rel="noopener">参考文档</a></p><p>2，购买或申请获取的证书文件。</p><h2 id="配置教程"><a href="#配置教程" class="headerlink" title="配置教程"></a>配置教程</h2><h4 id="放置证书"><a href="#放置证书" class="headerlink" title="放置证书"></a>放置证书</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/nginx/conf/ssl</span><br><span class="line">cp 证书.zip /usr/local/nginx/conf/ssl/</span><br><span class="line">cd /usr/local/nginx/conf/ssl/</span><br><span class="line">unzip 证书.zip</span><br></pre></td></tr></table></figure><h4 id="配置https"><a href="#配置https" class="headerlink" title="配置https"></a>配置https</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl;</span><br><span class="line"></span><br><span class="line">    server_name wandouduoduo.com;</span><br><span class="line">    root /opt/www/webapps/;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line"></span><br><span class="line">include block.conf;</span><br><span class="line"></span><br><span class="line">    ssl_session_cache shared:SSL:100m;</span><br><span class="line">    ssl_session_timeout  5m;</span><br><span class="line">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    ssl_certificate     ssl/证书.pem;</span><br><span class="line">    ssl_certificate_key ssl/证书.key;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#禁止在header中出现服务器版本，防止黑客利用版本漏洞攻击</span></span><br><span class="line">    server_tokens off;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">         try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置强制跳转"><a href="#配置强制跳转" class="headerlink" title="配置强制跳转"></a>配置强制跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name xxxxx;</span><br><span class="line">    rewrite ^(.*) https://<span class="variable">$server_name</span><span class="variable">$1</span> permanent;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>根据上述配置就可实现https，并让http强制跳转到https。</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>nginx防SQL注入与文件注入等相关安全设置</p><p>可以把下面内容写个配置文件block.conf，在server块中include。如上面配置教程中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#禁止sql注入</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~* <span class="string">".*[\;\'\&lt;\&gt;].*"</span> )&#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$request_uri</span> ~* <span class="string">"(cost\()|(concat\()"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$request_uri</span> ~* <span class="string">"[+|(%20)]union[+|(%20)]"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$request_uri</span> ~* <span class="string">"[+|(%20)]and[+|(%20)]"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$request_uri</span> ~* <span class="string">"[+|(%20)]select[+|(%20)]"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"(&lt;|%3C).*script.*(&gt;|%3E)"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"GLOBALS(=|[|%[0-9A-Z]&#123;0,2&#125;)"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"_REQUEST(=|[|%[0-9A-Z]&#123;0,2&#125;)"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"proc/self/environ"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"mosConfig_[a-zA-Z_]&#123;1,21&#125;(=|%3D)"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"base64_(en|de)code(.*)"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"select"</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 404;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#禁止文件注入 </span></span><br><span class="line"><span class="comment">## Block file injections</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_file_injections</span> 0;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"[a-zA-Z0-9_]=(\.\.//?)+"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_file_injections</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"[a-zA-Z0-9_]=/([a-z0-9_.]//?)+"</span>) &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$block_file_injections</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$block_file_injections</span> = 1) &#123;</span><br><span class="line">    <span class="built_in">return</span> 444;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">## 禁掉溢出攻击</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_common_exploits</span> 0;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"(&lt;|%3C).*script.*(&gt;|%3E)"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_common_exploits</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"GLOBALS(=|[|%[0-9A-Z]&#123;0,2&#125;)"</span>) &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$block_common_exploits</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"_REQUEST(=|[|%[0-9A-Z]&#123;0,2&#125;)"</span>) &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$block_common_exploits</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"proc/self/environ"</span>) &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$block_common_exploits</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"mosConfig_[a-zA-Z_]&#123;1,21&#125;(=|%3D)"</span>) &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$block_common_exploits</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"base64_(en|de)code(.*)"</span>) &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$block_common_exploits</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$block_common_exploits</span> = 1) &#123;</span><br><span class="line">    <span class="built_in">return</span> 444;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">## 禁spam字段</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_spam</span> 0;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"b(ultram|unicauca|valium|viagra|vicodin|xanax|ypxaieo)b"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_spam</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"b(erections|hoodia|huronriveracres|impotence|levitra|libido)b"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_spam</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"b(ambien|bluespill|cialis|cocaine|ejaculation|erectile)b"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_spam</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ <span class="string">"b(lipitor|phentermin|pro[sz]ac|sandyauer|tramadol|troyhamby)b"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_spam</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$block_spam</span> = 1) &#123;</span><br><span class="line">    <span class="built_in">return</span> 444;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">## 禁掉user-agents</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_user_agents</span> 0;</span><br><span class="line"><span class="comment"># Don’t disable wget if you need it to run cron jobs!</span></span><br><span class="line"><span class="comment">#if ($http_user_agent ~ "Wget") &#123;</span></span><br><span class="line"><span class="comment"># set $block_user_agents 1;</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"><span class="comment"># Disable Akeeba Remote Control 2.5 and earlier</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"Indy Library"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># Common bandwidth hoggers and hacking tools.</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"libwww-perl"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"GetRight"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"GetWeb!"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"Go!Zilla"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"Download Demon"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"Go-Ahead-Got-It"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"TurnitinBot"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"GrabNet"</span>) &#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"WebBench"</span>) &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"ApacheBench"</span>) &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ ^$) &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~ <span class="string">"Python-urllib"</span>) &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$block_user_agents</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$block_user_agents</span> = 1) &#123;</span><br><span class="line"><span class="built_in">return</span> 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;随着现在网络互联网的告诉发展，给人们带来的很多便利，但也出现了很多隐患。作为站长，网站的安全至关重要。怎么做才安全呢？建议把http改为https，因为增加了证书认证，相对来说就会安全很多，并且对用户的体验也比较好，谁也不想访问个网站，在地址栏中显示不安全或直接显示不安全等。&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Nginx" scheme="https://wandouduoduo.netlify.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx升级或重新加载模块</title>
    <link href="https://wandouduoduo.netlify.com/articles/88000f44.html"/>
    <id>https://wandouduoduo.netlify.com/articles/88000f44.html</id>
    <published>2019-09-20T10:34:08.000Z</published>
    <updated>2019-09-20T11:38:51.045Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>在日常运维工作中，有几个场景：</p><p>1，nginx  web服务升级 。</p><p>2，https证书配置后，发现nginx编译没有加入ssl模块。</p><p>3，nginx配置后，有<code>nginx: [emerg] the &quot;xxx&quot; parameter requires</code>等等报错。</p><p>这些都需要重新编译nginx程序，并把需要的模块加载进去，但是对于不熟悉nginx的人，又头疼和担心，需要重新编译，会不会对原来有啥影响等等。本文就是针对这些场景给出解决方案。</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>centos7</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>首先，需要说明的是nginx因为其开放性而广受欢迎，其中开放性就是：松耦合，需要啥模块，重新加载编译后替换就可以了，所以完全不需要担心。</p><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><h4 id="查看nginx原有模块"><a href="#查看nginx原有模块" class="headerlink" title="查看nginx原有模块"></a>查看nginx原有模块</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br></pre></td></tr></table></figure><p><img src="/articles/88000f44/1.png" alt></p><p>可以看到没有加载模块</p><h4 id="重新编译"><a href="#重新编译" class="headerlink" title="重新编译"></a>重新编译</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到源码包</span></span><br><span class="line"><span class="built_in">cd</span> /opt/packages/sunscripts/install/packages/nginx-1.16.0</span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx  --with-http_ssl_module  --with-http_stub_status_module  --with-http_gzip_static_module</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">make</span><br><span class="line">注意：这里不要进行make install，否则就是覆盖安装</span><br></pre></td></tr></table></figure><h4 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份</span></span><br><span class="line">cp /usr/<span class="built_in">local</span>/nginx/sbin/nginx /usr/<span class="built_in">local</span>/nginx/sbin/nginx.bak</span><br><span class="line"><span class="comment"># 停nginx</span></span><br><span class="line">systemctl stop nginx.service</span><br><span class="line"><span class="comment"># 替换</span></span><br><span class="line">cp ./objs/nginx /usr/<span class="built_in">local</span>/nginx/sbin/</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start nginx.service</span><br><span class="line"><span class="comment"># 检查验证</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx -V</span><br></pre></td></tr></table></figure><p><img src="/articles/88000f44/2.png" alt></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>按照上面的方案，按照自己需求加载模块，定制自己的nginx。</p><h2 id="一键安装nginx脚本"><a href="#一键安装nginx脚本" class="headerlink" title="一键安装nginx脚本"></a>一键安装nginx脚本</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;在日常运维工作中，有几个场景：&lt;/p&gt;
&lt;p&gt;1，nginx  web服务升级 。&lt;/p&gt;
&lt;p&gt;2，https证书配置后，发现nginx编译没有加入ssl模块。&lt;/p&gt;
&lt;p&gt;3，nginx配置后，有&lt;code&gt;nginx: [emerg] the &amp;quot;xxx&amp;quot; parameter requires&lt;/code&gt;等等报错。&lt;/p&gt;
&lt;p&gt;这些都需要重新编译nginx程序，并把需要的模块加载进去，但是对于不熟悉nginx的人，又头疼和担心，需要重新编译，会不会对原来有啥影响等等。本文就是针对这些场景给出解决方案。&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Nginx" scheme="https://wandouduoduo.netlify.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>centos7下使用yum源安装mysql5.7</title>
    <link href="https://wandouduoduo.netlify.com/articles/5449f5b8.html"/>
    <id>https://wandouduoduo.netlify.com/articles/5449f5b8.html</id>
    <published>2019-09-17T09:21:05.000Z</published>
    <updated>2019-09-17T09:43:59.324Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>现在centos上默认是没有yum源的，yum安装的是 MariaDB。本文详细介绍了centos7下使用yum源安装mysql5.7。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统：centos7</p><a id="more"></a><h2 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h2><h4 id="下载yum源："><a href="#下载yum源：" class="headerlink" title="下载yum源："></a>下载yum源：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="string">'https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm'</span></span><br></pre></td></tr></table></figure><p><img src="/articles/5449f5b8/1.png" alt></p><h4 id="安装yum源"><a href="#安装yum源" class="headerlink" title="安装yum源"></a>安装yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh mysql57-community-release-el7-11.noarch.rpm</span><br></pre></td></tr></table></figure><p><img src="/articles/5449f5b8/2.png" alt></p><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mysql-community-server</span><br></pre></td></tr></table></figure><p><img src="/articles/5449f5b8/3.png" alt></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>启动mysql,要知道在centos7中，没有了service命令，都是使用systemctl命令。注意启动的时候是start mysqld而不是mysql。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start mysqld</span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure><p><img src="/articles/5449f5b8/4.png" alt></p><p>如图所示，是已经启动了</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h4 id="修改数据库密码"><a href="#修改数据库密码" class="headerlink" title="修改数据库密码"></a>修改数据库密码</h4><p>mysql5.7的新特性之一就是在初始化的时候会生成一个自定义的密码，然后你需要找到这个密码，登录的时候输入。注意，输入密码的时候是不显示。</p><p>找到密码: 红框的地方就是密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">'temporary password'</span> /var/<span class="built_in">log</span>/mysqld.log</span><br></pre></td></tr></table></figure><p><img src="/articles/5449f5b8/5.png" alt></p><p><strong>登录数据库：这里-p之后不用输入密码，回车后再输入。改过密码之后登录则是直接在-p后加密码了。</strong></p><p><strong>修改密码</strong></p><p>注意，修改的密码太简单会不给修改，把大小写字母和数字加上就肯定可以了。然后切记切记，mysql里面的命令要加分号！分号！分号！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD = PASSWORD(&apos;Sun123$%^&apos;);</span><br></pre></td></tr></table></figure><p><strong>设置远程可以登录</strong></p><p>现在这样是无法在本地用工具登录访问的，现在要做两件事，一件事是将云服务器上的3306端口开放；另一件事是配置远程可以访问。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;Admin123!&apos; WITH GRANT OPTION;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>先设置刚才的密码可以远程登录，然后使用flush命令使配置立即生效。<br>如果还不行可以尝试重启一下数据库。</p><p><img src="/articles/5449f5b8/6.png" alt></p><h4 id="优化配置"><a href="#优化配置" class="headerlink" title="优化配置"></a>优化配置</h4><p>mysql的配置文件真的很多，有的还很蛋疼。比如默认的字符集是拉丁字符集，每次创建数据库的时候要设置字符集；默认还不支持group by语句，默认的时区也不是我们现在的北京时间(东八区)，会导致我们的时间差了13个点。针对以上说几个简要的配置，更多的配置在以后遇到了再加上，或者留言吧！</p><p>打开配置文件，yum安装的默认在/etc文件夹下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment">#在[mysqld]下面添加，不需要分号</span></span><br><span class="line"><span class="comment">#字符集:注意是utf8而不是utf-8!</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line"><span class="comment">#这时候使用show variables like 'char%';就可以查看到字符集都是utf8了</span></span><br><span class="line"><span class="comment">#sql支持group by语句</span></span><br><span class="line">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"><span class="comment">#设置时区为东八区</span></span><br><span class="line">default-time_zone = <span class="string">'+8:00'</span></span><br></pre></td></tr></table></figure><p>最后重启数据库，使配置生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><h2 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a><strong>设置开机启动</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>安装记录就到这里，更多的配置在遇到后继续更新。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;现在centos上默认是没有yum源的，yum安装的是 MariaDB。本文详细介绍了centos7下使用yum源安装mysql5.7。&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;系统：centos7&lt;/p&gt;
    
    </summary>
    
      <category term="数据库运维" scheme="https://wandouduoduo.netlify.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Mysql" scheme="https://wandouduoduo.netlify.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>docker安装redmine服务</title>
    <link href="https://wandouduoduo.netlify.com/articles/40baf0f.html"/>
    <id>https://wandouduoduo.netlify.com/articles/40baf0f.html</id>
    <published>2019-09-05T05:38:52.000Z</published>
    <updated>2019-09-05T11:02:44.711Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>快速搭建redmine服务，以便能够对项目和工作流进行管控。</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://hub.docker.com/_/redmine" target="_blank" rel="noopener">官方文档</a>或者<a href="https://docs.docker.com/samples/library/redmine/" target="_blank" rel="noopener">docker官方</a></p><a id="more"></a><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h4 id="用SQLite3运行Redmine"><a href="#用SQLite3运行Redmine" class="headerlink" title="用SQLite3运行Redmine"></a>用SQLite3运行Redmine</h4><p>这是最简单的方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name sunredmine redmine:3.4</span><br></pre></td></tr></table></figure><h4 id="使用数据库容器运行Redmine"><a href="#使用数据库容器运行Redmine" class="headerlink" title="使用数据库容器运行Redmine"></a>使用数据库容器运行Redmine</h4><p>建议使用数据库服务器运行Redmine。</p><p>1, 启动数据库容器</p><p>PostgreSQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name some-postgres --network some-network -e POSTGRES_PASSWORD=secret -e POSTGRES_USER=redmine postgres</span><br></pre></td></tr></table></figure><p>MySQL的（替代<code>-e REDMINE_DB_POSTGRES=some-postgres</code>与<code>-e REDMINE_DB_MYSQL=some-mysql</code>运行管理平台时）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name some-mysql --network some-network -e MYSQL_USER=redmine -e MYSQL_PASSWORD=secret -e MYSQL_DATABASE=redmine -e MYSQL_RANDOM_ROOT_PASSWORD=1 mysql:5.7</span><br></pre></td></tr></table></figure><p>2, 运行redmine</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name some-redmine --network some-network -e REDMINE_DB_POSTGRES=some-postgres -e REDMINE_DB_USERNAME=redmine -e REDMINE_DB_PASSWORD=secret redmine</span><br></pre></td></tr></table></figure><h2 id="完整例子"><a href="#完整例子" class="headerlink" title="完整例子"></a>完整例子</h2><p>假设已有postgres数据库容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">docker run --name pgsql -p 5432:5432 -e POSTGRES_PASSWORD=sunxu123 -v /data/postgres:/var/lib/postgresql/data -d postgres:9.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器后操作</span></span><br><span class="line">docker <span class="built_in">exec</span> -it pgsql /bin/bash</span><br><span class="line"><span class="comment"># 进Postgresql账号</span></span><br><span class="line">su postgres</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">CREATE USER redmine WITH PASSWORD <span class="string">'Sun123'</span>;</span><br><span class="line"><span class="comment"># 建库</span></span><br><span class="line">createdb -O redmine redmine 和 CREATE DATABASE redmine OWNER redmine等效,二选一即可</span><br><span class="line"><span class="comment"># 赋权</span></span><br><span class="line">GRANT ALL PRIVILEGES ON DATABASE redmine to redmine;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动redmine</span></span><br><span class="line">docker run  --name redmine -p 10083:3000 -v /data/redmine/data:/usr/src/redmine/files --link pgsql:remine -d redmine:3.4</span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">docker logs -f remine</span><br></pre></td></tr></table></figure><h2 id="功能完善"><a href="#功能完善" class="headerlink" title="功能完善"></a>功能完善</h2><h4 id="邮件"><a href="#邮件" class="headerlink" title="邮件"></a>邮件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">docker redmine:/usr/src/redmine/config/configuration.yml.example  ./</span><br><span class="line">mv configuration.yml.example configuration.yml</span><br><span class="line">vim configuration.yml</span><br><span class="line"></span><br><span class="line">default:</span><br><span class="line">  email_delivery:</span><br><span class="line">    delivery_method: :smtp</span><br><span class="line">    smtp_settings:</span><br><span class="line">      enable_starttls_auto: <span class="literal">true</span></span><br><span class="line">      address: <span class="string">"xxxxxxxxxxx"</span></span><br><span class="line">      port: 587</span><br><span class="line">      authentication: :login</span><br><span class="line">      domain: <span class="string">'xxxxxxxxxxxxxx'</span></span><br><span class="line">      user_name: <span class="string">'xxxxxxxxxxxxx'</span></span><br><span class="line">      password: <span class="string">'xxxxxxxxxxxx'</span></span><br></pre></td></tr></table></figure><p><img src="/articles/40baf0f/1.png" alt></p><p><strong>测试是否配置成功：</strong><br>打开Redmine &gt;管理员登陆 &gt; 管理 &gt; 配置 &gt; 邮件通知 &gt;页面底部:发送测试邮件。将会发送邮件到你目前登陆的用户邮箱中。</p><p>如果没有配置成功，则这个选项卡显示的是黄色的字，如未对邮件进行配置，config/configuration.yml。</p><h4 id="ldap接入和用户同步"><a href="#ldap接入和用户同步" class="headerlink" title="ldap接入和用户同步"></a>ldap接入和用户同步</h4><p>原始的ldap认证，我试了下不完美，他需要创建用户然后使用ldap认证，也就是说还是需要先去创建用户。这样显得很麻烦</p><p><img src="/articles/40baf0f/2.png" alt></p><p>Base dn是基准DN</p><p>LDAP过滤器是用来过滤你需要加入到redmine里的用户，我这里是用对象类即objectclass去filter用户</p><p>认证模式改以下就好。</p><p>但是这样还是创建用户 还是麻烦 这个时候需要用到ldap的插件（Redmine LDAP Sync）</p><p>插件安装基本官网都有说</p><p>git：<a href="https://github.com/thorin/redmine_ldap_sync#rake-tasks" target="_blank" rel="noopener">https://github.com/thorin/redmine_ldap_sync#rake-tasks</a></p><p>里面有介绍我这里就不说了，大致上就两步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">因为这个插件好多年不再维护了只能支持redmine3.4.x最新的redmine4.0.x不支持，会报错，这也是为什么docker启动时用3.4版本的原因</span><br><span class="line"></span><br><span class="line">1，在#&#123;RAILS_ROOT&#125;/plugins目录下下载插件</span><br><span class="line">git clone git://github.com/thorin/redmine_ldap_sync.git</span><br><span class="line">2，在#&#123;RAILS_ROOT&#125; 目录下执行</span><br><span class="line">rake -T redmine:plugins:ldap_sync RAILS_ENV=production</span><br></pre></td></tr></table></figure><p><img src="/articles/40baf0f/4.png" alt></p><p>插件安装好之后重启redmine也就是nginx</p><p>然后打开web发现会多一个ldap sync<br><img src="/articles/40baf0f/5.png" alt></p><p>填写好测试完成看看结果</p><p><img src="/articles/40baf0f/6.png" alt></p><p><img src="/articles/40baf0f/7.png" alt></p><p><img src="/articles/40baf0f/8.png" alt></p><p>配置项根据自己的环境设置，设置好之后点击第三栏菜单test是否可以取出成功，</p><p>可以的话就直接激活这个ldap sync</p><p>之后直接去登录就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;快速搭建redmine服务，以便能够对项目和工作流进行管控。&lt;/p&gt;
&lt;h2 id=&quot;参考文档&quot;&gt;&lt;a href=&quot;#参考文档&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/_/redmine&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;或者&lt;a href=&quot;https://docs.docker.com/samples/library/redmine/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;docker官方&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Docker" scheme="https://wandouduoduo.netlify.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>docker构建自己的openldap自助密码服务</title>
    <link href="https://wandouduoduo.netlify.com/articles/d83ca733.html"/>
    <id>https://wandouduoduo.netlify.com/articles/d83ca733.html</id>
    <published>2019-09-03T07:17:12.000Z</published>
    <updated>2019-09-03T10:09:07.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>OpenLDAP安装完毕后，如果用户要修改密码的话，就需要通过OpenLDAP管理员来进行修改。为了解放管理员的工作，让OpenLDAP用户可以自行进行密码的修改和重置，就需要我们来搭建一套自助修改密码系统。</p><p>在此我们使用的是开源的基于php语言开发的ldap自助修改密码系统Self Service Password。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p><a href="https://github.com/wandouduoduo/docker-ssp" target="_blank" rel="noopener">参考文档</a></p><a id="more"></a><p>按照参考文档正确配置并构建镜像，运行后，登录网页访问，通过网页修改账号密码验证</p><p><img src="/articles/d83ca733/1.png" alt></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>如果遇到以下错误：</p><p><img src="/articles/d83ca733/2.png" alt></p><p>修改配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$keyphrase = &quot;secret&quot;;  改为  $keyphrase = &quot;sunxu&quot;; #任意字符串</span><br></pre></td></tr></table></figure><p>重启容器，再次访问。</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>邮件重置密码：</p><p><img src="/articles/d83ca733/3.png" alt></p><p>查看邮件</p><p><img src="/articles/d83ca733/4.png" alt></p><p>修改完成会收到一条邮件：</p><p><img src="/articles/d83ca733/5.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;OpenLDAP安装完毕后，如果用户要修改密码的话，就需要通过OpenLDAP管理员来进行修改。为了解放管理员的工作，让OpenLDAP用户可以自行进行密码的修改和重置，就需要我们来搭建一套自助修改密码系统。&lt;/p&gt;
&lt;p&gt;在此我们使用的是开源的基于php语言开发的ldap自助修改密码系统Self Service Password。&lt;/p&gt;
&lt;h2 id=&quot;教程&quot;&gt;&lt;a href=&quot;#教程&quot; class=&quot;headerlink&quot; title=&quot;教程&quot;&gt;&lt;/a&gt;教程&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/wandouduoduo/docker-ssp&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考文档&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Openldap" scheme="https://wandouduoduo.netlify.com/tags/Openldap/"/>
    
  </entry>
  
  <entry>
    <title>confluence6.3.1升级最新版本6.15.8</title>
    <link href="https://wandouduoduo.netlify.com/articles/4afcf658.html"/>
    <id>https://wandouduoduo.netlify.com/articles/4afcf658.html</id>
    <published>2019-09-02T04:00:40.000Z</published>
    <updated>2019-09-06T10:12:19.870Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>收到公司总部安全部门扫描测试，查出公司内部confluence的版本太低，存在安全漏洞。给出的解决方案是升级到最新版本，最新版本已经把该漏洞修复。本文就详细介绍下confluence的升级过程。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cwiki.us/display/CONFLUENCEWIKI/Upgrading+Confluence" target="_blank" rel="noopener">官方文档</a></p><a id="more"></a><h2 id="升级流程"><a href="#升级流程" class="headerlink" title="升级流程"></a>升级流程</h2><h3 id="备份你的数据"><a href="#备份你的数据" class="headerlink" title="备份你的数据"></a>备份你的数据</h3><h4 id="官方备份方法"><a href="#官方备份方法" class="headerlink" title="官方备份方法"></a>官方备份方法</h4><p>点击一般设置的，点击备份和还原</p><p><img src="/articles/4afcf658/1.png" alt></p><h3 id="自行备份"><a href="#自行备份" class="headerlink" title="自行备份"></a>自行备份</h3><p>1，备份数据源。默认路径为：/var/atlassian/application-data/confluence/confluence.cfg.xml</p><p>2，备份附件。默认路径为：/var/atlassian/application-data/confluence/attachments</p><h2 id="安装部署最新版"><a href="#安装部署最新版" class="headerlink" title="安装部署最新版"></a>安装部署最新版</h2><h4 id="破解文件备份"><a href="#破解文件备份" class="headerlink" title="破解文件备份"></a>破解文件备份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /opt/atlassian/confluence/confluence/WEB-INF/lib/atlassian-extras-decoder-v2-3.4.1.jar ~/atlassian-extras-2.4.jar</span><br></pre></td></tr></table></figure><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><a href="https://www.atlassian.com/software/confluence/download" target="_blank" rel="noopener">官网下载地址</a>，放在/opt</p><h4 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x atlassian-confluence-6.15.1-x64.bin   <span class="comment">#赋予可执行权限</span></span><br><span class="line">./atlassian-confluence-6.15.1-x64.bin  <span class="comment">#执行安装</span></span><br></pre></td></tr></table></figure><p>到了红圈这步选择3，回车。表示升级</p><p><img src="/articles/4afcf658/2.png" alt></p><h4 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h4><p>下面询问你是否要备份，上面我们已经自己备份了，也可选他默认备份</p><p><img src="/articles/4afcf658/3.png" alt></p><h4 id="确认更新"><a href="#确认更新" class="headerlink" title="确认更新"></a>确认更新</h4><p>会展示了一些改变的文件（破解文件变了，下面伏笔），问你同意</p><p><img src="/articles/4afcf658/4.png" alt></p><h4 id="成功部署"><a href="#成功部署" class="headerlink" title="成功部署"></a>成功部署</h4><p>访问  ip:8090</p><h4 id="重新破解"><a href="#重新破解" class="headerlink" title="重新破解"></a>重新破解</h4><p>破解包被升级，有机会出现下面画面，代表验证不通过</p><p><img src="/articles/4afcf658/5.png" alt></p><p>把备份的atlassian-extras-2.4.jar文件复制到/opt/atlassian/confluence/confluence/WEB-INF/lib，并重命名为该版本的文件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv ~/atlassian-extras-2.4.jar /opt/atlassian/confluence/confluence/WEB-INF/lib/atlassian-extras-decoder-v2-3.4.1.jar</span><br></pre></td></tr></table></figure><p>重启服务</p><p>数据和附件，无损升级到，6.15.8</p><p><img src="/articles/4afcf658/6.png" alt></p><h2 id="破解教程"><a href="#破解教程" class="headerlink" title="破解教程"></a>破解教程</h2><p>有的同学可能没有备份破解文件，或者可能不是自己搭建的，现在刚刚接手。那么如何破解呢？</p><h4 id="下载破解工具"><a href="#下载破解工具" class="headerlink" title="下载破解工具"></a>下载破解工具</h4><p>链接: <a href="https://pan.baidu.com/s/13GZ-3XutMEyE3cUl9rwg_Q" target="_blank" rel="noopener">https://pan.baidu.com/s/13GZ-3XutMEyE3cUl9rwg_Q</a> 提取码: 7gtd </p><p>破解工具是个jar包，所以需要jdk环境。jdk环境配置在网上很多，这里省略。java -jar 破解文件.jar</p><p><img src="/articles/4afcf658/7.png" alt></p><h4 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 升级时</span></span><br><span class="line">grep -Po <span class="string">"(?&lt;=server.id\"\&gt;).*(?=\&lt;)"</span> /var/atlassian/application-data/confluence/confluence.cfg.xml</span><br><span class="line"><span class="comment"># 全新安装此步骤跳过</span></span><br></pre></td></tr></table></figure><h4 id="生产key"><a href="#生产key" class="headerlink" title="生产key"></a>生产key</h4><p>先点.patch加载从服务器复制出来的atlassian-extras-2.4.jar文件，然后点.gen破解</p><p><img src="/articles/4afcf658/8.png" alt></p><h4 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h4><p>如权限安装，如下图填写</p><p><img src="/articles/4afcf658/9.png" alt></p><p>如升级，如下图更改配置</p><p>vim /var/atlassian/application-data/confluence/confluence.cfg.xml</p><p><img src="/articles/4afcf658/10.png" alt></p><p>把破解后的文件atlassian-extras-2.4.jar复制到服务器的/opt/atlassian/confluence/confluence/WEB-INF/lib/，并重命名为该版本的名称，如：atlassian-extras-decoder-v2-3.4.1.jar</p><h2 id="接入Ldap"><a href="#接入Ldap" class="headerlink" title="接入Ldap"></a>接入Ldap</h2><p>管理员登录，一般配置–&gt;用户目录–&gt;添加用户目录–&gt;Ldap</p><p><img src="/articles/4afcf658/11.png" alt></p><p>填写信息</p><p><img src="/articles/4afcf658/12.png" alt></p><p><img src="/articles/4afcf658/13.png" alt></p><p><img src="/articles/4afcf658/14.png" alt></p><p><img src="/articles/4afcf658/15.png" alt></p><p><img src="/articles/4afcf658/16.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;收到公司总部安全部门扫描测试，查出公司内部confluence的版本太低，存在安全漏洞。给出的解决方案是升级到最新版本，最新版本已经把该漏洞修复。本文就详细介绍下confluence的升级过程。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.cwiki.us/display/CONFLUENCEWIKI/Upgrading+Confluence&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Confluence" scheme="https://wandouduoduo.netlify.com/tags/Confluence/"/>
    
  </entry>
  
  <entry>
    <title>cmdbuild接入openldap方法</title>
    <link href="https://wandouduoduo.netlify.com/articles/364a7d87.html"/>
    <id>https://wandouduoduo.netlify.com/articles/364a7d87.html</id>
    <published>2019-08-30T10:19:54.000Z</published>
    <updated>2019-08-30T10:51:10.552Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>cmdbuid接入openldap用户权限，便于用户统一管理。</p><a id="more"></a><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>已安装好cmdbuid和openldap。</p><p><a href="https://wandouduoduo.github.io/articles/4fcc594d.html" target="_blank" rel="noopener">安装cmdbuild</a></p><p><a href="https://wandouduoduo.github.io/articles/931613a4.html#more" target="_blank" rel="noopener">安装openldap</a></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>1,  参考官方文档，如下图</p><p><img src="/articles/364a7d87/1.png" alt></p><p>翻译大意是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">LDAP协议配置</span><br><span class="line">在本节中，我们将看到LDAP协议的配置选项。</span><br><span class="line">CMDBuild目前仅支持使用简单绑定进行身份验证。但是可以使用</span><br><span class="line">匿名绑定以在LDAP树中搜索用户。</span><br><span class="line">要在CMDBuild中处理用户权限，必须存在要进行身份验证的用户在用户数据库表中。</span><br><span class="line">例如，如果具有LDAP UID j.doe的用户需要访问CMDBuild使用Tech Group必须遵循以下步骤：</span><br><span class="line">•使用任何密码在CMDBuild中创建用户j.doe</span><br><span class="line">•创建Tech组并定义其权限</span><br><span class="line">•将j.doe添加到Tech组</span><br><span class="line">经过上面三步后，当用户j.doe尝试验证自己时，系统将验证提供的凭据在LDAP服务器上（按身份验证类型链指定的顺序）。</span><br><span class="line"></span><br><span class="line">所以就是所需要事先安装openldap树在cmdbuild中创建用户组和用户，这样配置后才能认证，感觉有点多次一举，我既然都事先创建了，干嘛还要接入openldap。最好的方法是直接读取认证，但是目前官方不支持。</span><br><span class="line">有个想法是直接写脚本把openldap信息读取出来定时写入到cmdbuild数据库中，这样就可以实现统一管控。</span><br></pre></td></tr></table></figure><p>2,  配置cmdbuild认证文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/tomcat/webapps/ROOT/WEB-INF/conf/auth.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">## Authentication method chain (the first match stops the auth chain)</span></span><br><span class="line"><span class="comment">#auth.methods=HeaderAuthenticator,CasAuthenticator,LdapAuthenticator,DBAuthenticator</span></span><br><span class="line">auth.methods=LdapAuthenticator</span><br><span class="line"></span><br><span class="line"><span class="comment">#auth.case.insensitive=false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#force.ws.password.digest=true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## HEADER</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#header.attribute.name=username</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## CAS</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#cas.server.url=https://casserver/cas</span></span><br><span class="line"><span class="comment">#cas.login.page=/login</span></span><br><span class="line"><span class="comment">#cas.service.param=service</span></span><br><span class="line"><span class="comment">#cas.ticket.param=ticket</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## LDAP</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line">ldap.server.address=xxx.xxx.xxxx.xxx</span><br><span class="line">ldap.server.port=389</span><br><span class="line">ldap.use.ssl=<span class="literal">false</span></span><br><span class="line">ldap.basedn=dc=wandouduoduo,dc=com</span><br><span class="line">ldap.bind.attribute=uid</span><br><span class="line"></span><br><span class="line">ldap.search.filter=(objectClass=*)</span><br><span class="line"><span class="comment">##Accept only none (anonymous bind) and simple (simple bind)</span></span><br><span class="line"><span class="comment">#ldap.search.auth.method=none</span></span><br><span class="line"><span class="comment">##This section is only for simple bind</span></span><br><span class="line">ldap.search.auth.method=simple</span><br><span class="line">ldap.search.auth.principal=cn=admin,dc=wandouduoduo,dc=com</span><br><span class="line">ldap.search.auth.password=xxxx</span><br></pre></td></tr></table></figure><p>3，重启cmdbuild，生效配置。</p><p>4，日志改为debug模式，便于观察。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/tomcat/webapps/ROOT/WEB-INF/conf/log4j.conf</span><br></pre></td></tr></table></figure><p><img src="/articles/364a7d87/2.png" alt></p><p>经过上述步骤就可实现接入步骤，观察日志，如下图：</p><p><img src="/articles/364a7d87/3.png" alt></p><p>表示认证成功，后续会补充同步脚本。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;cmdbuid接入openldap用户权限，便于用户统一管理。&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Cmdb" scheme="https://wandouduoduo.netlify.com/tags/Cmdb/"/>
    
      <category term="Openldap" scheme="https://wandouduoduo.netlify.com/tags/Openldap/"/>
    
  </entry>
  
  <entry>
    <title>Docker版快速安装OpenLDAP</title>
    <link href="https://wandouduoduo.netlify.com/articles/931613a4.html"/>
    <id>https://wandouduoduo.netlify.com/articles/931613a4.html</id>
    <published>2019-08-28T06:58:44.000Z</published>
    <updated>2019-08-30T10:57:18.170Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>互联网公司中，会开发很多平台系统，有开源的有自演的，但是每个平台或系统在用户认证方面都需要做，而且处于安全等因素考虑还必须做，统一的用户管理机制可以解决这一痛点。openldap就是这么一个工具。本文，通过docker快速搭建起来，让你体会到它的魅力。</p><a id="more"></a><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.openldap.org" target="_blank" rel="noopener">官网</a></p><p><a href="https://github.com/osixia/docker-openldap" target="_blank" rel="noopener">镜像文档</a></p><!--more--><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a><strong>拉取镜像</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull osixia/openldap</span><br></pre></td></tr></table></figure><h4 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a><strong>运行镜像</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#存放数据库</span></span><br><span class="line">mkdir -p /data/openldap/ldap</span><br><span class="line"><span class="comment">#存放配置</span></span><br><span class="line">mkdir -p /data/openldap/slapd.d</span><br><span class="line"></span><br><span class="line">docker run -p 389:389 --name openldap -v /data/openldap/ldap:/var/lib/ldap -v /data/openldap/slapd.d:/etc/openldap/slapd.d --network bridge --hostname openldap-host --env LDAP_ORGANISATION=<span class="string">"wandouduoduo"</span> --env LDAP_DOMAIN=<span class="string">"wandouduoduo.com"</span> --env LDAP_ADMIN_PASSWORD=<span class="string">"Sun123456"</span> --detach osixia/openldap</span><br></pre></td></tr></table></figure><p>配置LDAP域：<code>--env LDAP_DOMAIN=&quot;wandouduoduo.com&quot;</code></p><p>配置LDAP密码：<code>--env LDAP_ADMIN_PASSWORD=&quot;Sun123456&quot;</code></p><p>默认登录用户名：<code>admin</code></p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h4 id="LDAP-Admin客户端"><a href="#LDAP-Admin客户端" class="headerlink" title="LDAP Admin客户端"></a>LDAP Admin客户端</h4><p>Ldap Admin是一个用于LDAP目录管理的免费Windows LDAP客户端和管理工具。此应用程序允许您在LDAP服务器上浏览，搜索，修改，创建和删除对象。它还支持更复杂的操作，例如目录复制和在远程服务器之间移动，并扩展常用编辑功能以支持特定对象类型（例如组和帐户）。</p><p>支持系统：<code>Winndows&amp;Linux</code></p><p><a href="http://www.ldapadmin.org/" target="_blank" rel="noopener">官网</a></p><p>下载安装LDAP Admin客户端，新增连接如下：</p><p><img src="/articles/931613a4/1.png" alt></p><p>连接成功即表明OpenLDAP安装成功。</p><h4 id="PHPLdapAdmin客户端"><a href="#PHPLdapAdmin客户端" class="headerlink" title="PHPLdapAdmin客户端"></a>PHPLdapAdmin客户端</h4><p>phpLDAPadmin（也称为PLA）是一个基于Web的LDAP客户端。它为LDAP服务器提供简单，随处可访问的多语言管理。</p><p>其分层树查看器和高级搜索功能使您可以直观地浏览和管理LDAP目录。由于它是一个Web应用程序，因此该LDAP浏览器可在许多平台上运行，使您可以从任何位置轻松管理LDAP服务器。</p><p>phpLDAPadmin是LDAP专业人员和新手的完美LDAP浏览器。其用户群主要由LDAP管理专业人员组成。</p><p><a href="http://phpldapadmin.sourceforge.net/wiki/index.php/Main_Page" target="_blank" rel="noopener">官网</a></p><h4 id="使用docker-安装-PHPLdapAdmin"><a href="#使用docker-安装-PHPLdapAdmin" class="headerlink" title="使用docker 安装 PHPLdapAdmin"></a>使用docker 安装 PHPLdapAdmin</h4><p><a href="https://github.com/osixia/docker-phpLDAPadmin" target="_blank" rel="noopener">https://github.com/osixia/docker-phpLDAPadmin</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --privileged -p 10004:80 --name myphpldapadmin --env PHPLDAPADMIN_HTTPS=<span class="literal">false</span> --env PHPLDAPADMIN_LDAP_HOSTS=172.17.0.6 --detach osixia/phpldapadmin</span><br></pre></td></tr></table></figure><p>配置的Ldap地址：<code>--env PHPLDAPADMIN_LDAP_HOSTS=172.17.0.6</code></p><p>配置不开启HTTPS：<code>--env PHPLDAPADMIN_HTTPS=false</code>（默认是true）</p><p>如果开启HTTPS，需要配置443端口映射：<code>-p 8443:443</code>，并采用https访问</p><p><strong>通过访问<a href="http://localhost:10004" target="_blank" rel="noopener">http://localhost:10004</a> 来管理，登陆界面</strong></p><p><img src="/articles/931613a4/2.png" alt></p><p><strong>点击login进行登录</strong></p><p><strong>Login DN：</strong><code>cn=admin,dc=wandouduoduo,dc=com</code></p><p><strong>Password：</strong><code>ldap123</code></p><p><strong>登录成功后如下：</strong></p><p><img src="/articles/931613a4/3.png" alt></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过本文可以快速搭建和使用openldap, 但是默认openldap是没有打开memerof功能的，如有兴趣，请参考</p><p><a href="https://wandouduoduo.github.io/articles/53f92c3c.html" target="_blank" rel="noopener">OpenLDAP启用MemberOf</a></p><p><a href="https://blog.csdn.net/Michaelwubo/article/details/80525284" target="_blank" rel="noopener">ldapsearch用法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;互联网公司中，会开发很多平台系统，有开源的有自演的，但是每个平台或系统在用户认证方面都需要做，而且处于安全等因素考虑还必须做，统一的用户管理机制可以解决这一痛点。openldap就是这么一个工具。本文，通过docker快速搭建起来，让你体会到它的魅力。&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Openldap" scheme="https://wandouduoduo.netlify.com/tags/Openldap/"/>
    
  </entry>
  
  <entry>
    <title>OpenLDAP启用MemberOf</title>
    <link href="https://wandouduoduo.netlify.com/articles/53f92c3c.html"/>
    <id>https://wandouduoduo.netlify.com/articles/53f92c3c.html</id>
    <published>2019-08-28T06:35:09.000Z</published>
    <updated>2019-09-04T07:41:09.131Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>默认情况下OpenLDAP的用户组属性是Posixgroup，Posixgroup用户组和用户没有实际的对应关系。如果需要把Posixgroup和user关联起来则需要将用户添加到对应的组中。 通过如上配置可以满足大部分业务场景，但是如果需要通过用户组来查找用户的话，Posixgroup用户组属性，是无法满足要求的。此时需要使用OpenLDAP的groupOfUniqueNames用户组属性。本篇文章Fayson主要介绍如何为OpenLDAP启用MemberOf。</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>OpenLDAP版本为2.4.44</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h4 id="先查看openldap的数据库信息"><a href="#先查看openldap的数据库信息" class="headerlink" title="先查看openldap的数据库信息"></a>先查看openldap的数据库信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls /etc/openldap/slapd.d/cn=config/</span><br><span class="line">或者</span><br><span class="line">ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -b cn=config dn</span><br></pre></td></tr></table></figure><p>得到的结果大概如下，不一样也不要害怕:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cn=module&#123;0&#125;.ldif cn=schema/ cn=schema.ldif olcDatabase=&#123;0&#125;config.ldif olcDatabase=&#123;-1&#125;frontend.ldif olcDatabase=&#123;1&#125;monitor.ldif olcDatabase=&#123;2&#125;bdb/ olcDatabase=&#123;2&#125;bdb.ldif</span><br></pre></td></tr></table></figure><p>其中有一个带什么<code>db.ldif</code>的就是你最终需要修改的数据库文件，我这里是<code>bdb.ldif</code>，你的可能是<code>mdb.ldif</code>，还有人是<code>hdb.ldif</code>，不管什么<code>db</code>，总之你要改的是一个叫<code>db</code>的文件就对了，你可以<code>cat</code>打开看一看，但是不要用<code>vi</code>去修改它。</p><h4 id="准备memberof-conf-ldif文件"><a href="#准备memberof-conf-ldif文件" class="headerlink" title="准备memberof_conf.ldif文件"></a>准备memberof_conf.ldif文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vim memberof_conf.ldif</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启memberof支持</span></span><br><span class="line">dn: cn=module&#123;0&#125;,cn=config</span><br><span class="line">cn: modulle&#123;0&#125;</span><br><span class="line">objectClass: olcModuleList</span><br><span class="line">objectclass: top</span><br><span class="line">olcModuleload: memberof.la</span><br><span class="line">olcModulePath: /usr/lib64/openldap</span><br><span class="line"></span><br><span class="line"><span class="comment">#新增用户支持memberof配置</span></span><br><span class="line">dn: olcOverlay=&#123;0&#125;memberof,olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">objectClass: olcConfig</span><br><span class="line">objectClass: olcMemberOf</span><br><span class="line">objectClass: olcOverlayConfig</span><br><span class="line">objectClass: top</span><br><span class="line">olcOverlay: memberof</span><br><span class="line">olcMemberOfDangling: ignore</span><br><span class="line">olcMemberOfRefInt: TRUE</span><br><span class="line">olcMemberOfGroupOC: groupOfUniqueNames</span><br><span class="line">olcMemberOfMemberAD: uniqueMember</span><br><span class="line">olcMemberOfMemberOfAD: memberOf</span><br></pre></td></tr></table></figure><p><img src="/articles/53f92c3c/1.jpeg" alt></p><h4 id="编辑refint1-ldif文件"><a href="#编辑refint1-ldif文件" class="headerlink" title="编辑refint1.ldif文件"></a>编辑refint1.ldif文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim refint1.ldif </span><br><span class="line"></span><br><span class="line">dn: cn=module&#123;0&#125;,cn=config</span><br><span class="line">add: olcmoduleload</span><br><span class="line">olcmoduleload: refint</span><br></pre></td></tr></table></figure><p><img src="/articles/53f92c3c/2.png" alt></p><h4 id="编辑refint2-ldif文件"><a href="#编辑refint2-ldif文件" class="headerlink" title="编辑refint2.ldif文件"></a>编辑refint2.ldif文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> vim refint2.ldif </span><br><span class="line"> </span><br><span class="line">dn: olcOverlay=refint,olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">objectClass: olcConfig</span><br><span class="line">objectClass: olcOverlayConfig</span><br><span class="line">objectClass: olcRefintConfig</span><br><span class="line">objectClass: top</span><br><span class="line">olcOverlay: refint</span><br><span class="line">olcRefintAttribute: memberof member manager owner</span><br><span class="line"><span class="comment">#olcRefintAttribute: memberof uniqueMember  manager owner</span></span><br></pre></td></tr></table></figure><p><img src="/articles/53f92c3c/3.jpeg" alt></p><h4 id="导入配置"><a href="#导入配置" class="headerlink" title="导入配置"></a>导入配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注意：导入时文件路径跟绝对路径</span></span><br><span class="line">ldapadd -Q -Y EXTERNAL -H ldapi:/// -f  /data/disk1/openladp/memberof_conf.ldif </span><br><span class="line">ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f  /data/disk1/openladp/refint1.ldif </span><br><span class="line">ldapadd -Q -Y EXTERNAL -H ldapi:/// -f /data/disk1/openladp/refint2.ldif</span><br></pre></td></tr></table></figure><p><img src="/articles/53f92c3c/4.jpeg" alt></p><p>以上步骤就完成了OpenLDAP的MemberOf模块启用。</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>验证一下配置，这个命令可以列出所有配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slapcat -b cn=config</span><br></pre></td></tr></table></figure><p><strong>创建用户测试</strong></p><p>1, 创建一个测试用户cdsw_a,ldif文件内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vim cdsw_user.ldif</span><br><span class="line"></span><br><span class="line">dn: uid=cdsw_a,ou=People,dc=fayson,dc=com</span><br><span class="line">uid: cdsw_a</span><br><span class="line">cn: cdsw_a</span><br><span class="line">objectClass: account</span><br><span class="line">objectClass: posixAccount</span><br><span class="line">objectClass: top</span><br><span class="line">objectClass: shadowAccount</span><br><span class="line">userPassword: 123456</span><br><span class="line">shadowLastChange: 17694</span><br><span class="line">shadowMin: 0</span><br><span class="line">shadowMax: 99999</span><br><span class="line">shadowWarning: 7</span><br><span class="line">loginShell: /bin/bash</span><br><span class="line">uidNumber: 10001</span><br><span class="line">gidNumber: 10001</span><br><span class="line">homeDirectory: /home/cdsw_a</span><br></pre></td></tr></table></figure><p>2, 执行如下命令将cdsw_a用户导入到OpenLDAP中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapadd -D &quot;cn=Manager,dc=fayson,dc=com&quot; -W -x -f cdsw_user.ldif</span><br></pre></td></tr></table></figure><p><img src="/articles/53f92c3c/5.png" alt></p><p>3, 创建一个新的groupOfUniqueNames用户组，并把cdsw_a用户添加到该组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim cdsw_group.ldif </span><br><span class="line"></span><br><span class="line">dn: cn=cdsw_admin,ou=Group,dc=fayson,dc=com</span><br><span class="line">objectClass: groupOfUniqueNames</span><br><span class="line">cn: cdsw_admin</span><br><span class="line">uniqueMember: uid=cdsw_a,ou=People,dc=fayson,dc=com</span><br></pre></td></tr></table></figure><p><img src="/articles/53f92c3c/6.png" alt></p><ol start="4"><li>将cdsw_admin组添加到OpenLDAP中</li></ol><p><img src="/articles/53f92c3c/7.png" alt></p><ol start="5"><li>通过命令查看用户所属组，命令如下</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -LL -Y EXTERNAL -H ldapi:/// <span class="string">"(uid=cdsw_a)"</span> -b dc=fayson,dc=com memberOf</span><br></pre></td></tr></table></figure><p><img src="/articles/53f92c3c/10.jpeg" alt></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>在OpenLDAP中配置启用MemberOf时需要注意配置文件的通配符{0}/{2},这个数字不是随意指定的而是根据当前的/etc/openldap/slapd.d/cn=config/生成的内容得出</p><p><img src="/articles/53f92c3c/8.jpeg" alt></p><p>搜索例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># docker openldap</span><br><span class="line">docker exec xxxx ldapsearch -x -D &quot;cn=admin,dc=xxxx,dc=com&quot; -w &quot;xxxx&quot; -b &quot;dc=xxxx,dc=com&quot; &quot;cn=*&quot;</span><br><span class="line"></span><br><span class="line">#现在默认用docker安装openldap是开启了memberof，所以直接添加用户，添加用户组后，直接用下面命令验证</span><br><span class="line">ldapsearch -LL  -H ldapi:/// -D &quot;cn=admin,dc=xxx,dc=net&quot; -W &quot;(uid=sunxu)&quot; -b dc=xxx,dc=net memberOf</span><br></pre></td></tr></table></figure><p><img src="/articles/53f92c3c/8.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;默认情况下OpenLDAP的用户组属性是Posixgroup，Posixgroup用户组和用户没有实际的对应关系。如果需要把Posixgroup和user关联起来则需要将用户添加到对应的组中。 通过如上配置可以满足大部分业务场景，但是如果需要通过用户组来查找用户的话，Posixgroup用户组属性，是无法满足要求的。此时需要使用OpenLDAP的groupOfUniqueNames用户组属性。本篇文章Fayson主要介绍如何为OpenLDAP启用MemberOf。&lt;/p&gt;
    
    </summary>
    
      <category term="应用运维" scheme="https://wandouduoduo.netlify.com/categories/%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Openldap" scheme="https://wandouduoduo.netlify.com/tags/Openldap/"/>
    
  </entry>
  
</feed>
