<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>豌豆多多</title>
  
  <subtitle>SRE &amp; Devops &amp; Architect</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wandouduoduo.github.io/"/>
  <updated>2020-08-06T12:56:50.245Z</updated>
  <id>https://wandouduoduo.github.io/</id>
  
  <author>
    <name>WanDouDuoDuo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>单台centos7服务器Docker部署sentry服务</title>
    <link href="https://wandouduoduo.github.io/articles/f8ef44df.html"/>
    <id>https://wandouduoduo.github.io/articles/f8ef44df.html</id>
    <published>2020-08-06T03:45:38.000Z</published>
    <updated>2020-08-06T12:56:50.245Z</updated>
    
    <content type="html"><![CDATA[<p><code>Sentry</code> 是一个实时事件的日志聚合平台。它专门监测错误并提取所有有用信息用于分析，不再麻烦地依赖用户反馈来定位问题。它是一款基于 <code>Django</code>实现的错误日志收集和聚合的平台，它是 <code>Python</code> 实现的，但是其日志监控功能却不局限于<code>python</code>，对诸如 <code>Node.js</code>, <code>php</code>,<code>ruby</code>, <code>C#</code>,<code>java</code> 等语言的项目都可以做到无缝集成，甚至可以用来对<code>iOS</code>, <code>Android</code> 移动客户端以及 <code>Web</code>前端异常进行跟踪。我们可以在程序中捕获异常，并发送到 <code>Sentry</code>服务端进行聚合统计、展示和报警。sentry官方推荐docker方式安装，使用到了docker-compose。本文就详细教你如果搭建部署sentry服务。</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>centos7.x</p><p>docker-ce  Version: 19.03.12</p><p>docker-compose  version 1.26.2（官方要求最低版本为1.23.0，必须要大于最低要求） </p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://github.com/getsentry/onpremise" rel="noopener" target="_blank">Sentry官网</a></p><h2 id="架构原理"><a href="#架构原理" class="headerlink" title="架构原理"></a>架构原理</h2><p>Sentry到底是如何实现实时日志监控报警的呢？首先，Sentry是一个C/S架构，我们需要在自己应用中集成Sentry的SDK才能在应用发生错误是将错误信息发送给Sentry服务端。根据语言和框架的不同，我们可以选择自动或自定义设置特殊的错误类型报告给Sentry服务端。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f8ef44df/1.png" alt></p><p>而Sentry的服务端分为web、cron、worker这几个部分，应用（客户端）发生错误后将错误信息上报给web，web处理后放入消息队列或Redis内存队列，worker从队列中消费数据进行处理。</p><h2 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h2><p>Sentry服务依赖比较多，并且官方也推荐使用docker方式进行安装，需要先部署docker环境</p><h3 id="更换yum为阿里源"><a href="#更换yum为阿里源" class="headerlink" title="更换yum为阿里源"></a>更换yum为阿里源</h3><p>安装完操作系统后，有些版本系统yum源五花八门不统一，在后面的一些安装过程中可能会有异常或报错。那么这里就统一换成阿里源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份本地源</span></span><br><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo_bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取阿里源配置文件</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新epel仓库</span></span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新cache</span></span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">yum update</span><br></pre></td></tr></table></figure><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装docker依赖环境</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加yum源</span></span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装docker-ce</span></span><br><span class="line">yum install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看docker版本</span></span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f8ef44df/2.png" alt></p><h3 id="安装组件依赖"><a href="#安装组件依赖" class="headerlink" title="安装组件依赖"></a>安装组件依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y</span><br><span class="line">yum install  python-pip -y</span><br><span class="line">yum install docker-compose -y</span><br><span class="line">yum install git -y</span><br><span class="line"><span class="comment"># 查看版本，版本必须要大于官网最低要求的1.23.0</span></span><br><span class="line">docker-compose -v</span><br><span class="line">docker-compose version 1.18.0, build 8dd22a9</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如上图直接安装的版本为1.18.0，小于官网最低限制要求，就需要手动安装</span></span><br><span class="line"><span class="comment"># 官方地址为https://github.com/docker/compose/releases/</span></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">yum remove docker-compose -y</span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"><span class="comment"># 赋权</span></span><br><span class="line">chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"><span class="comment"># 软连</span></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  <span class="built_in">clone</span> https://github.com/getsentry/onpremise.git</span><br></pre></td></tr></table></figure><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>切换到onpremise目录下，可以直接执行./install.sh脚本进行一键安装，不过在安装之前需要修改几个配置项</p><p>官方readme教程如图</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f8ef44df/3.png" alt></p><p>按照官方教程中生成配置文件，并按照顺序对配置文件进行更改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> sentry</span><br><span class="line">cp config.example.yml config.yml</span><br><span class="line"><span class="comment">#如没有自定义redis等存储，就不需要生成sentry.conf.py</span></span><br><span class="line">cp sentry.conf.example.py sentry.conf.py</span><br><span class="line"></span><br><span class="line">vim config.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># mail.backend: 'smtp'  # Use dummy if you want to disable email entirely</span></span><br><span class="line">mail.host: <span class="string">'localhost'</span></span><br><span class="line">mail.port: 25</span><br><span class="line">mail.username: <span class="string">'xxxxxxxxxxxxxxxxxx'</span></span><br><span class="line">mail.password: <span class="string">'xxxxxxxxxxxxxxxxxx'</span></span><br><span class="line">mail.use-tls: <span class="literal">false</span></span><br><span class="line">mail.from: <span class="string">'xxxxxxxxxxxxxxx'</span></span><br><span class="line"></span><br><span class="line">./install.sh</span><br><span class="line"></span><br><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f8ef44df/4.png" alt></p><h3 id="访问验证"><a href="#访问验证" class="headerlink" title="访问验证"></a>访问验证</h3><p>浏览器访问<a href="http://ip:9000，账号/密码为./install.sh步骤输入的账号密码" rel="noopener" target="_blank">http://ip:9000，账号/密码为./install.sh步骤输入的账号密码</a></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f8ef44df/5.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f8ef44df/6.png" alt></p><h2 id="服务使用"><a href="#服务使用" class="headerlink" title="服务使用"></a>服务使用</h2><h3 id="设置语言和时区"><a href="#设置语言和时区" class="headerlink" title="设置语言和时区"></a>设置语言和时区</h3><p>setting –&gt;  Account  –&gt; Details</p><p>修改保存后需要登出，重新登录</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f8ef44df/7.png" alt></p><h3 id="验证邮箱"><a href="#验证邮箱" class="headerlink" title="验证邮箱"></a>验证邮箱</h3><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f8ef44df/8.png" alt></p><p>到邮箱中查看邮件验证即可。</p><p>然后创建项目，就可以愉快的使用啦！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Sentry&lt;/code&gt; 是一个实时事件的日志聚合平台。它专门监测错误并提取所有有用信息用于分析，不再麻烦地依赖用户反馈来定位问题。它是一款基于 &lt;code&gt;Django&lt;/code&gt;实现的错误日志收集和聚合的平台，它是 &lt;code&gt;Python&lt;/code&gt; 实现的，但是其日志监控功能却不局限于&lt;code&gt;python&lt;/code&gt;，对诸如 &lt;code&gt;Node.js&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;,&lt;code&gt;ruby&lt;/code&gt;, &lt;code&gt;C#&lt;/code&gt;,&lt;code&gt;java&lt;/code&gt; 等语言的项目都可以做到无缝集成，甚至可以用来对&lt;code&gt;iOS&lt;/code&gt;, &lt;code&gt;Android&lt;/code&gt; 移动客户端以及 &lt;code&gt;Web&lt;/code&gt;前端异常进行跟踪。我们可以在程序中捕获异常，并发送到 &lt;code&gt;Sentry&lt;/code&gt;服务端进行聚合统计、展示和报警。sentry官方推荐docker方式安装，使用到了docker-compose。本文就详细教你如果搭建部署sentry服务。&lt;/p&gt;
    
    </summary>
    
      <category term="监控技术" scheme="https://wandouduoduo.github.io/categories/%E7%9B%91%E6%8E%A7%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Docker" scheme="https://wandouduoduo.github.io/tags/Docker/"/>
    
      <category term="Sentry" scheme="https://wandouduoduo.github.io/tags/Sentry/"/>
    
  </entry>
  
  <entry>
    <title>vim粘贴技巧</title>
    <link href="https://wandouduoduo.github.io/articles/ecd2483d.html"/>
    <id>https://wandouduoduo.github.io/articles/ecd2483d.html</id>
    <published>2020-07-28T10:20:44.000Z</published>
    <updated>2020-08-04T04:25:48.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>vi(vim)作为所有linux发行版本中默认的文本编辑工具，因其功能强大和适用而广受欢迎。用法这里就不再赘述，本文是介绍了vim粘贴代码时的一个技巧。</p><a id="more"></a><h2 id="详情"><a href="#详情" class="headerlink" title="详情"></a>详情</h2><h3 id="问题显现"><a href="#问题显现" class="headerlink" title="问题显现"></a>问题显现</h3><p>当我们用终端登录服务器，在用vim粘贴代码时，如果代码中有注释，那么粘贴后就惨不忍睹，如下图:</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/ecd2483d/1.png" alt="1595931731437"></p><p>粘贴代码内容如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_hex</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>*data,<span class="keyword">int</span> length,<span class="keyword">int</span> radix=<span class="number">16</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i%radix==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0x "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%02x "</span>,data[i]);</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">4</span>==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"  "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i%radix==radix<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码也是很正常的c语言代码，那么出现这种情况的原因是什么呢?  大家是否想过呢？</p><h3 id="刨根问底"><a href="#刨根问底" class="headerlink" title="刨根问底"></a>刨根问底</h3><p>我们在vim中，输入 :set，就可以得到选项列表如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/ecd2483d/2.png" alt="1595932444339"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">formatoptions=croql</span><br></pre></td></tr></table></figure><p>看到上面这个选项，这个选项就是罪魁祸首，选项意思为：vim注释自动格式化</p><p>所以希望在~/.vimrc中设置环境变量，比如设置为 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set formatoptions=tcpmM</span><br></pre></td></tr></table></figure><p>但是vim不识别此行有报错，又无法禁止这个选项，那要怎么解决呢？</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>经过大量搜索，我们可以在粘贴前vim先进入粘贴插入模式，即不会自动缩进和连续注释。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set paste</span><br></pre></td></tr></table></figure><p>然后再进入插入模式粘贴，如图：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/ecd2483d/3.png" alt="1595933129736"></p><p>如上图，在插入模式后多了一个paste。这样就可以按照完整粘贴了。</p><h3 id="提示和建议"><a href="#提示和建议" class="headerlink" title="提示和建议"></a><strong>提示和建议</strong></h3><p>完整粘贴解决了，但是在粘贴插入模式下代码是不会自动按格式缩进的，这是就需要使用nopaste设置回来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set nopaste</span><br></pre></td></tr></table></figure><p>也可以在.vimrc中设置切换的快捷键，比如设置F9，则可以在.vimrc中加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set pastetoggle=&lt;F9&gt;</span><br></pre></td></tr></table></figure><p>这样直接在插入模式按F9就会在“插入”模式和“插入（粘贴）”模式自由切换</p><h2 id="探秘"><a href="#探秘" class="headerlink" title="探秘"></a>探秘</h2><p>我们也可以这样设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set noai nosi</span><br></pre></td></tr></table></figure><p>含义是<strong>取消了自动缩进和智能缩进</strong>。这样粘贴就不会错行了，但不是所有的都适用，有的vim这样设置后还是排版错乱。</p><p>更好用的设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set paste</span><br></pre></td></tr></table></figure><p>进入paste模式以后，可以在插入模式下粘贴内容，不会有任何变形，非常好用。</p><p>那么set  paste做了哪些事呢？</p><p>经过探究，做了如下这么多事</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">textwidth设置为0</span><br><span class="line">wrapmargin设置为0</span><br><span class="line"><span class="built_in">set</span> noai</span><br><span class="line"><span class="built_in">set</span> nosi</span><br><span class="line">softtabstop设置为0</span><br><span class="line">revins重置</span><br><span class="line">ruler重置</span><br><span class="line">showmatch重置</span><br><span class="line">formatoptions使用空值</span><br><span class="line"></span><br><span class="line"><span class="comment">#下面的选项值不变，但却被禁用：</span></span><br><span class="line">lisp</span><br><span class="line">indentexpr</span><br><span class="line">cindent</span><br><span class="line"><span class="comment">#怪不得之前只设置noai和nosi不行，原来与这么多因素有关！</span></span><br></pre></td></tr></table></figure><p>但要做上述所有动作比较麻烦的，就用set  paste来一次操作了。但每次要粘贴的话，先set paste，然后粘贴，然后再set nopaste。有没有更方便的呢？对的，强烈建议设置快捷键。</p><p>GUI操作系统的粘贴板，粘贴到命令行的vim中,有快捷键吗???</p><p>事实证明,不太好用，这是最方便的吗？Vimer们对高效的追求永无止境，还有其他更好地方法吗？</p><p>你可能想到了：vim寄存器。</p><p>对，使用vim寄存器 “+p 粘贴即可。这样就不用考虑是否自动缩进，是否paste模式，直接原文传递！</p><h2 id="vim寄存器"><a href="#vim寄存器" class="headerlink" title="vim寄存器"></a>vim寄存器</h2><p>要从vim文件间的复制粘贴说起。Vim 中，若要复制当前行，普通模式下按 yy 即可，在要粘贴的地方按 p 。这时vim将复制内容保存到了自己的寄存器中的缘故。如果在其他地方执行yy，新的内容将覆盖掉原寄存器中内容。如果想保存原寄存器中内容而同时增加新的内容呢？这时就要在yy前增加标签了。标签以双引号开始，跟着的是标签名称，可以是数字0-9，也可以是26个字母，然后就是复制操作，这样就把复制内容保存到该标签寄存器里。通过下面命令显示所有寄存器内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:reg</span><br></pre></td></tr></table></figure><p>其中注意两个特殊的寄存器：<strong>”* 和 “+</strong>。这两个寄存器是和系统相通的，前者关联系统选择缓冲区，后者关联系统剪切板。通过它们可以和其他程序进行数据交换。</p><p><strong>备注</strong><br>若寄存器列表里无”* 或 “+ 寄存器，则可能是由于没有安装vim的图形界面所致。</p><p>Debian/Ubuntu下可以通过安装vim-gnome解决。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vim-gnome</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;vi(vim)作为所有linux发行版本中默认的文本编辑工具，因其功能强大和适用而广受欢迎。用法这里就不再赘述，本文是介绍了vim粘贴代码时的一个技巧。&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/"/>
    
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux性能监控神级工具</title>
    <link href="https://wandouduoduo.github.io/articles/32267dc9.html"/>
    <id>https://wandouduoduo.github.io/articles/32267dc9.html</id>
    <published>2020-07-22T11:23:08.000Z</published>
    <updated>2020-08-04T04:36:42.821Z</updated>
    
    <content type="html"><![CDATA[<p>本文中罗列了一系列使用最频繁的性能监控工具，并对介绍到的每一个工具提供了相应的简介链接，大致将其划分为两类，基于命令行的和提供图形化接口的。</p><a id="more"></a><h2 id="基于命令行"><a href="#基于命令行" class="headerlink" title="基于命令行"></a>基于命令行</h2><h3 id="dstat-多类型资源统计工具"><a href="#dstat-多类型资源统计工具" class="headerlink" title="dstat - 多类型资源统计工具"></a>dstat - 多类型资源统计工具</h3><p>该命令整合了vmstat，iostat和ifstat三种命令。同时增加了新的特性和功能可以让你能及时看到各种的资源使用情况，从而能够使你对比和整合不同的资源使用情况。通过不同颜色和区块布局的界面帮助你能够更加清晰容易的获取信息。它也支持将信息数据导出到cvs格式文件中，从而用其他应用程序打开，或者导入到数据库中。你可以用该命令来监控cpu，内存和网络状态随着时间的变化。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/1.png" alt="1595417560432"></p><h3 id="atop-相比top更好的ASCII码体验"><a href="#atop-相比top更好的ASCII码体验" class="headerlink" title="atop - 相比top更好的ASCII码体验"></a>atop - 相比top更好的ASCII码体验</h3><p>这个使用ASCII码显示方式的命令行工具是一个显示所有进程活动的性能监控工具。它可以展示每日的系统日志以进行长期的进程活动分析，并高亮显示过载的系统使用资源。它包含了CPU，内存，交换空间，磁盘和网络层的度量指标。所有这些功能只需在终端运行atop即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atop</span><br></pre></td></tr></table></figure><p>当然你也可以使用交互界面来显示数据并进行排序。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/2.png" alt="1595417636790"></p><h3 id="Nmon-类Unix系统的性能监控"><a href="#Nmon-类Unix系统的性能监控" class="headerlink" title="Nmon - 类Unix系统的性能监控"></a>Nmon - 类Unix系统的性能监控</h3><p>Nmon是Nigel’s Monitor缩写，它最早开发用来作为AIX的系统监控工具。如果使用在线模式，可以使用光标键在屏幕上操作实时显示在终端上的监控信息。使用捕捉模式能够将数据保存为CSV格式，方便进一步的处理和图形化展示。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/3.png" alt="1595417685045"></p><p>更多的信息参考使用nmon进行性能监控的文章。</p><h3 id="slabtop-显示内核slab缓存信息"><a href="#slabtop-显示内核slab缓存信息" class="headerlink" title="slabtop - 显示内核slab缓存信息"></a>slabtop - 显示内核slab缓存信息</h3><p>这个应用能够显示缓存分配器是如何管理Linux内核中缓存的不同类型的对象。这个命令类似于top命令，区别是它的重点是实时显示内核slab缓存信息。它能够显示按照不同排序条件来排序显示缓存列表。它同时也能够显示一个slab层信息的统计信息的题头。举例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># slabtop --sort=a</span><br><span class="line"># slabtop -s b</span><br><span class="line"># slabtop -s c</span><br><span class="line"># slabtop -s l</span><br><span class="line"># slabtop -s v</span><br><span class="line"># slabtop -s n</span><br><span class="line"># slabtop -s o</span><br></pre></td></tr></table></figure><p>更多的信息参考监控内核slab缓存的文章。</p><h3 id="sar-性能监控和瓶颈检查"><a href="#sar-性能监控和瓶颈检查" class="headerlink" title="sar - 性能监控和瓶颈检查"></a>sar - 性能监控和瓶颈检查</h3><p>sar 命令可以将操作系统上所选的累积活动计数器内容信息输出到标准输出上。其基于计数值和时间间隔参数的审计系统，会按照指定的时间间隔输出指定次数的监控信息。如果时间间隔参数为设置为0，那么sar命令将会显示系统从开机到当时时刻的平均统计信息。有用的命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># sar -u 2 3</span><br><span class="line"></span><br><span class="line"># sar -u -f /var/log/sa/sa05</span><br><span class="line"></span><br><span class="line"># sar -P ALL 1 1</span><br><span class="line"></span><br><span class="line"># sar -r 1 3</span><br><span class="line"></span><br><span class="line"># sar -W 1 3</span><br></pre></td></tr></table></figure><h3 id="Saidar-简单的统计监控工具"><a href="#Saidar-简单的统计监控工具" class="headerlink" title="Saidar - 简单的统计监控工具"></a>Saidar - 简单的统计监控工具</h3><p>Saidar是一个简单且轻量的系统信息监控工具。虽然它无法提供大多性能报表，但是它能够通过一个简单明了的方式显示最有用的系统运行状况数据。你可以很容易地看到运行时间、平均负载、CPU、内存、进程、磁盘和网络接口统计信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Usage: saidar [-d delay] [-c] [-v] [-h]</span><br><span class="line"></span><br><span class="line">-d 设置更新时间（秒）</span><br><span class="line">-c 彩色显示</span><br><span class="line">-v 显示版本号</span><br><span class="line">-h 显示本帮助</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/4.png" alt="1595417753745"></p><h3 id="top-经典的Linux任务管理工具"><a href="#top-经典的Linux任务管理工具" class="headerlink" title="top - 经典的Linux任务管理工具"></a>top - 经典的Linux任务管理工具</h3><p>作为一个广为人知的Linux工具，top是大多数的类Unix操作系统任务管理器。它可以显示当前正在运行的进程的列表，用户可以按照不同的条件对该列表进行排序。它主要显示了系统进程对CPU和内存的使用状况。top可以快速检查是哪个或哪几个进程挂起了你的系统。你可以在这里看到top使用的例子。 你可以在终端输入top来运行它并进入到交互模式：</p><p>交互模式的一些快捷操作:</p><pre><code>全局命令: &lt;回车/空格&gt; ?, =, A, B, d, G, h, I, k, q, r, s, W, Z统计区的命令: l, m, t, 1任务区的命令：     外观: b, x, y, z 内容: c, f, H, o, S, u 大小: #, i, n 排序: &lt;, &gt;, F, O, R色彩方案: &lt;Ret&gt;, a, B, b, H, M, q, S, T, w, z, 0 - 7窗口命令:  -, _, =, +, A, a, G, g, w</code></pre><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/5.png" alt="1595417803905"></p><h3 id="Sysdig-系统进程的高级视图"><a href="#Sysdig-系统进程的高级视图" class="headerlink" title="Sysdig - 系统进程的高级视图"></a>Sysdig - 系统进程的高级视图</h3><p>Sysdig是一个能够让系统管理员和开发人员以前所未有方式洞察其系统行为的监控工具。其开发团队希望改善系统级的监控方式，通过提供关于存储，进程，网络和内存子系统的统一有序以及粒度可见的方式来进行错误排查，并可以创建系统活动记录文件以便你可以在任何时间轻松分析。</p><p>简单例子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># sysdig proc.name=vim</span><br><span class="line"></span><br><span class="line"># sysdig -p&quot;%proc.name %fd.name&quot; &quot;evt.type=accept and proc.name!=httpd&quot;</span><br><span class="line"></span><br><span class="line"># sysdig evt.type=chdir and user.name=root</span><br><span class="line"></span><br><span class="line"># sysdig -l</span><br><span class="line"></span><br><span class="line"># sysdig -L</span><br><span class="line"></span><br><span class="line"># sysdig -c topprocs_net</span><br><span class="line"></span><br><span class="line"># sysdig -c fdcount_by fd.sport &quot;evt.type=accept&quot;</span><br><span class="line"></span><br><span class="line"># sysdig -p&quot;%proc.name %fd.name&quot; &quot;evt.type=accept and proc.name!=httpd&quot;</span><br><span class="line"></span><br><span class="line"># sysdig -c topprocs_file</span><br><span class="line"></span><br><span class="line"># sysdig -c fdcount_by proc.name &quot;fd.type=file&quot;</span><br><span class="line"></span><br><span class="line"># sysdig -p &quot;%12user.name %6proc.pid %12proc.name %3fd.num %fd.typechar %fd.name&quot; evt.type=open</span><br><span class="line"></span><br><span class="line"># sysdig -c topprocs_cpu</span><br><span class="line"></span><br><span class="line"># sysdig -c topprocs_cpu evt.cpu=0</span><br><span class="line"></span><br><span class="line"># sysdig -p&quot;%evt.arg.path&quot; &quot;evt.type=chdir and user.name=root&quot;</span><br><span class="line"></span><br><span class="line"># sysdig evt.type=open and fd.name contains /etc</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/6.png" alt="1595417847521"></p><h3 id="netstat-显示开放的端口和连接"><a href="#netstat-显示开放的端口和连接" class="headerlink" title="netstat - 显示开放的端口和连接"></a>netstat - 显示开放的端口和连接</h3><p>它是Linux管理员使用来显示各种网络信息的工具，如查看什么端口开放和什么网络连接已经建立以及何种进程运行在该连接之上。同时它也显示了不同程序间打开的Unix套接字的信息。作为大多数Linux发行版本的一部分，netstat的许多命令在netstat和它的不同输出中有详细的描述。最为常用的如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ netstat | head -20</span><br><span class="line">$ netstat -r</span><br><span class="line">$ netstat -rC</span><br><span class="line">$ netstat -i</span><br><span class="line">$ netstat -ie</span><br><span class="line">$ netstat -s</span><br><span class="line">$ netstat -g</span><br><span class="line">$ netstat -tapn</span><br></pre></td></tr></table></figure><h3 id="tcpdump-洞察网络封包"><a href="#tcpdump-洞察网络封包" class="headerlink" title="tcpdump - 洞察网络封包"></a>tcpdump - 洞察网络封包</h3><p>tcpdump可以用来查看网络连接的封包内容。它显示了传输过程中封包内容的各种信息。为了使得输出信息更为有用，它允许使用者通过不同的过滤器获取自己想要的信息。可以参照的例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># tcpdump -i eth0 not port 22</span><br><span class="line"></span><br><span class="line"># tcpdump -c 10 -i eth0</span><br><span class="line"></span><br><span class="line"># tcpdump -ni eth0 -c 10 not port 22</span><br><span class="line"></span><br><span class="line"># tcpdump -w aloft.cap -s 0</span><br><span class="line"></span><br><span class="line"># tcpdump -r aloft.cap</span><br><span class="line"></span><br><span class="line"># tcpdump -i eth0 dst port 80</span><br></pre></td></tr></table></figure><p>更多的信息可以在使用topdump捕捉包中找到详细描述。</p><h3 id="vmstat-虚拟内存统计信息"><a href="#vmstat-虚拟内存统计信息" class="headerlink" title="vmstat - 虚拟内存统计信息"></a>vmstat - 虚拟内存统计信息</h3><p>vmstat是虚拟内存(virtual memory statistics)的缩写，作为一个内存监控工具，它收集和显示关于内存，进程，终端和分页和I/O阻塞的概括信息。作为一个开源程序，它可以在大部分Linux发行版本中找到，包括Solaris和FreeBSD。它用来诊断大部分的内存性能问题和其他相关问题。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/7.png" alt="1595417887916"></p><p>更多的信息参考vmstat命令的文章。</p><h3 id="free-内存统计信息"><a href="#free-内存统计信息" class="headerlink" title="free - 内存统计信息"></a>free - 内存统计信息</h3><p>free是另一个能够在终端中显示内存和交换空间使用的命令行工具。由于它的简易，它经常用于快速查看内存使用或者是应用于不同的脚本和应用程序中。在这里你可以看到这个小程序的许多应用。几乎所有的系统管理员日常都会用这个工具。:-)</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/8.png" alt="1595417922160"></p><h3 id="Htop-更加友好的top"><a href="#Htop-更加友好的top" class="headerlink" title="Htop - 更加友好的top"></a>Htop - 更加友好的top</h3><p>Htop基本上是一个top改善版本，它能够以更加多彩的方式显示更多的统计信息，同时允许你采用不同的方式进行排序，它提供了一个用户友好的接口。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/9.png" alt="1595417955023"></p><p>更多的信息参考我们的文章：“关于htop和top的比较”。</p><h3 id="ss-网络管理的现代替代品"><a href="#ss-网络管理的现代替代品" class="headerlink" title="ss - 网络管理的现代替代品"></a>ss - 网络管理的现代替代品</h3><p>ss是iproute2包的一部分。iproute2是用来替代一整套标准的Unix网络工具组件，它曾经用来完成网络接口配置，路由表和管理ARP表任务。ss工具用来记录套接字统计信息，它可以显示类似netstat一样的信息，同时也能显示更多TCP和状态信息。一些例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># ss -tnap</span><br><span class="line"></span><br><span class="line"># ss -tnap6</span><br><span class="line"></span><br><span class="line"># ss -tnap</span><br><span class="line"></span><br><span class="line"># ss -s</span><br><span class="line"></span><br><span class="line"># ss -tn -o state established -p</span><br></pre></td></tr></table></figure><h3 id="lsof-列表显示打开的文件"><a href="#lsof-列表显示打开的文件" class="headerlink" title="lsof - 列表显示打开的文件"></a>lsof - 列表显示打开的文件</h3><p>lsof命令，意为“list open files”, 用于在许多类Unix系统中显示所有打开的文件及打开它们的进程。在大部分Linux发行版和其他类Linux操作系统中系统管理员用它来检查不同的进程打开了哪些文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># lsof +p process_id</span><br><span class="line"></span><br><span class="line"># lsof | less</span><br><span class="line"></span><br><span class="line"># lsof –u username</span><br><span class="line"></span><br><span class="line"># lsof /etc/passwd</span><br><span class="line"></span><br><span class="line"># lsof –i TCP:ftp</span><br><span class="line"></span><br><span class="line"># lsof –i TCP:80</span><br></pre></td></tr></table></figure><p>更多的信息参考我们的文章：lsof 的使用。</p><h3 id="iftop-类似top的了网络连接工具"><a href="#iftop-类似top的了网络连接工具" class="headerlink" title="iftop - 类似top的了网络连接工具"></a>iftop - 类似top的了网络连接工具</h3><p>iftop是另一个基于网络信息的类似top的程序。它能够显示当前时刻按照带宽使用量或者上传或者下载量排序的网络连接状况。它同时提供了下载文件的预估完成时间。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/10.png" alt="1595417998823"></p><h3 id="iperf-网络性能工具"><a href="#iperf-网络性能工具" class="headerlink" title="iperf - 网络性能工具"></a>iperf - 网络性能工具</h3><p>iperf是一个网络测试工具，能够创建TCP和UDP数据连接并在网络上测量它们的传输性能。它支持调节关于时间，协议和缓冲等不同的参数。对于每一个测试，它会报告带宽，丢包和其他的一些参数。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/11.png" alt="1595418037478"></p><p>如果你想用使用这个工具，可以参考这篇文章： 如何安装和使用iperf。</p><h3 id="Smem-高级内存报表工具"><a href="#Smem-高级内存报表工具" class="headerlink" title="Smem - 高级内存报表工具"></a>Smem - 高级内存报表工具</h3><p>Smem是最先进的Linux命令行工具之一，它提供关于系统中已经使用的和共享的实际内存大小，试图提供一个更为可靠的当前内存使用数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ smem -m</span><br><span class="line">$ smem -m -p | grep firefox</span><br><span class="line">$ smem -u -p</span><br><span class="line">$ smem -w -p</span><br></pre></td></tr></table></figure><p>参考我们的文章：Smem更多的例子。</p><h2 id="图形化或基于Web"><a href="#图形化或基于Web" class="headerlink" title="图形化或基于Web"></a>图形化或基于Web</h2><h3 id="Icinga-Nagios的社区分支版本"><a href="#Icinga-Nagios的社区分支版本" class="headerlink" title="Icinga - Nagios的社区分支版本"></a>Icinga - Nagios的社区分支版本</h3><p>Icinga是一个开源免费的网络监控程序，作为Nagios的分支，它继承了前者现有的大部分功能，同时基于这些功能又增加了社区用户要求已久的功能和补丁。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/12.png" alt="1595419770551"></p><p>更多信息请参考安装和配置lcinga文章。</p><h3 id="Nagios-最为流行的监控工具"><a href="#Nagios-最为流行的监控工具" class="headerlink" title="Nagios - 最为流行的监控工具"></a>Nagios - 最为流行的监控工具</h3><p>作为在Linux上使用最为广泛和最为流行的监控方案，它有一个守护程序用来收集不同进程和远程主机的信息，这些收集到的信息都通过功能强大的web界面进行呈现。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/13.png" alt="1595419801404"></p><p>你可以在文章“如何安装nagios”里面找到更多的信息。</p><h3 id="Linux-process-explorer-Linux下的procexp"><a href="#Linux-process-explorer-Linux下的procexp" class="headerlink" title="Linux process explorer - Linux下的procexp"></a>Linux process explorer - Linux下的procexp</h3><p>Linux process explorer是一个Linux下的图形化进程浏览工具。它能够显示不同的进程信息，如进程数，TCP/IP连接和每一个进程的性能指标。作为Windows下procexp在Linux的替代品，是由Sysinternals开发的，其目标是比top和ps提供更好用户体验。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/14.png" alt="1595419836078"></p><p>查看 linux process explorer 的文章获取更多信息。</p><h3 id="Collectl-性能监控工具"><a href="#Collectl-性能监控工具" class="headerlink" title="Collectl - 性能监控工具"></a>Collectl - 性能监控工具</h3><p>你可以既可以通过交互的方式使用这个性能监控工具，也可以用它把报表写到磁盘上，并通过web服务器来访问。它以一种易读易管理的格式，显示了CPU，磁盘，内存，网络，网络文件系统，进程，slabs等统计信息。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/15.png" alt="1595419868229"></p><p>更多信息请参看Collectl的文章。</p><h3 id="MRTG-经典网络流量监控图形工具"><a href="#MRTG-经典网络流量监控图形工具" class="headerlink" title="MRTG - 经典网络流量监控图形工具"></a>MRTG - 经典网络流量监控图形工具</h3><p>这是一个采用rrdtool的生成图形的流量监控工具。作为最早的提供图形化界面的流量监控工具，它被广泛应用在类Unix的操作系统中。查看我们关于如何使用MRTG的文章获取更多关于安装和配置的信息。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/16.png" alt="1595419898124"></p><h3 id="Monit-简单易用的监控工具"><a href="#Monit-简单易用的监控工具" class="headerlink" title="Monit - 简单易用的监控工具"></a>Monit - 简单易用的监控工具</h3><p>Monit是一个用来监控进程，系统加载，文件系统和目录文件等的开源的Linux工具。你能够让它自动化维护和修复，也能够在运行错误的情景下执行特定动作或者发邮件报告提醒系统管理员。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/17.png" alt="1595419925903"></p><p>如果你想要用这个工具，你可以查看如何使用Monit的文章。</p><h3 id="Munin-为服务器提供监控和提醒服务"><a href="#Munin-为服务器提供监控和提醒服务" class="headerlink" title="Munin - 为服务器提供监控和提醒服务"></a>Munin - 为服务器提供监控和提醒服务</h3><p>作为一个网络资源监控工具，Munin能够帮助分析资源趋势和查看薄弱环节以及导致产生性能问题的原因。开发此软件的团队希望它能够易用和用户体验友好。该软件是用Perl开发的，并采用rrdtool来绘制图形，使用了web界面进行呈现。开发人员推广此应用时声称当前已有500多个监控插件可以“即插即用”。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/32267dc9/18.png" alt="1595419954404"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文中罗列了一系列使用最频繁的性能监控工具，并对介绍到的每一个工具提供了相应的简介链接，大致将其划分为两类，基于命令行的和提供图形化接口的。&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/"/>
    
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>centos7.x添加开机启动</title>
    <link href="https://wandouduoduo.github.io/articles/5b4c4c27.html"/>
    <id>https://wandouduoduo.github.io/articles/5b4c4c27.html</id>
    <published>2020-07-22T07:36:34.000Z</published>
    <updated>2020-08-04T06:27:19.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>搭建环境、部署服务这是运维工作中很常见的工作，也是比较频繁的。那么如果搭建环境或部署服务的这台服务器因为各种突发原因（如停电，磁盘异常进行替换或资源扩容等等）重启了。这个服务很重要的，但是服务器重启后肯定服务没有自己启动，而又在一年前部署的，这时就需要我们去查当初的部署文档，手动启动服务。那么有没有方法让服务器启动时自动启动服务呢？本文就介绍这个添加开机启动。</p><a id="more"></a><h2 id="添加开机自启服务"><a href="#添加开机自启服务" class="headerlink" title="添加开机自启服务"></a>添加开机自启服务</h2><p>在CentOS 7中，我们通过yum安装完服务后，添加开机自启服务也是非常方便的，只需要两条命令(以Jenkins为例)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置jenkins服务为开机自启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> jenkins.service </span><br><span class="line"></span><br><span class="line"><span class="comment">#启动jenkins服务</span></span><br><span class="line">sysstemctl start jenkins.service</span><br></pre></td></tr></table></figure><h2 id="添加开机自启脚本"><a href="#添加开机自启脚本" class="headerlink" title="添加开机自启脚本"></a>添加开机自启脚本</h2><p>在centos7中增加自定义脚本开机自启有两种方法，以脚本autostart.sh为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#description:开机自启脚本</span></span><br><span class="line">/usr/<span class="built_in">local</span>/tomcat/bin/startup.sh  <span class="comment">#启动tomcat</span></span><br></pre></td></tr></table></figure><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 赋予脚本可执行权限（/opt/script/autostart.sh是你的脚本路径）</span></span><br><span class="line">chmod +x /opt/script/autostart.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开/etc/rc.d/rc/local文件，在末尾增加如下内容</span></span><br><span class="line">/opt/script/autostart.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在centos7中，/etc/rc.d/rc.local的权限被降低了，所以需要执行如下命令赋予其可执行权限</span></span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将脚本移动到/etc/rc.d/init.d目录下</span></span><br><span class="line">mv  /opt/script/autostart.sh /etc/rc.d/init.d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加脚本的可执行权限</span></span><br><span class="line">chmod +x  /etc/rc.d/init.d/autostart.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加脚本到开机自动启动项目中</span></span><br><span class="line"><span class="built_in">cd</span> /etc/rc.d/init.d</span><br><span class="line">chkconfig --add autostart.sh</span><br><span class="line">chkconfig autostart.sh on</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;搭建环境、部署服务这是运维工作中很常见的工作，也是比较频繁的。那么如果搭建环境或部署服务的这台服务器因为各种突发原因（如停电，磁盘异常进行替换或资源扩容等等）重启了。这个服务很重要的，但是服务器重启后肯定服务没有自己启动，而又在一年前部署的，这时就需要我们去查当初的部署文档，手动启动服务。那么有没有方法让服务器启动时自动启动服务呢？本文就介绍这个添加开机启动。&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/"/>
    
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux中tmp目录清理机制</title>
    <link href="https://wandouduoduo.github.io/articles/88fdad2f.html"/>
    <id>https://wandouduoduo.github.io/articles/88fdad2f.html</id>
    <published>2020-07-22T06:44:35.000Z</published>
    <updated>2020-08-04T06:27:19.614Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在Linux系统中/tmp目录中的文件会被定期删除，但是多长时间被删除呢？又是如何删除的呢？按照什么规则呢？今天就来剖析tmp目录的清理机制。</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Centos    </p><p><em>RHEL\CentOS\Fedora\系统都可</em></p><p>ubuntu</p><p><em>Debian\Ubuntu系统都可</em></p><h2 id="tmpwatch命令"><a href="#tmpwatch命令" class="headerlink" title="tmpwatch命令"></a>tmpwatch命令</h2><p>关于tmpwatch命令的参数，不同版本可能有所不同</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>删除一段时间没有被访问的文件。</p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-u 按照文件的最后access时间，即最后访问时间为参考。默认选项。可通过ls -lu查看。</span><br><span class="line">-m 按照文件的最后modified时间，即最后修改时间为参考。可通过ls -l查看。</span><br><span class="line">-c 按照文件的-ctime时间做参考，ctime更新的条件为写入、更改属主、权限。可通过ls -lc查看。</span><br><span class="line">-M 按照目录的修改时间来删除目录而不是访问时间。</span><br><span class="line">-a 删除所有类型文件。包括目录和symbolic links</span><br><span class="line">-d --nodirs 排除目录文件，即使是空目录。</span><br><span class="line">-d --nosysmlinks 排除symbolic links类型文件。</span><br><span class="line">-f 强制删除那些root没有写权限的文件。比如root的readonly文件</span><br><span class="line">-q 只报告错误信息。</span><br><span class="line">-x /PATH 排除特定目录，即不删除该子目录里的文件。</span><br><span class="line">-U user_name 排除属于特定用户的文件，即不删除该用户的文件。</span><br><span class="line">-v 显示删除过程。默认是不显示删除了什么文件，直接删除的。</span><br><span class="line">-t 用于测试，并不真正删除文件，能显示出要删除文件的过程。</span><br><span class="line">-d 不删除文件里的子目录，但是子目录里面的文件还是会被删除。</span><br></pre></td></tr></table></figure><p>参数后加时间，默认是hours。也可以使用30d表示30天，但是有些版本只支持hours。 时间后是要检查的目录。可以多个目录用空格分开。</p><h2 id="Centos6-x"><a href="#Centos6-x" class="headerlink" title="Centos6.x"></a>Centos6.x</h2><p>这个命令相关的计划任务文件。 </p><p>cat  /etc/cron.daily/tmpwatch，内容 如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/sh </span></span><br><span class="line">flags=-umc </span><br><span class="line">/usr/sbin/tmpwatch <span class="string">"<span class="variable">$flags</span>"</span> -x /tmp/.X11-unix -x /tmp/.XIM-unix \ </span><br><span class="line">        -x /tmp/.font-unix -x /tmp/.ICE-unix -x /tmp/.Test-unix \ </span><br><span class="line">        -X ‘/tmp/hsperfdata_*’ 10d /tmp </span><br><span class="line">/usr/sbin/tmpwatch <span class="string">"<span class="variable">$flags</span>"</span> 30d /var/tmp </span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> /var/&#123;cache/man,catman&#125;/&#123;cat?,X11R6/cat?,<span class="built_in">local</span>/cat?&#125;; <span class="keyword">do</span> </span><br><span class="line">    <span class="keyword">if</span> [ -d <span class="string">"<span class="variable">$d</span>"</span> ]; <span class="keyword">then</span> </span><br><span class="line">        /usr/sbin/tmpwatch <span class="string">"<span class="variable">$flags</span>"</span> -f 30d <span class="string">"<span class="variable">$d</span>"</span> </span><br><span class="line">    <span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>第一行相当于一个标记（参数）</p><p>第二行就是针对/tmp目录里面排除的目录</p><p>第三行，这是对这个/tmp目录的清理，下面的是针对其他目录的清理，就不说了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/tmpwatch &quot;$flags&quot; 30d /var/tmp</span><br></pre></td></tr></table></figure><p>30d，就是30天的意思，决定了30天清理/tmp下不访问的文件。如果说，你想一天一清理的话，就把这个30d改成1d。这个你懂的……哈哈！</p><p>但有个问题需要注意，如果你设置更短的时间来清理的话，比如说是30分钟、10秒等等，你可以在这个文件中设置，但你会发现，它不会清理/tmp文件夹里面的内容，这是为什么呢？</p><p>这就是tmpwatch他所在的位置决定的，他的上层目录是/etc/cron.daily/，而这个目录是每天执行一次计划任务，所以说，你设置了比一天更短的时间，他就不起作用了，这下明白了吧。 </p><p><strong>注意</strong></p><p>在RHEL6中，系统自动清理/tmp文件夹的默认时限是30天</p><h2 id="Centos7-x"><a href="#Centos7-x" class="headerlink" title="Centos7.x"></a>Centos7.x</h2><p>CentOS6以下系统（含）如上所述使用tmpwatch + cron来实现定时清理临时文件的效果。这点在CentOS7发生了变化，在CentOS7下，系统使用systemd管理易变与临时文件，与之相关的系统服务有3个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemd-tmpfiles-setup.service  ：Create Volatile Files and Directories</span><br><span class="line">systemd-tmpfiles-setup-dev.service：Create static device nodes <span class="keyword">in</span> /dev</span><br><span class="line">systemd-tmpfiles-clean.service ：Cleanup of Temporary Directories</span><br></pre></td></tr></table></figure><p>相关的配置文件也有3个地方：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/tmpfiles.d/*.conf</span><br><span class="line">/run/tmpfiles.d/*.conf</span><br><span class="line">/usr/lib/tmpfiles.d/*.conf</span><br></pre></td></tr></table></figure><p>/tmp目录的清理规则主要取决于 /usr/lib/tmpfiles.d/tmp.conf 文件的设定，默认的配置内容为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  This file is part of systemd.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  systemd is free software; you can redistribute it and/or modify it</span></span><br><span class="line"><span class="comment">#  under the terms of the GNU Lesser General Public License as published by</span></span><br><span class="line"><span class="comment">#  the Free Software Foundation; either version 2.1 of the License, or</span></span><br><span class="line"><span class="comment">#  (at your option) any later version.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># See tmpfiles.d(5) for details</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Clear tmp directories separately, to make them easier to override</span></span><br><span class="line">v /tmp 1777 root root 10d           <span class="comment">#   清理/tmp下10天前的目录和文件</span></span><br><span class="line">v /var/tmp 1777 root root 30d       <span class="comment">#   清理/var/tmp下30天前的目录和文件</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Exclude namespace mountpoints created with PrivateTmp=yes</span></span><br><span class="line">x /tmp/systemd-private-%b-*</span><br><span class="line">X /tmp/systemd-private-%b-*/tmp</span><br><span class="line">x /var/tmp/systemd-private-%b-*</span><br><span class="line">X /var/tmp/systemd-private-%b-*/tmp</span><br></pre></td></tr></table></figure><p>我们可以配置这个文件，比如你不想让系统自动清理/tmp下以tomcat开头的目录，那么增加下面这条内容到配置文件中即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x /tmp/tomcat.*</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x  在根据&quot;寿命&quot;字段清理过期文件时， 忽略指定的路径及该路径下的所有内容。 可以在&quot;路径&quot;字段中使用shell风格的通配符。 注意，这个保护措施对 r 与 R 无效。</span><br><span class="line"></span><br><span class="line">X  在根据&quot;寿命&quot;字段清理过期文件时， 仅忽略指定的路径自身而不包括该路径下的其他内容。 可以在&quot;路径&quot;字段中使用shell风格的通配符。 注意，这个保护措施对 r 与 R 无效</span><br></pre></td></tr></table></figure><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><p>Ubuntu系统中，/tmp文件夹里面的内容，每次开机都会被清空，如果不想让他自动清理的话，只需要更改rcS文件中的TMPTIME的值。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/default/rcS</span><br><span class="line"></span><br><span class="line"><span class="comment">#把 TMPTIME=0</span></span><br><span class="line"><span class="comment">#修改成 TMPTIME=-1或者是无限大</span></span><br></pre></td></tr></table></figure><p>更改后，系统在重新启动的时候就不会清理你的/tmp目录了。 举一反三，如果说要限制多少时间来清理的话，就可以改成相应的值即可。</p><p><strong>注意</strong></p><p>在Ubuntu中，系统自动清理/tmp文件夹的时限默认每次启动</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在Linux系统中/tmp目录中的文件会被定期删除，但是多长时间被删除呢？又是如何删除的呢？按照什么规则呢？今天就来剖析tmp目录的清理机制。&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/"/>
    
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux中swap分区详解</title>
    <link href="https://wandouduoduo.github.io/articles/273ef9c3.html"/>
    <id>https://wandouduoduo.github.io/articles/273ef9c3.html</id>
    <published>2020-07-22T06:08:21.000Z</published>
    <updated>2020-08-04T06:27:19.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>在Linux下，swap的作用类似Windows系统下的“虚拟内存”。当物理内存不足时，拿出部分硬盘空间当SWAP分区（虚拟成内存）使用，从而解决内存容量不足的情况。</p><p>swap意思是交换，顾名思义，当某进程向OS请求内存发现不足时，OS会把内存中暂时不用的数据交换出去，放在swap分区中，这个过程称为SWAP OUT。当某进程又需要这些数据且OS发现还有空闲物理内存时，又会把swap分区中的数据交换回物理内存中，这个过程称为SWAP IN。</p><p>当然，swap大小是有上限的，一旦swap使用完，操作系统会触发OOM-Killer机制，把消耗内存最多的进程kill掉以释放内存。</p><a id="more"></a><h2 id="swap阈值设定"><a href="#swap阈值设定" class="headerlink" title="swap阈值设定"></a>swap阈值设定</h2><p>swap阈值的设定意义是物理内存使用多少时，就使用swap交换分区。</p><h3 id="查看当前系统swap阈值"><a href="#查看当前系统swap阈值" class="headerlink" title="查看当前系统swap阈值"></a>查看当前系统swap阈值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat/proc/sys/vm/swappiness </span></span><br><span class="line">60</span><br></pre></td></tr></table></figure><p>如上面得到的阈值，就表示 内存在使用到100-60=40%的时候，就开始使用swap交换分区</p><p><strong>两个极限值设定</strong></p><p>当swappiness设置为0时，表示最大限度使用物理内存, 所有物理内存都用完后，才使用swap空间。<br>当swappiness设定为100时，表示积极使用swap分区，并且把内存上的数据及时的搬运到swap空间中。 </p><h3 id="临时设定"><a href="#临时设定" class="headerlink" title="临时设定"></a>临时设定</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudosysctlvm.swappiness=10</span><br></pre></td></tr></table></figure><h3 id="永久设定"><a href="#永久设定" class="headerlink" title="永久设定"></a>永久设定</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"vm.swappiness=10"</span> &gt;&gt;/etc/sysctl.conf </span><br><span class="line">sudosysctl -p </span><br><span class="line">cat /proc/sys/vm/swappiness</span><br><span class="line"></span><br><span class="line">10</span><br></pre></td></tr></table></figure><h2 id="创建swap分区"><a href="#创建swap分区" class="headerlink" title="创建swap分区"></a>创建swap分区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个4G的文件作为swap分区</span></span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=swapfile bs=1M count=4096 </span><br><span class="line"><span class="comment"># 每个块大小为1M，数量为4096个，则总大小为4G的文件。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化成swap分区</span></span><br><span class="line">mkswap swapfile </span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用swap分区</span></span><br><span class="line">swapon swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment">#开机自动挂载</span></span><br><span class="line">vim /etc/fstab (在fstab中增加一条记录如下)</span><br><span class="line"></span><br><span class="line">/opt/swapfile swap swap defaults 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭swap分区</span></span><br><span class="line">swapoff  swapfile </span><br><span class="line">free  -m</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;在Linux下，swap的作用类似Windows系统下的“虚拟内存”。当物理内存不足时，拿出部分硬盘空间当SWAP分区（虚拟成内存）使用，从而解决内存容量不足的情况。&lt;/p&gt;
&lt;p&gt;swap意思是交换，顾名思义，当某进程向OS请求内存发现不足时，OS会把内存中暂时不用的数据交换出去，放在swap分区中，这个过程称为SWAP OUT。当某进程又需要这些数据且OS发现还有空闲物理内存时，又会把swap分区中的数据交换回物理内存中，这个过程称为SWAP IN。&lt;/p&gt;
&lt;p&gt;当然，swap大小是有上限的，一旦swap使用完，操作系统会触发OOM-Killer机制，把消耗内存最多的进程kill掉以释放内存。&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/"/>
    
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>inotify+rsync实现百万级数据同步</title>
    <link href="https://wandouduoduo.github.io/articles/22217062.html"/>
    <id>https://wandouduoduo.github.io/articles/22217062.html</id>
    <published>2020-07-16T13:05:11.000Z</published>
    <updated>2020-08-04T06:27:19.595Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我们日常都是用scp或rsync来同步目录和文件。但它们之间的区别是：rsync 是<strong>分块校验+传输，</strong>scp <strong>是整个文件传输。</strong>rsync 比 scp 有优势的地方在于单个大文件的一小部分存在改动时，只需传输<strong>改动部分</strong>，无需重新传输整个文件。如果传输一个新的文件，理论上 rsync 没有优势。另外，rsync 不是加密传输，而 scp 是加密传输。使用时可以按需选择。用inotify+rsync做实时同步，来解决分布式集群文件一致性的问题。并且能够实时监控事件，当有监控事件发生时，执行相应操作。但如文件越来越多(例如：百万级数量html,jpg等小文件)，同步就会越来越慢，根本做不到实时。网上的调优方法都尝试过，问题依旧。经过一翻细致研究和测试，终于找到问题点并解决。本篇文章做下记录。</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>centos7</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载源码包</span></span><br><span class="line">wget http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -xf inotify-tools-3.14.tar.gz</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/inotify</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="痛点分析"><a href="#痛点分析" class="headerlink" title="痛点分析"></a>痛点分析</h2><h3 id="inotifywait单独分析"><a href="#inotifywait单独分析" class="headerlink" title="inotifywait单独分析"></a>inotifywait单独分析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/inotify/bin/inotifywait -mrq --format <span class="string">'%Xe %w%f'</span> -e modify,create,delete,attrib /data/</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行上面命令，是让inotifywait监听/data/目录，当监听到有发生modify,create,delete,attrib等事件发生时，按%Xe %w%f的格式输出。</span></span><br></pre></td></tr></table></figure><p>我们在/data/目录touch新建几个文件进行测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch /data/&#123;1..5&#125;</span><br></pre></td></tr></table></figure><p>观看inotify输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前面表示事件,后面代表文件。格式是按照--format '%Xe %w%f'来输出的</span></span><br><span class="line">ATTRIB /data/1          </span><br><span class="line">ATTRIB /data/2</span><br><span class="line">ATTRIB /data/3</span><br><span class="line">ATTRIB /data/4</span><br><span class="line">ATTRIB /data/5</span><br></pre></td></tr></table></figure><p>根据输出结果，我们可以用rsync获取inotifywait监控到的文件列表来做指定的文件同步，而不是每次都由rsync做全目录扫描来判断文件是否存在差异。</p><h3 id="网上的inotify-rsync分析"><a href="#网上的inotify-rsync分析" class="headerlink" title="网上的inotify+rsync分析"></a>网上的inotify+rsync分析</h3><p>我们来看网上的教程，我加了注释。(网上所有的教程大同小异，尽管写法可能不一样，但致命点都是一样的)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">/usr/bin/inotifywait -mrq --format <span class="string">'%w%f'</span>-e create,close_write,delete /backup |<span class="keyword">while</span> <span class="built_in">read</span> file</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">cd</span> /backup &amp;&amp; rsync -az --delete /backup/ rsync_backup@192.168.24.101::backup/--password-file=/etc/rsync.password</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#监控到事件发生，把更改的文件列表都接收到file，然后循环，但有什么鬼用呢？下面的命令都没有引用这个这个文件列表，而是都是都整个目录做全量同步</span></span><br></pre></td></tr></table></figure><p><strong>分析</strong>：这里的rsync 每次都是整个目录全量同步，而file列表只是控制了循环次数而已，这就是问题所在。简单的说 ：如有10个文件发生了更改，监听到了，file列表得到这个10个文件有改动，但仍然还要去触发10次rsync全量同步(简直就是噩梦)，那还不如直接写个死循环的rsync全量同步呢。</p><p><strong>辩论：</strong>有些同学会说，日志输出那里明明只有差异文件的同步记录。其实这是rsync的功能，它本来就只会输出有差异需要同步的文件信息，不信你直接拿这句rsync来测试看看。</p><p><strong>影响：</strong>如需要同步的源目录文件量很大，并且目录一直有写入的情况下，那简直是噩梦。不仅消耗CPU资源还耗时，根本就做不到实时同步的目的。</p><h2 id="优化测试"><a href="#优化测试" class="headerlink" title="优化测试"></a>优化测试</h2><p>根据上面的分析，我们明白了问题所在，那么怎么去解决呢？</p><h3 id="实时同步方法"><a href="#实时同步方法" class="headerlink" title="实时同步方法"></a><strong>实时同步方法</strong></h3><p>必须要减少rsync对整个目录的全量递归扫描，尽可能的只同步inotify监控已发生更改的文件。</p><p>先上脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">src=/data/                           <span class="comment"># 需同步的源目录</span></span><br><span class="line">des=data                             <span class="comment"># 目标服务器上的目标目录</span></span><br><span class="line">rsync_passwd_file=/etc/rsyncd.passwd            <span class="comment"># rsync验证的密码文件</span></span><br><span class="line">ip=192.168.0.18                     <span class="comment"># 目标服务器</span></span><br><span class="line">user=root                            <span class="comment"># rsync --daemon定义的验证用户名</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;src&#125;</span>                            </span><br><span class="line"><span class="comment"># 此步骤是由于rsync同步的特性决定的。必须要先cd到源目录，inotify再监听 ./ 才能rsync同步后目录结构一致，有兴趣的同学可以进行各种尝试观看其效果</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/inotifywait -mrq --format  <span class="string">'%Xe %w%f'</span> -e modify,create,delete,attrib,close_write,move ./ | <span class="keyword">while</span> <span class="built_in">read</span> file</span><br><span class="line"><span class="comment"># 把监控到有发生更改的"文件路径列表"循环</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        INO_EVENT=$(<span class="built_in">echo</span> <span class="variable">$file</span> | awk <span class="string">'&#123;print $1&#125;'</span>)   <span class="comment"># 得到事件类型</span></span><br><span class="line">        INO_FILE=$(<span class="built_in">echo</span> <span class="variable">$file</span> | awk <span class="string">'&#123;print $2&#125;'</span>)    <span class="comment"># 得到更改的文件</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"-------------------------------<span class="variable">$(date)</span>------------------------------------"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$file</span></span><br><span class="line">        <span class="comment">#对事件增加、修改、写入完成、移入判断</span></span><br><span class="line">        <span class="comment">#增、改放在同一个判断，因为他们都肯定是针对文件的操作，即使是新建目录，要同步的也只是一个空目录，不会影响速度。</span></span><br><span class="line">        <span class="keyword">if</span> [[ <span class="variable">$INO_EVENT</span> =~ <span class="string">'CREATE'</span> ]] || [[ <span class="variable">$INO_EVENT</span> =~ <span class="string">'MODIFY'</span> ]] || [[ <span class="variable">$INO_EVENT</span> =~ <span class="string">'CLOSE_WRITE'</span> ]] || [[ <span class="variable">$INO_EVENT</span> =~ <span class="string">'MOVED_TO'</span> ]]         <span class="comment"># 判断事件类型</span></span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'CREATE or MODIFY or CLOSE_WRITE or MOVED_TO'</span></span><br><span class="line">                rsync -avzcR --password-file=<span class="variable">$&#123;rsync_passwd_file&#125;</span> $(dirname <span class="variable">$&#123;INO_FILE&#125;</span>) <span class="variable">$&#123;user&#125;</span>@<span class="variable">$&#123;ip&#125;</span>::<span class="variable">$&#123;des&#125;</span> </span><br><span class="line"><span class="comment"># INO_FILE变量代表路径哦  -c校验文件内容</span></span><br><span class="line"><span class="comment">#仔细看 上面的rsync同步命令 源是用了$(dirname $&#123;INO_FILE&#125;)变量 即每次只针对同步发生改变的文件的目录(只同步目标文件的方法在生产环境的某些极端</span></span><br><span class="line"><span class="comment">#环境下会漏文件 现在可以在不漏文件下也有不错的速度 做到平衡)</span></span><br><span class="line"><span class="comment">#然后用-R参数把源的目录结构递归到目标后面，保证目录结构一致性</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="comment">#删除、移出事件判断</span></span><br><span class="line">        <span class="keyword">if</span> [[ <span class="variable">$INO_EVENT</span> =~ <span class="string">'DELETE'</span> ]] || [[ <span class="variable">$INO_EVENT</span> =~ <span class="string">'MOVED_FROM'</span> ]]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'DELETE or MOVED_FROM'</span></span><br><span class="line">                rsync -avzR --delete --password-file=<span class="variable">$&#123;rsync_passwd_file&#125;</span> $(dirname <span class="variable">$&#123;INO_FILE&#125;</span>) <span class="variable">$&#123;user&#125;</span>@<span class="variable">$&#123;ip&#125;</span>::<span class="variable">$&#123;des&#125;</span> </span><br><span class="line"><span class="comment">#看rsync命令 如果直接同步已删除的路径$&#123;INO_FILE&#125;会报no such or directory错误 所以这里同步的源是被删文件或目录的上一级路径</span></span><br><span class="line"><span class="comment">#并加上--delete来删除目标上有而源中没有的文件，这里不能做到指定文件删除，如果删除的路径越靠近根，则同步的目录月多，同步删除的操作就越花时间。</span></span><br><span class="line"><span class="comment">#这里有更好方法的同学，欢迎交流。</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="comment">#修改属性事件 指 touch chgrp chmod chown等操作</span></span><br><span class="line">        <span class="keyword">if</span> [[ <span class="variable">$INO_EVENT</span> =~ <span class="string">'ATTRIB'</span> ]]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'ATTRIB'</span></span><br><span class="line">                <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$INO_FILE</span>"</span> ]</span><br><span class="line"><span class="comment"># 如果修改属性的是目录 则不同步，因为同步目录会发生递归扫描，等此目录下的文件发生同步时，rsync会顺带更新此目录。</span></span><br><span class="line">                <span class="keyword">then</span></span><br><span class="line">                        rsync -avzcR --password-file=<span class="variable">$&#123;rsync_passwd_file&#125;</span> $(dirname <span class="variable">$&#123;INO_FILE&#125;</span>) <span class="variable">$&#123;user&#125;</span>@<span class="variable">$&#123;ip&#125;</span>::<span class="variable">$&#123;des&#125;</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="查漏补缺"><a href="#查漏补缺" class="headerlink" title="查漏补缺"></a>查漏补缺</h3><p>我们通过上面脚本就可以进行实时同步，但是我们因为实时同步需求和同步速度等问题，只同步了监控开启后才发生了更改的文件。但没有启动inotify监控前和期间发生更改的文件，就做不到同步。所以这里我们每2个小时做1次全量同步，来防止各种意外遗漏，保证目录的一致性。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 写个定时任务</span></span><br><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line">* */2 * * * rsync -avz --password-file=/etc/rsync-client.pass /data/ root@192.168.0.18::data</span><br></pre></td></tr></table></figure><p>优化后在保证速度和一致性的前提，就可以实现百万级文件实时同步。</p><h2 id="inotify的参数说明"><a href="#inotify的参数说明" class="headerlink" title="inotify的参数说明"></a>inotify的参数说明</h2><p>inotify是一种强大的、细颗粒的、异步的文件系统监控机制。Linux内核从2.6.13起加入Inotify可以监控文件系统中添加、删除、修改移动等各种事件，利用这个内核接口，就可以监控文件系统下文件的各种变化情况。功能非常强大，但是也有局限性。挂载的文件存储目录就监控不到，据说sersync可以监控挂载目录，有兴趣同学可以自行调研学习。</p><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a><strong>参数说明</strong></h3><table><thead><tr><th>参数名称</th><th>参数说明</th></tr></thead><tbody><tr><td>-m,–monitor</td><td>始终保持事件监听状态</td></tr><tr><td>-r,–recursive</td><td>递归查询目录</td></tr><tr><td>-q,–quiet</td><td>只打印监控事件的信息</td></tr><tr><td>–excludei</td><td>排除文件或目录时，不区分大小写</td></tr><tr><td>-t,–timeout</td><td>超时时间</td></tr><tr><td>–timefmt</td><td>指定时间输出格式</td></tr><tr><td>–format</td><td>指定时间输出格式</td></tr><tr><td>-e,–event</td><td>后面指定删、增、改等事件</td></tr></tbody></table><h3 id="事件说明"><a href="#事件说明" class="headerlink" title="事件说明"></a><strong>事件说明</strong></h3><table><thead><tr><th>事件名称</th><th>事件说明</th></tr></thead><tbody><tr><td>access</td><td>读取文件或目录内容</td></tr><tr><td>modify</td><td>修改文件或目录内容</td></tr><tr><td>attrib</td><td>文件或目录的属性改变</td></tr><tr><td>close_write</td><td>修改真实文件内容</td></tr><tr><td>close_nowrite</td><td></td></tr><tr><td>close</td><td></td></tr><tr><td>open</td><td>文件或目录被打开</td></tr><tr><td>moved_to</td><td>文件或目录移动到</td></tr><tr><td>moved_from</td><td>文件或目录从移动</td></tr><tr><td>move</td><td>移动文件或目录移动到监视目录</td></tr><tr><td>create</td><td>在监视目录下创建文件或目录</td></tr><tr><td>delete</td><td>删除监视目录下的文件或目录</td></tr><tr><td>delete_self</td><td></td></tr><tr><td>unmount</td><td>卸载文件系统</td></tr></tbody></table><h3 id="优化配置"><a href="#优化配置" class="headerlink" title="优化配置"></a>优化配置</h3><p>在/proc/sys/fs/inotify目录下有三个文件，对inotify机制有一定的限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@web ~]<span class="comment"># ll /proc/sys/fs/inotify/</span></span><br><span class="line">总用量0</span><br><span class="line">-rw-r--r--1 root root 09月923:36 max_queued_events</span><br><span class="line">-rw-r--r--1 root root 09月923:36 max_user_instances</span><br><span class="line">-rw-r--r--1 root root 09月923:36 max_user_watches</span><br><span class="line"></span><br><span class="line"><span class="comment">#max_user_watches #设置inotifywait或inotifywatch命令可以监视的文件数量(单进程)</span></span><br><span class="line"><span class="comment">#max_user_instances #设置每个用户可以运行的inotifywait或inotifywatch命令的进程数</span></span><br><span class="line"><span class="comment">#max_queued_events #设置inotify实例事件(event)队列可容纳的事件数量</span></span><br><span class="line"></span><br><span class="line">[root@web ~]<span class="comment"># echo 99999999&gt;/proc/sys/fs/inotify/max_user_watches </span></span><br><span class="line">[root@web ~]<span class="comment"># echo 99999999&gt;/proc/sys/fs/inotify/max_queued_events</span></span><br></pre></td></tr></table></figure><h3 id><a href="#" class="headerlink" title></a></h3><h2 id="Rsync命令"><a href="#Rsync命令" class="headerlink" title="Rsync命令"></a>Rsync命令</h2><h3 id="六命令六模式"><a href="#六命令六模式" class="headerlink" title="六命令六模式"></a>六命令六模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 六种命令格式</span></span><br><span class="line">rsync [OPTION]... SRC DEST</span><br><span class="line">rsync [OPTION]... SRC [USER@]HOST:DEST</span><br><span class="line">rsync [OPTION]... [USER@]HOST:SRC DEST</span><br><span class="line">rsync [OPTION]... [USER@]HOST::SRC DEST</span><br><span class="line">rsync [OPTION]... SRC [USER@]HOST::DEST</span><br><span class="line">rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]</span><br></pre></td></tr></table></figure><p>对应六种命令格式，rsync有六种工作模式：</p><ol><li>拷贝本地文件。当SRC和DES路径信息都不包含有单个冒号”:”分隔符时就启动这种工作模式。如：rsync -a /data /backup</li><li>使用一个远程shell程序(如rsh、ssh)来实现将本地机器的内容拷贝到远程机器。当DST路径地址包含单个冒号”:”分隔符时启动该模式。如：rsync -avz *.c foo:src</li><li>使用一个远程shell程序(如rsh、ssh)来实现将远程机器的内容拷贝到本地机器。当SRC地址路径包含单个冒号”:”分隔符时启动该模式。如：rsync -avz foo:src/bar /data</li><li>从远程rsync服务器中拷贝文件到本地机。当SRC路径信息包含”::”分隔符时启动该模式。如：rsync -av <a href="mailto:root@172.16.78.192" rel="noopener" target="_blank">root@172.16.78.192</a>::www /databack</li><li>从本地机器拷贝文件到远程rsync服务器中。当DST路径信息包含”::”分隔符时启动该模式。如：rsync -av /databack <a href="mailto:root@172.16.78.192" rel="noopener" target="_blank">root@172.16.78.192</a>::www</li><li>列远程机的文件列表。这类似于rsync传输，不过只要在命令中省略掉本地机信息即可。如：rsync -v rsync://172.16.78.192/www</li></ol><h3 id="rsync参数："><a href="#rsync参数：" class="headerlink" title="rsync参数："></a>rsync参数：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">-v, --verbose 详细模式输出</span><br><span class="line">-q, --quiet 精简输出模式</span><br><span class="line">-c, --checksum 打开校验开关，强制对文件传输进行校验</span><br><span class="line">-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD</span><br><span class="line">-r, --recursive 对子目录以递归模式处理</span><br><span class="line">-R, --relative 使用相对路径信息</span><br><span class="line">-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。</span><br><span class="line">--backup-dir 将备份文件(如~filename)存放在在目录下。</span><br><span class="line">-suffix=SUFFIX 定义备份文件前缀</span><br><span class="line">-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。(不覆盖更新的文件)</span><br><span class="line">-l, --links 保留软链结</span><br><span class="line">-L, --copy-links 想对待常规文件一样处理软链结</span><br><span class="line">--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结</span><br><span class="line">--safe-links 忽略指向SRC路径目录树以外的链结</span><br><span class="line">-H, --hard-links 保留硬链结</span><br><span class="line">-p, --perms 保持文件权限</span><br><span class="line">-o, --owner 保持文件属主信息</span><br><span class="line">-g, --group 保持文件属组信息</span><br><span class="line">-D, --devices 保持设备文件信息</span><br><span class="line">-t, --<span class="built_in">times</span> 保持文件时间信息</span><br><span class="line">-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间</span><br><span class="line">-n, --dry-run现实哪些文件将被传输</span><br><span class="line">-W, --whole-file 拷贝文件，不进行增量检测</span><br><span class="line">-x, --one-file-system 不要跨越文件系统边界</span><br><span class="line">-B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节</span><br><span class="line">-e, --rsh=COMMAND 指定使用rsh、ssh方式进行数据同步</span><br><span class="line">--rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息</span><br><span class="line">-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件</span><br><span class="line">--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件</span><br><span class="line">--delete 删除那些DST中SRC没有的文件</span><br><span class="line">--delete-excluded 同样删除接收端那些被该选项指定排除的文件</span><br><span class="line">--delete-after 传输结束以后再删除</span><br><span class="line">--ignore-errors 及时出现IO错误也进行删除</span><br><span class="line">--max-delete=NUM 最多删除NUM个文件</span><br><span class="line">--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输</span><br><span class="line">--force 强制删除目录，即使不为空</span><br><span class="line">--numeric-ids 不将数字的用户和组ID匹配为用户名和组名</span><br><span class="line">--timeout=TIME IP超时时间，单位为秒</span><br><span class="line">-I, --ignore-times 不跳过那些有同样的时间和长度的文件</span><br><span class="line">--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间</span><br><span class="line">--modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0</span><br><span class="line">-T --temp-dir=DIR 在DIR中创建临时文件</span><br><span class="line">--compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份</span><br><span class="line">-P 等同于 --partial</span><br><span class="line">--progress 显示备份过程</span><br><span class="line">-z, --compress 对备份的文件在传输时进行压缩处理</span><br><span class="line">--exclude=PATTERN 指定排除不需要传输的文件模式</span><br><span class="line">--include=PATTERN 指定不排除而需要传输的文件模式</span><br><span class="line">--exclude-from=FILE 排除FILE中指定模式的文件</span><br><span class="line">--include-from=FILE 不排除FILE指定模式匹配的文件</span><br><span class="line">--version 打印版本信息</span><br><span class="line">--address 绑定到特定的地址</span><br><span class="line">--config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件</span><br><span class="line">--port=PORT 指定其他的rsync服务端口</span><br><span class="line">--blocking-io 对远程shell使用阻塞IO</span><br><span class="line">-stats 给出某些文件的传输状态</span><br><span class="line">--progress 在传输时现实传输过程</span><br><span class="line">--<span class="built_in">log</span>-format=formAT 指定日志文件格式</span><br><span class="line">--password-file=FILE 从FILE中得到密码</span><br><span class="line">--bwlimit=KBPS 限制I/O带宽，KBytes per second</span><br><span class="line">-h, --<span class="built_in">help</span> 显示帮助信息</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p> inotifywait响应是不会有延迟，rsync也很快，联动工作百万级数据同步，小case啦，前提是认真看完本教程，理解并举一反三运用。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;我们日常都是用scp或rsync来同步目录和文件。但它们之间的区别是：rsync 是&lt;strong&gt;分块校验+传输，&lt;/strong&gt;scp &lt;strong&gt;是整个文件传输。&lt;/strong&gt;rsync 比 scp 有优势的地方在于单个大文件的一小部分存在改动时，只需传输&lt;strong&gt;改动部分&lt;/strong&gt;，无需重新传输整个文件。如果传输一个新的文件，理论上 rsync 没有优势。另外，rsync 不是加密传输，而 scp 是加密传输。使用时可以按需选择。用inotify+rsync做实时同步，来解决分布式集群文件一致性的问题。并且能够实时监控事件，当有监控事件发生时，执行相应操作。但如文件越来越多(例如：百万级数量html,jpg等小文件)，同步就会越来越慢，根本做不到实时。网上的调优方法都尝试过，问题依旧。经过一翻细致研究和测试，终于找到问题点并解决。本篇文章做下记录。&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/"/>
    
    
      <category term="Linux" scheme="https://wandouduoduo.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>探究login和non-login shell的区别</title>
    <link href="https://wandouduoduo.github.io/articles/78e10ad0.html"/>
    <id>https://wandouduoduo.github.io/articles/78e10ad0.html</id>
    <published>2020-07-13T08:41:47.000Z</published>
    <updated>2020-08-04T06:27:19.678Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h3 id="login-shell"><a href="#login-shell" class="headerlink" title="login shell"></a>login shell</h3><p>取得bash时需要完整的登入流程的，就称为login shell。举例来说，你要由tty1~tty6登入，需要输入用户的账号和密码，此时取得的bash就称为『login shell』啰；</p><h3 id="non-login-shell"><a href="#non-login-shell" class="headerlink" title="non-login shell"></a>non-login shell</h3><p>取得bash接口的方法不需要重复登入的举动。</p><p>举例来说：</p><p>(1)你以Xwindow登入Linux后，再以X的图形化接口启动终端机，此时那个终端接口并没有需要再次的输入账号和密码，那个bash的环境就称为non-login shell了。</p><p>(2)你在原本的bash环境下再次下达bash这个命令，同样的也没有输入账号密码，那第二个bash (子程序)也是non-login shell 。</p><a id="more"></a><h2 id="问题假设"><a href="#问题假设" class="headerlink" title="问题假设"></a>问题假设</h2><p>查阅相关文档，得出如下结果。 </p><ul><li>我们登录执行的是login shell，会加载/etc/profile和 ~/.bash_profile </li><li>ssh远程执行是non-login shell，不会加载etc/profile和 <del>/.bash_profile, 而是加载etc/bashrc和</del>/.bashrc</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看~/.bash_profile，发现如下内容：</span></span><br><span class="line"><span class="keyword">if</span> [ -f ~/.bashrc ]; <span class="keyword">then</span></span><br><span class="line">      . ~/.bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#当~/.bashrc存在时，login shell会引入~/.bashrc的环境变量</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#再看~/.bashrc，发现一段类似的内容：</span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/bashrc ]; <span class="keyword">then</span></span><br><span class="line">      . /etc/bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#当/etc/bashrc存在时，login shell会引入/etc/bashrc内的环境变量</span></span><br></pre></td></tr></table></figure><p>也就是说： </p><ul><li>login shell加载环境变量的顺序是：① /etc/profile  ② ~/.bash_profile  ③ ~/.bashrc  ④ /etc/bashrc </li><li>而non-login shell加载环境变量的顺序是： ① ~/.bashrc ② /etc/bashrc</li></ul><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>我们通过在<del>/.bash_profile和</del>/.bashrc中引用不同的变量计算来验证上述问题 </p><p>在<del>/.bash_profile中引入变量AAA=$((AAA+1))<br>**注意：引入的变量一定要置于引入</del>/.bashrc之前，否则会出现运算时AAA还未赋值的情况！！！**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export AAA=$((AAA+1))</span><br></pre></td></tr></table></figure><p>在~/.bashrc中引入变量AAA=$((AAA+10))</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export AAA=$((AAA+10))</span><br></pre></td></tr></table></figure><h3 id="login-shell-1"><a href="#login-shell-1" class="headerlink" title="login shell"></a>login shell</h3><p><strong>按照环境变量的加载顺序:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">~/.bash_profile </span><br><span class="line">AAA=$((AAA+1))，AAA为空，AAA=$((AAA+1))=1</span><br><span class="line"></span><br><span class="line">~/.bashrc </span><br><span class="line">AAA=$((AAA+10)),AAA=1,AAA=$((AAA+10))=11</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">[root@ ~]<span class="comment"># echo $AAA</span></span><br><span class="line">11</span><br></pre></td></tr></table></figure><p><strong>验证通过</strong></p><h3 id="non-login-shell-1"><a href="#non-login-shell-1" class="headerlink" title="non-login shell"></a>non-login shell</h3><p>采用ssh远程执行来验证<br><strong>按照环境变量的加载顺序</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~/.bashrc </span><br><span class="line">AAA=$((AAA+10)),AAA为空,AAA=$((AAA+10))=10</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">[root@ ~]<span class="comment"># ssh  root@1.1.1.2 'echo $AAA'</span></span><br><span class="line">root@1.1.1.2<span class="string">'s password: </span></span><br><span class="line"><span class="string">10</span></span><br></pre></td></tr></table></figure><p><strong>验证通过</strong></p><h3 id="login-shell下启动bash子进程"><a href="#login-shell下启动bash子进程" class="headerlink" title="login shell下启动bash子进程"></a>login shell下启动bash子进程</h3><p>bash子进程是一个non-login shell，但是它会继承父进程中的环境变量<br><strong>按照环境变量的加载顺序</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#父进程，引入~/.bash_profile </span></span><br><span class="line">AAA=$((AAA+1))，AAA为空，AAA=$((AAA+1))=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#父进程，引入~/.bashrc </span></span><br><span class="line">AAA=$((AAA+10)),AAA=1,AAA=$((AAA+10))=11</span><br><span class="line"></span><br><span class="line"><span class="comment">#子进程，继承父进程环境变量，引入~/.bashrc </span></span><br><span class="line">AAA=$((AAA+10)),AAA=11,AAA=$((AAA+10))=21</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line"><span class="comment"># 父进程</span></span><br><span class="line">[root@ ~]<span class="comment"># echo $AAA</span></span><br><span class="line">11</span><br><span class="line"></span><br><span class="line"><span class="comment"># bash子进程，继承AAA=11</span></span><br><span class="line">[root@ ~]<span class="comment"># bash</span></span><br><span class="line">[root@ ~]<span class="comment"># echo $AAA</span></span><br><span class="line">21</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子进程的子进程，继承AAA=21</span></span><br><span class="line">[root@ ~]<span class="comment"># bash</span></span><br><span class="line">[root@ ~]<span class="comment"># echo $AAA</span></span><br></pre></td></tr></table></figure><p><strong>验证通过</strong></p><h2 id="假设成立"><a href="#假设成立" class="headerlink" title="假设成立"></a>假设成立</h2><p>远程执行的non-login shell 并不会加载/etc/profile和<del>/.bash_profile下的环境变量，只是加载</del>/.bashrc和/etc/bashrc</p><p>如果需要特定环境变量的命令，可以在执行前source下<del>/.bash_profile， 或者将环境变量写在</del>/.bashrc 。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;h3 id=&quot;login-shell&quot;&gt;&lt;a href=&quot;#login-shell&quot; class=&quot;headerlink&quot; title=&quot;login shell&quot;&gt;&lt;/a&gt;login shell&lt;/h3&gt;&lt;p&gt;取得bash时需要完整的登入流程的，就称为login shell。举例来说，你要由tty1~tty6登入，需要输入用户的账号和密码，此时取得的bash就称为『login shell』啰；&lt;/p&gt;
&lt;h3 id=&quot;non-login-shell&quot;&gt;&lt;a href=&quot;#non-login-shell&quot; class=&quot;headerlink&quot; title=&quot;non-login shell&quot;&gt;&lt;/a&gt;non-login shell&lt;/h3&gt;&lt;p&gt;取得bash接口的方法不需要重复登入的举动。&lt;/p&gt;
&lt;p&gt;举例来说：&lt;/p&gt;
&lt;p&gt;(1)你以Xwindow登入Linux后，再以X的图形化接口启动终端机，此时那个终端接口并没有需要再次的输入账号和密码，那个bash的环境就称为non-login shell了。&lt;/p&gt;
&lt;p&gt;(2)你在原本的bash环境下再次下达bash这个命令，同样的也没有输入账号密码，那第二个bash (子程序)也是non-login shell 。&lt;/p&gt;
    
    </summary>
    
      <category term="编程积累" scheme="https://wandouduoduo.github.io/categories/%E7%BC%96%E7%A8%8B%E7%A7%AF%E7%B4%AF/"/>
    
      <category term="Shell" scheme="https://wandouduoduo.github.io/categories/%E7%BC%96%E7%A8%8B%E7%A7%AF%E7%B4%AF/Shell/"/>
    
    
      <category term="Shell" scheme="https://wandouduoduo.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>ansible实例</title>
    <link href="https://wandouduoduo.github.io/articles/1d90220.html"/>
    <id>https://wandouduoduo.github.io/articles/1d90220.html</id>
    <published>2020-07-13T08:19:23.000Z</published>
    <updated>2020-07-13T09:16:07.476Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>实例一：执行curl命令发送post请求</p><p>实例二：直接发送post请求</p><a id="more"></a><h2 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h2><p>执行curl命令发送post请求进行报警</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">tengine</span></span><br><span class="line"><span class="attr">  remote_user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Rsync</span> <span class="string">tengine</span> <span class="string">config</span></span><br><span class="line"><span class="attr">      synchronize:</span> <span class="string">src=/root/tengine-inte-conf/inte-conf/&#123;&#123;</span> <span class="string">ansible_host</span> <span class="string">&#125;&#125;/</span> <span class="string">dest=/opt/tengine/conf/conf.d/</span> <span class="string">delete=yes</span> <span class="string">compress=yes</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Test</span> <span class="string">tengine</span> <span class="string">config</span></span><br><span class="line"><span class="attr">      command:</span> <span class="string">/opt/tengine/sbin/nginx</span> <span class="bullet">-t</span></span><br><span class="line"><span class="attr">      register:</span> <span class="string">result</span></span><br><span class="line"><span class="attr">      ignore_errors:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Reload</span> <span class="string">config</span></span><br><span class="line"><span class="attr">      command:</span> <span class="string">/opt/tengine/sbin/nginx</span> <span class="bullet">-s</span> <span class="string">reload</span> </span><br><span class="line"><span class="attr">      when:</span> <span class="string">result</span> <span class="string">is</span> <span class="string">not</span> <span class="string">failed</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Send</span> <span class="string">Alert</span></span><br><span class="line"><span class="attr">      command:</span> <span class="string">curl</span> <span class="bullet">-H</span> <span class="string">"Content-Type:application/json"</span>  <span class="bullet">-X</span> <span class="string">POST</span> <span class="bullet">-d</span> <span class="string">"&#123;'app':'e7775bf8-3855-509d-d924-7c7e3efd7df0','eventId':'88888','eventType':'trigger','alarmName':'TengineConfError','entityName':'<span class="template-variable">&#123;&#123; ansible_host &#125;&#125;</span>-tengineconf','entityId':'88888','alarmContent':'<span class="template-variable">&#123;&#123; ansible_host &#125;&#125;</span>-tengineconf','priority':'2'&#125;"</span> <span class="attr">http://api.onealert.com/alert/api/event/zabbix/v3</span> </span><br><span class="line"><span class="attr">      when:</span> <span class="string">result</span> <span class="string">is</span> <span class="string">failed</span></span><br></pre></td></tr></table></figure><h2 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h2><p>直接发送post请求进行报警</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: tengine</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">    - name: Rsync tengine config</span><br><span class="line">      synchronize: src=/root/tengine-inte-conf/inte-conf/&#123;&#123; ansible_host &#125;&#125;/ dest=/opt/tengine/conf/conf.d/ delete=yes compress=yes</span><br><span class="line">    </span><br><span class="line">    - name: Test tengine config</span><br><span class="line">      command: /opt/tengine/sbin/nginx -t</span><br><span class="line">      register: result</span><br><span class="line">      ignore_errors: true</span><br><span class="line"></span><br><span class="line">    - name: Reload config</span><br><span class="line">      command: /opt/tengine/sbin/nginx -s reload </span><br><span class="line">      when: result is not failed</span><br><span class="line"></span><br><span class="line">    - name: Send Alert</span><br><span class="line">      uri:</span><br><span class="line">         url: http://api.onealert.com/alert/api/event/zabbix/v3 </span><br><span class="line">         method: POST</span><br><span class="line">         body: &quot;&#123;&apos;app&apos;:&apos;e7775bf8-3855-509d-d924-7c7e3efd7df0&apos;,&apos;eventId&apos;:&apos;88888&apos;,&apos;eventType&apos;:&apos;trigger&apos;,&apos;alarmName&apos;:&apos;TengineConfError&apos;,&apos;entityName&apos;:&apos;&#123;&#123; ansible_host &#125;&#125;-tengineconf&apos;,&apos;entityId&apos;:&apos;88888&apos;,&apos;alarmContent&apos;:&apos;&#123;&#123; ansible_host &#125;&#125;-tengineconf&apos;,&apos;priority&apos;:&apos;2&apos;&#125;&quot;</span><br><span class="line">         body_format: json</span><br><span class="line">         force_basic_auth: no</span><br><span class="line">         headers:</span><br><span class="line">             Content-Type: &quot;application/json&quot;</span><br><span class="line">      when: result is failed</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;p&gt;实例一：执行curl命令发送post请求&lt;/p&gt;
&lt;p&gt;实例二：直接发送post请求&lt;/p&gt;
    
    </summary>
    
      <category term="配置管理" scheme="https://wandouduoduo.github.io/categories/%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/"/>
    
      <category term="Ansible" scheme="https://wandouduoduo.github.io/categories/%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/Ansible/"/>
    
    
      <category term="Ansible" scheme="https://wandouduoduo.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>selenium自动化测试实战</title>
    <link href="https://wandouduoduo.github.io/articles/a9b4c1cb.html"/>
    <id>https://wandouduoduo.github.io/articles/a9b4c1cb.html</id>
    <published>2020-07-13T06:46:40.000Z</published>
    <updated>2020-08-04T06:27:19.642Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Selenium 是自动化测试工具。它支持各种浏览器，包括 Chrome，Safari，Firefox 等主流界面式浏览器，如果你在这些浏览器里面安装一个 Selenium 的插件，那么便可以方便地实现Web界面的测试。<br>Selenium 2，又名 WebDriver，它的主要新功能是集成了 Selenium 1.0 以及 WebDriver（WebDriver 曾经是 Selenium 的竞争对手）。也就是说 Selenium 2 是 Selenium 和 WebDriver 两个项目的合并，即 Selenium 2 兼容 Selenium，它既支持 Selenium API 也支持 WebDriver API。</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://selenium-python-zh.readthedocs.io/en/latest/index.html" rel="noopener" target="_blank">中文参考文档</a><br><a href="http://selenium-python.readthedocs.io/index.html" rel="noopener" target="_blank">英文参考文档</a></p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>python安装这里省略，可以参考<a href="www.python.org">python官网</a></p><p>实战测试是在windows10系统中执行。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/1.png" alt></p><p>友情提示：如果无法访问，可以使用这个工具代理上网。<a href="https://github.com/getlantern/lantern" rel="noopener" target="_blank">https://github.com/getlantern/lantern</a></p><h3 id="安装Chrome-WebDriver"><a href="#安装Chrome-WebDriver" class="headerlink" title="安装Chrome WebDriver"></a>安装Chrome WebDriver</h3><p>通过在Chrome地址栏中输入chrome://version/来查看浏览器版本</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/2.png" alt></p><p>根据查询的版本，在<a href="https://chromedriver.storage.googleapis.com/index.html" rel="noopener" target="_blank">官方下载地址</a>下载对应版本和系统的webdriver</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/3.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/4.png" alt></p><p>将解压后chromedriver.exe文件复制到浏览器的安装目录下，默认路径为C:\Program Files (x86)\Google\Chrome\Application；将解压后chromedriver.exe文件复制到python的安装目录下。同时把chrome的安装目录加入到path环境变量中。</p><p>到此，已经安装完成了。</p><h2 id="自动化实战"><a href="#自动化实战" class="headerlink" title="自动化实战"></a>自动化实战</h2><p>12306自动化订票</p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>运用了Selenium定位web元素的方法</li><li>浏览器调试工具使用</li></ul><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>1） 人工走一遍流程，对自动化的流程心中有数<br>2） 按步骤拆分，然后对每一个小步骤编写自动化脚本<br>3） 将所有步骤合起来，多次运行，测试脚本</p><h3 id="打开12306官网"><a href="#打开12306官网" class="headerlink" title="打开12306官网"></a>打开12306官网</h3><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/5.png" alt></p><p>脚本运行</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/6.png" alt></p><h3 id="登录12306"><a href="#登录12306" class="headerlink" title="登录12306"></a>登录12306</h3><p>1）在chrome界面，按F12快捷键，弹出chrome的调试工具<br>2）找出登录按钮的id和username、password的id</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/7.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/8.png" alt></p><p>脚本定位元素</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/9.png" alt></p><p>运行脚本，登录成功</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/10.png" alt></p><p>根据链接的文本来定位车票预订元素</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/11.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/12.png" alt></p><h3 id="选择出发地"><a href="#选择出发地" class="headerlink" title="选择出发地"></a>选择出发地</h3><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/13.png" alt></p><p><strong><em>利用js代码冻结浏览器界面</em></strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(function()&#123;debugger;&#125;, 5000)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/14.png" alt></p><p>右击代码位置，选择copy selector</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/15.png" alt></p><h3 id="选择出发日"><a href="#选择出发日" class="headerlink" title="选择出发日"></a>选择出发日</h3><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/16.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/18.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/17.png" alt></p><h3 id="选择车次类型"><a href="#选择车次类型" class="headerlink" title="选择车次类型"></a>选择车次类型</h3><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/19.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/20.png" alt></p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/21.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/22.png" alt></p><h3 id="循环刷票"><a href="#循环刷票" class="headerlink" title="循环刷票"></a>循环刷票</h3><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/a9b4c1cb/23.png" alt></p><h2 id="实战问题"><a href="#实战问题" class="headerlink" title="实战问题"></a>实战问题</h2><p>1、不能破解12306的变态验证码。没有自动破解验证码，所以留五秒钟自己手动选验证码。<br>2、因为是学生认证所以多一步需要确认(不是学生可去掉)<br>3、订票成功</p><h2 id="优劣势"><a href="#优劣势" class="headerlink" title="优劣势"></a>优劣势</h2><p>优点：能够很快、很广泛地查找缺陷，同时可以做很多重复性的工作，在回归测试阶段，我们可以利用自动化功能测试工具进行，而无须大量的软件测试人员手动的再次执行测试用例，极大的提高了工作效率。<br>缺点：它们只能检查一些比较主要的问题，如崩溃、死机，但是却无法发现一些一般的日常错误，这些错误通过人眼很容易找到，但机器却往往找不到。另外，在自动测试中编写测试脚本工作量也很大，有时候该工作量甚至超过了手动测试的时间。<br>Selenium脚本的执行速度受多方面因素的影响，如网速，操作步骤的繁琐程度，页面加载的速度，以及我们在脚本中设置的等待时间，运行脚本的线程数等。所以不能单方面追求运行速度的，要确保稳定性，能稳定地实现回归测试才是关键。<br>Selenium保证元素成功率是通过元素的定位，当然它的定位方法很多，一定能有合适的。但是在自动化工程的实施过程中，高质量的自动化测试不是只有测试人员保证的。需要开发人员规范开发习惯，如给页面元素加上唯一的name,id等，这样就能大大地提高元素定位的准确性。</p><h2 id="实战代码"><a href="#实战代码" class="headerlink" title="实战代码"></a>实战代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf8-*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行chrome，打开浏览器</span></span><br><span class="line">driver =webdriver.Chrome()</span><br><span class="line"><span class="comment">#设置浏览器窗口</span></span><br><span class="line">driver.set_window_size(<span class="number">1080</span>,<span class="number">800</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置全局操作时间</span></span><br><span class="line">driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#打开网址</span></span><br><span class="line">driver.get(<span class="string">'https://kyfw.12306.cn/otn'</span>)</span><br><span class="line"><span class="comment">#睡五秒自动选择验证码</span></span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element_by_id(<span class="string">"username"</span>).click()</span><br><span class="line">driver.find_element_by_id(<span class="string">"username"</span>).send_keys(<span class="string">"用户名"</span>)      <span class="comment">#填写12306的账号</span></span><br><span class="line">driver.find_element_by_id(<span class="string">"password"</span>).send_keys(<span class="string">"***"</span>)        <span class="comment">#填写12306的密码</span></span><br><span class="line">print(<span class="string">"continue"</span>)</span><br><span class="line">time.sleep(<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element_by_link_text(<span class="string">"车票预订"</span>).click()</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"><span class="comment">#出发地选择</span></span><br><span class="line">driver.find_element_by_id(<span class="string">"fromStationText"</span>).click()</span><br><span class="line"><span class="comment"># setTimeout(function()&#123;debugger;&#125;, 5000)</span></span><br><span class="line">driver.find_element_by_css_selector(<span class="string">u"[title=广州]"</span>).click()</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"><span class="comment">#目的地选择</span></span><br><span class="line">driver.find_element_by_id(<span class="string">"toStationText"</span>).click()</span><br><span class="line">driver.find_element_by_css_selector(<span class="string">u"[title=北京]"</span>).click()</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#出发日期选择</span></span><br><span class="line">driver.find_element_by_id(<span class="string">"train_date"</span>).click()</span><br><span class="line">driver.find_element_by_css_selector(<span class="string">"body &gt; div.cal-wrap &gt; div:nth-child(1) &gt; div.cal-cm &gt; div:nth-child(24) &gt; div"</span>).click()</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#车型选择</span></span><br><span class="line">driver.find_element_by_css_selector(<span class="string">"#_ul_station_train_code &gt; li:nth-child(1) &gt; label"</span>).click()</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.find_element_by_id(<span class="string">"query_ticket"</span>).click()</span><br><span class="line">        e=driver.find_element_by_id(<span class="string">"SWZ_6i00000G720F"</span>)</span><br><span class="line">        e.click()</span><br><span class="line">        <span class="keyword">if</span> e.text <span class="keyword">in</span> [<span class="string">u'无'</span>,<span class="string">'--'</span>]:</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"nono"</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"yes"</span>)</span><br><span class="line">            <span class="comment"># 购票</span></span><br><span class="line">            driver.find_element_by_link_text(<span class="string">"预订"</span>).click()</span><br><span class="line">            <span class="comment"># 乘车人选择</span></span><br><span class="line">            driver.find_element_by_css_selector(<span class="string">"#normal_passenger_id &gt; li:nth-child(1) &gt; label"</span>).click()</span><br><span class="line">            <span class="comment"># 学生票确认（不是学生可去掉）</span></span><br><span class="line">            driver.find_element_by_link_text(<span class="string">"确认"</span>).click()</span><br><span class="line">            <span class="comment"># 提交订单</span></span><br><span class="line">            driver.find_element_by_link_text(<span class="string">"提交订单"</span>).click()</span><br><span class="line">            driver.find_element_by_link_text(<span class="string">"确认"</span>).click()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Selenium 是自动化测试工具。它支持各种浏览器，包括 Chrome，Safari，Firefox 等主流界面式浏览器，如果你在这些浏览器里面安装一个 Selenium 的插件，那么便可以方便地实现Web界面的测试。&lt;br&gt;Selenium 2，又名 WebDriver，它的主要新功能是集成了 Selenium 1.0 以及 WebDriver（WebDriver 曾经是 Selenium 的竞争对手）。也就是说 Selenium 2 是 Selenium 和 WebDriver 两个项目的合并，即 Selenium 2 兼容 Selenium，它既支持 Selenium API 也支持 WebDriver API。&lt;/p&gt;
&lt;h2 id=&quot;参考文档&quot;&gt;&lt;a href=&quot;#参考文档&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://selenium-python-zh.readthedocs.io/en/latest/index.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;中文参考文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://selenium-python.readthedocs.io/index.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;英文参考文档&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="自动化" scheme="https://wandouduoduo.github.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    
      <category term="Selenium" scheme="https://wandouduoduo.github.io/tags/Selenium/"/>
    
  </entry>
  
  <entry>
    <title>ELK之logstash多个配置文件及模板的使用</title>
    <link href="https://wandouduoduo.github.io/articles/15488632.html"/>
    <id>https://wandouduoduo.github.io/articles/15488632.html</id>
    <published>2020-07-08T03:08:41.000Z</published>
    <updated>2020-07-08T03:39:25.331Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在使用 logstash 编写多个配置文件，写入到 elasticsearch 时，会出现数据写入混乱的问题，举例来说：</p><p>多个配置文件中规则如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A -&gt; es-logstash-A</span><br><span class="line">B -&gt; es-logstash-B</span><br><span class="line"> </span><br><span class="line"><span class="comment">#A 写入到 es-logstash-A 索引中</span></span><br><span class="line"><span class="comment">#B 写入到 es-logstash-B 索引中</span></span><br></pre></td></tr></table></figure><p>然而当 logstash 服务运行起来的时候并不是这样的，可能出现如下想象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A-&gt; es-logstash-A</span><br><span class="line">B-&gt; es-logstash-A</span><br></pre></td></tr></table></figure><p><strong>究其原因，是因为 logstash 运行起来的时候，会将所有的配置文件合并执行。因此，每个 input 的数据都必须有一个唯一的标识，在 filter 和 output 时，通过这个唯一标识来实现过滤或者存储到不同的索引。</strong></p><a id="more"></a><h2 id="多配置文件的实现方式"><a href="#多配置文件的实现方式" class="headerlink" title="多配置文件的实现方式"></a>多配置文件的实现方式</h2><p>如上所说，写入需要唯一标识，在logstash 中唯一标识推荐使用 type 或 tags 字段，然后通过 if 条件判断来实现。</p><p>首先来看下面一个示例：</p><p>在 /etc/logstash/conf.d 目录下有这样两个配置文件 [1.conf   a.conf ]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@192.168.118.14 /etc/logstash/conf.d]<span class="comment">#ls</span></span><br><span class="line">1.conf  a.conf</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">1.conf</span><br><span class="line">input &#123;</span><br><span class="line">    file &#123;</span><br><span class="line">        path =&gt; <span class="string">"/data/log/1.log"</span>   </span><br><span class="line">        start_position =&gt; <span class="string">"beginning"</span></span><br><span class="line">        sincedb_path =&gt; <span class="string">"/tmp/1_progress"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; [<span class="string">"192.168.118.14"</span>]   </span><br><span class="line">        index =&gt; <span class="string">"1-log-%&#123;+YYYY.MM.dd&#125;"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">a.conf</span><br><span class="line">input &#123;</span><br><span class="line">    file &#123;</span><br><span class="line">        path =&gt; <span class="string">"/data/log/a.log"</span>   </span><br><span class="line">        start_position =&gt; <span class="string">"beginning"</span></span><br><span class="line">        sincedb_path =&gt; <span class="string">"/tmp/a_progress"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; [<span class="string">"192.168.118.14"</span>]   </span><br><span class="line">        index =&gt; <span class="string">"a-log-%&#123;+YYYY.MM.dd&#125;"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/data/<span class="built_in">log</span>/a.log</span><br><span class="line">[root@192.168.118.14 ~]<span class="comment">#cat /data/log/a.log</span></span><br><span class="line">a</span><br><span class="line"> </span><br><span class="line">/data/<span class="built_in">log</span>/1.log</span><br><span class="line">[root@192.168.118.14 ~]<span class="comment">#cat /data/log/1.log</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>这两个配置很简单，规则：</p><ul><li>1.conf  读取 /data/log/1.log 写入到 1-log-[date] 索引</li><li>a.conf 读取 /data/log/a.log 写入到 a-log-[date] 索引</li></ul><p>两个日志文件，都只有 1 行日志记录。</p><p><strong>正确的结果是 生成两个索引，每个索引里只有一条记录。</strong></p><p>接下来启动服务查看，多配置文件 命令启动方式如下：</p><p><strong>正确的启动方式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logstash -f /etc/logstash/conf.d/</span><br></pre></td></tr></table></figure><p><strong>错误的启动方式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logstash -f /etc/logstash/conf.d/*</span><br></pre></td></tr></table></figure><p>启动成功后，通过 elasticsearch-head 查看 索引及数据</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/15488632/1.png" alt></p><p>发现每个 索引里却有 2 条记录，这不符合正常的逻辑，查看数据发现，每个索引里都是 1.log 和 a.log  的数据总和。</p><p>这也证明了 logstash 在写入数据的时候，是将所有的配置文件合并在一起的，运行起来数据写入就会混乱。要解决这种混乱就需要通过唯一标识和if 判断，logstash配置文件调整如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">1.conf</span><br><span class="line">input &#123;</span><br><span class="line">    file &#123;</span><br><span class="line">        path =&gt; "/data/log/1.log"   </span><br><span class="line">        start_position =&gt; "beginning"</span><br><span class="line">        sincedb_path =&gt; "/tmp/1_progress"</span><br><span class="line">        type =&gt; "1-log"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">output &#123;</span><br><span class="line">    if [type] == "1-log" &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; ["192.168.118.14"]   </span><br><span class="line">            index =&gt; "1-log-%&#123;+YYYY.MM.dd&#125;"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">a.conf</span><br><span class="line">input &#123;</span><br><span class="line">    file &#123;</span><br><span class="line">        path =&gt; "/data/log/a.log"   </span><br><span class="line">        start_position =&gt; "beginning"</span><br><span class="line">        sincedb_path =&gt; "/tmp/a_progress"</span><br><span class="line">        type =&gt; "a-log"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">output &#123;</span><br><span class="line">    if [type] == "a-log" &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; ["192.168.118.14"]   </span><br><span class="line">            index =&gt; "a-log-%&#123;+YYYY.MM.dd&#125;"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面修改的部分， input 里 增加了 type 字段，定义了唯一标识而在 output 中 通过if判断唯一标识来做响应的写入操作。</p><p>启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logstash -f /etc/logstash/conf.d/</span><br></pre></td></tr></table></figure><p>通过 elasticsearch-head 查看：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/15488632/2.png" alt></p><p>这次就完全符合预期的标准了。</p><h2 id="logstash-增加模板"><a href="#logstash-增加模板" class="headerlink" title="logstash 增加模板"></a>logstash 增加模板</h2><p>如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/15488632/3.png" alt></p><p>通过 elasticsearch-head 查看到 elasticsearch 默认是通过分片入库的，而且默认是 5 个主分片，5 个备份分片。 当作为日志存储时，数据可能没那么重要，不需要做 elasticsearch 的集群，但是也不想看到这些告警信息，这时候就需要 模板 了。</p><p>这里直接提供一个模板样本，可以直接使用。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"template"</span> : <span class="string">"*"</span>, <span class="attr">"version"</span> : <span class="number">60001</span>, </span><br><span class="line">    <span class="attr">"settings"</span> : &#123;</span><br><span class="line">        <span class="attr">"index.refresh_interval"</span> : <span class="string">"5s"</span>,</span><br><span class="line">        <span class="attr">"number_of_shards"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"number_of_replicas"</span>: <span class="number">0</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">"mappings"</span> : &#123;</span><br><span class="line">        <span class="attr">"_default_"</span> : &#123;</span><br><span class="line">            <span class="attr">"dynamic_templates"</span> : [&#123;</span><br><span class="line">                <span class="attr">"message_field"</span> : &#123;</span><br><span class="line">                    <span class="attr">"path_match"</span> : <span class="string">"message"</span>, <span class="attr">"match_mapping_type"</span> : <span class="string">"string"</span>, <span class="attr">"mapping"</span> : &#123;</span><br><span class="line">                        <span class="attr">"type"</span> : <span class="string">"text"</span>, <span class="attr">"norms"</span> : <span class="literal">false</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="attr">"string_fields"</span> : &#123;</span><br><span class="line">                    <span class="attr">"match"</span> : <span class="string">"*"</span>, <span class="attr">"match_mapping_type"</span> : <span class="string">"string"</span>, <span class="attr">"mapping"</span> : &#123;</span><br><span class="line">                        <span class="attr">"type"</span> : <span class="string">"text"</span>, <span class="attr">"norms"</span> : <span class="literal">false</span>, <span class="attr">"fields"</span> : &#123;</span><br><span class="line">                            <span class="attr">"keyword"</span> : &#123;</span><br><span class="line">                                <span class="attr">"type"</span> : <span class="string">"keyword"</span>, <span class="attr">"ignore_above"</span> : <span class="number">256</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;], </span><br><span class="line">            <span class="attr">"properties"</span> : &#123;</span><br><span class="line">                <span class="attr">"@timestamp"</span> : &#123;</span><br><span class="line">                    <span class="attr">"type"</span> : <span class="string">"date"</span></span><br><span class="line">                &#125;, <span class="attr">"@version"</span> : &#123;</span><br><span class="line">                    <span class="attr">"type"</span> : <span class="string">"keyword"</span></span><br><span class="line">                &#125;, <span class="attr">"geoip"</span> : &#123;</span><br><span class="line">                    <span class="attr">"dynamic"</span> : <span class="literal">true</span>, <span class="attr">"properties"</span> : &#123;</span><br><span class="line">                        <span class="attr">"ip"</span> : &#123;</span><br><span class="line">                            <span class="attr">"type"</span> : <span class="string">"ip"</span></span><br><span class="line">                        &#125;, <span class="attr">"location"</span> : &#123;</span><br><span class="line">                            <span class="attr">"type"</span> : <span class="string">"geo_point"</span></span><br><span class="line">                        &#125;, <span class="attr">"latitude"</span> : &#123;</span><br><span class="line">                            <span class="attr">"type"</span> : <span class="string">"half_float"</span></span><br><span class="line">                        &#125;, <span class="attr">"longitude"</span> : &#123;</span><br><span class="line">                            <span class="attr">"type"</span> : <span class="string">"half_float"</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>放置在这里目录里：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /etc/logstash/template/template.json</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"number_of_shards"</span>: 3,</span><br><span class="line"><span class="string">"number_of_replicas"</span>: 0</span><br></pre></td></tr></table></figure><p>这一部分就是定义 主分片 和  复制分片的，可以适当的调整。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">"properties" : &#123;</span><br><span class="line">    "@timestamp" : &#123;</span><br><span class="line">        "type" : "date"</span><br><span class="line">    &#125;, "@version" : &#123;</span><br><span class="line">        "type" : "keyword"</span><br><span class="line">    &#125;, "geoip" : &#123;</span><br><span class="line">        "dynamic" : true, "properties" : &#123;</span><br><span class="line">            "ip" : &#123;</span><br><span class="line">                "type" : "ip"</span><br><span class="line">            &#125;, "location" : &#123;</span><br><span class="line">                "type" : "geo_point"</span><br><span class="line">            &#125;, "latitude" : &#123;</span><br><span class="line">                "type" : "half_float"</span><br><span class="line">            &#125;, "longitude" : &#123;</span><br><span class="line">                "type" : "half_float"</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当要使用地图定位客户端位置的时候，这一段就必须加上， location 的type 的必须是 geo_point</p><p>为 logstash 配置文件添加模板配置，如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">a.conf</span><br><span class="line">input &#123;</span><br><span class="line">    file &#123;</span><br><span class="line">        path =&gt; "/data/log/a.log"   </span><br><span class="line">        start_position =&gt; "beginning"</span><br><span class="line">        sincedb_path =&gt; "/tmp/a_progress"</span><br><span class="line">        type =&gt; "a-log"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">output &#123;</span><br><span class="line">    if [type] == "a-log" &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; ["192.168.118.14"]   </span><br><span class="line">            index =&gt; "a-log-%&#123;+YYYY.MM.dd&#125;"</span><br><span class="line">            template =&gt; "/etc/logstash/template/template.json"</span><br><span class="line">            template_overwrite =&gt; "true"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">1.conf</span><br><span class="line">input &#123;</span><br><span class="line">    file &#123;</span><br><span class="line">        path =&gt; "/data/log/1.log"   </span><br><span class="line">        start_position =&gt; "beginning"</span><br><span class="line">        sincedb_path =&gt; "/tmp/1_progress"</span><br><span class="line">        type =&gt; "1-log"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">output &#123;</span><br><span class="line">    if [type] == "1-log" &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; ["192.168.118.14"]   </span><br><span class="line">            index =&gt; "1-log-%&#123;+YYYY.MM.dd&#125;"</span><br><span class="line">            template =&gt; "/etc/logstash/template/template.json"</span><br><span class="line">            template_overwrite =&gt; "true"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logstash -f /etc/logstash/conf.d/</span><br></pre></td></tr></table></figure><p>通过 elasticsearch-head 查看集群状态及索引分片：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/15488632/4.png" alt></p><p>ok，新增的模板已经生效。尝试为不同的索引添加不同的模板结果出现各种问题，因此创建一个通用的模板。</p><h2 id="将logstash作为服务启动"><a href="#将logstash作为服务启动" class="headerlink" title="将logstash作为服务启动"></a>将logstash作为服务启动</h2><p>在上面的启动中，都是直接通过命令 logstash 来启动的，其实可以通过修改 logstash.service 启动脚本来启动服务。</p><p>修改如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/logstash.service</span><br><span class="line">…</span><br><span class="line">ExecStart=/usr/share/logstash/bin/logstash <span class="string">"--path.settings"</span> <span class="string">"/etc/logstash"</span> <span class="string">"-f"</span> <span class="string">"/etc/logstash/conf.d"</span></span><br><span class="line">…</span><br></pre></td></tr></table></figure><p>启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start logstash</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在使用 logstash 编写多个配置文件，写入到 elasticsearch 时，会出现数据写入混乱的问题，举例来说：&lt;/p&gt;
&lt;p&gt;多个配置文件中规则如下：&lt;/p&gt;
&lt;!--�665--&gt;

&lt;p&gt;然而当 logstash 服务运行起来的时候并不是这样的，可能出现如下想象：&lt;/p&gt;
&lt;!--�666--&gt;

&lt;p&gt;&lt;strong&gt;究其原因，是因为 logstash 运行起来的时候，会将所有的配置文件合并执行。因此，每个 input 的数据都必须有一个唯一的标识，在 filter 和 output 时，通过这个唯一标识来实现过滤或者存储到不同的索引。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="日志管理" scheme="https://wandouduoduo.github.io/categories/%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Elk" scheme="https://wandouduoduo.github.io/tags/Elk/"/>
    
  </entry>
  
  <entry>
    <title>k8s之详解Ingress并实战</title>
    <link href="https://wandouduoduo.github.io/articles/f6f38be4.html"/>
    <id>https://wandouduoduo.github.io/articles/f6f38be4.html</id>
    <published>2020-07-07T09:39:06.000Z</published>
    <updated>2020-08-04T06:27:19.605Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>本文对k8s中Ingress反向代理进行详细剖析，详细介绍了原理，并通过实际例子来详细说明。</p><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Kubernetes 暴露服务的有三种方式：分别为 LoadBlancer Service、NodePort Service、Ingress。</p><p>官网对 Ingress 的定义为管理对外服务到集群内服务之间规则的集合。通俗点讲就是它定义规则来允许进入集群的请求被转发到集群中对应服务上，从来实现服务暴露。 Ingress 能把集群内 Service 配置成外网能够访问的 URL，流量负载均衡，终止SSL，提供基于域名访问的虚拟主机等等。</p><p><strong>LoadBlancer</strong></p><p>LoadBlancer Service 是 Kubernetes 结合云平台的组件，如国外 GCE、AWS、国内阿里云等等，使用它向使用的底层云平台申请创建负载均衡器来实现，有局限性，对于使用云平台的集群比较方便，但有局限，费用高。</p><p><strong>NodePort</strong></p><p>NodePort Service 是通过在节点上暴露端口，然后通过将端口映射到具体某个服务上来实现服务暴露，比较直观方便，但是对于集群来说，随着 Service 的不断增加，需要的端口越来越多，很容易出现端口冲突，而且不容易管理。当然对于小规模的集群服务，还是比较不错的。但是还是有安全风险，因为看过前面k8s教程，并动手操作搭建的同学都知道，在搭建前会把各个节点的防火墙等等都关闭。那么如果用这种方式又打开很多端口，那么安全会面临很大挑战。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/8.png" alt></p><p><strong><em>总结：以上两种服务从各方面看似都不太理想，所以通过情况下，我们会通过Ingress对象来实现安全，方便统一管理。</em></strong></p><h2 id="Ingress概述"><a href="#Ingress概述" class="headerlink" title="Ingress概述"></a>Ingress概述</h2><p>在k8s集群中，我们知道service和pod的ip为内网ip，仅能在集群内部才可以访问。如果外部应用想要直接访问集群内的服务，就需要把外部请求通过负载均衡转发到service上，然后再由kube-proxy组件将其转发给相关的pod。</p><p>而Ingress的作用就是为进入集群的请求提供路由规则集合和转发。通俗点就是提供外部访问集群的入口，将外部的请求转发到集群内部service上。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/9.png" alt></p><h2 id="Ingress组成"><a href="#Ingress组成" class="headerlink" title="Ingress组成"></a>Ingress组成</h2><p>Ingress 使用开源的反向代理负载均衡器来实现对外暴露服务目的，比如用Nginx、Apache、Haproxy等。用的最多的是使用nginx来做的。</p><p>Nginx Ingress 一般有三个组件组成：</p><ul><li><strong>ingress</strong>    是kubernetes的一个资源对象，用于编写定义规则。将nginx的配置抽象成一个Ingress对象，当用户每添加一个新的服务，只需要编写一个新的ingress的yaml文件即可。</li><li><strong>反向代理负载均衡器</strong>  通常以Service的Port方式运行，接收并按照ingress定义的规则进行转发，通常为nginx，haproxy，traefik等，本文使用nginx。</li><li><strong>ingress-controller</strong>    监听apiserver，获取服务新增，删除等变化，并结合ingress规则动态更新到反向代理负载均衡器上，并重载配置使其生效。<br>以上三者有机的协调配合起来，就可以完成 Kubernetes 集群服务的暴漏。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/1.png" alt></p><p><strong>组件说明</strong></p><p>externalLB :  外部的4层负载均衡器<br><service> ingress-nginx : nodePort 类型的 service 为 <ingresscontroller> ingress-nginx 的 pod 接入外部流量<br><ingresscontroller> ingress-nginx : ingress-nginx pod, 负责创建负载均衡<br><ingress> : Ingress 根据后端 Service 实时识别分类及 IP 把结果生成配置文件注入到 ingress-nginx pod 中<br><service> site1 : Service 对后端的pod 进行分类(只起分类作用)</service></ingress></ingresscontroller></ingresscontroller></service></p><h2 id="Ingress工作原理"><a href="#Ingress工作原理" class="headerlink" title="Ingress工作原理"></a>Ingress工作原理</h2><ul><li>ingress controller通过和kubernetes api交互，动态的去感知集群中ingress规则变化。</li><li>然后读取它，按照自定义的规则，规则就是写明了那个域名对应哪个service，生成一段nginx配置。</li><li>在写到nginx-ingress-controller的pod里，这个Ingress controller的pod里运行着一个Nginx服务，控制器会把生成的nginx配置写入/etc/nginx.conf文件中。</li><li>然后reload一下使配置生效，以此达到分配和动态更新问题。</li></ul><h2 id="Ingress解决痛点"><a href="#Ingress解决痛点" class="headerlink" title="Ingress解决痛点"></a><strong>Ingress解决痛点</strong></h2><p><strong>动态配置服务</strong><br>如果按照传统方式，当新增加一个服务时，我们可能需要在流量入口加一个反向代理指向我们新的服务，而使用ingress，只需要配置好ingress，当服务启动时，会自动注册到ingress当中，不需要额外的操作。</p><p><strong>减少不必要的Port暴露（安全，端口容易管理）</strong><br>我们知道部署k8s时，是需要关闭防火墙的，主要原因是k8s的很多服务会以nodeport方式映射出去，这样对于宿主机来说是非常的不安全的，而ingress可以避免这个问题，只需要将ingress自身服务映射出去，就可代理后端所有的服务，则后端服务不需要映射出去。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>k8s 版本为1.18.3</p><p><em>版本API 相关弃用</em></p><p><em>所有资源的 API <code>apps/v1beta1</code> 和 <code>apps/v1beta2</code> 都将弃用，请改用 <code>apps/v1</code> 替代。</em><br><em><code>daemonsets</code>, <code>deployments</code>, <code>replicasets</code> 资源的 API <code>extensions/v1beta1</code> 将被弃用，请改用 apps/v1 替代。</em><br><em><code>networkpolicies</code> 资源的 API <code>extensions/v1beta1</code> 将被弃用，请改用 networking.k8s.io/v1 替代。</em><br><em><code>podsecuritypolicies</code> 资源的 API <code>extensions/v1beta1</code> 将被弃用，请使用 <code>policy/v1beta1</code> 替代。</em></p><h2 id="部署Ingress-nginx"><a href="#部署Ingress-nginx" class="headerlink" title="部署Ingress-nginx"></a>部署Ingress-nginx</h2><p>可以将上面的Ingress理解为在集群的前端加了一个Nginx，用来提供Nginx所能提供的一切功能，例如基于url的反向代理，https认证，用户鉴权，域名重定向等等</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/10.png" alt></p><p>需要注意几点：</p><ul><li><p>Nginx是基于url的，如果没有DNS解析url到集群中任意ip可以考虑hosts文件劫持</p></li><li><p>Nginx的本质也是NodePort的方式暴露给集群外的一个特殊Service</p></li><li><p>Nginx的配置文件根据Ingress的规则自动添加和修改</p><p><em>更详细的介绍可以查看[官方网站]</em>(<a href="https://kubernetes.github.io/ingress-nginx/)。" rel="noopener" target="_blank">https://kubernetes.github.io/ingress-nginx/)。</a><br>下面通过nodepore和ingree-nginx对比实战，让你充分理解。</p></li></ul><h3 id="先用NodePort测试"><a href="#先用NodePort测试" class="headerlink" title="先用NodePort测试"></a>先用NodePort测试</h3><h5 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h5><p>需要使用到httpd、tomcat镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull httpd</span><br><span class="line">docker pull tomcat</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/2.png" alt></p><h5 id="创建namespace"><a href="#创建namespace" class="headerlink" title="创建namespace"></a>创建namespace</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##创建yaml文件：</span></span><br><span class="line"><span class="string">vim</span> <span class="string">ns.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-test</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#创建并查看namespace：</span></span><br><span class="line"> <span class="string">kubectl</span> <span class="string">create</span> <span class="bullet">-f</span> <span class="string">ns.yaml</span> </span><br><span class="line"> <span class="string">kubectl</span>  <span class="string">get</span> <span class="string">ns</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/3.png" alt></p><h5 id="创建deployment及service资源"><a href="#创建deployment及service资源" class="headerlink" title="创建deployment及service资源"></a><strong>创建deployment及service资源</strong></h5><p><strong>创建httpd及service资源文件</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mkdir ingress-nginx</span></span><br><span class="line"><span class="comment">#cd ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#vim httpd.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">        image:</span> <span class="number">10.145</span><span class="number">.197</span><span class="number">.182</span><span class="string">/ops/httpd:latest</span>  <span class="comment">#镜像从私有仓库中进行拉取</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">httpd-svc</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    nodePort:</span> <span class="number">32134</span></span><br></pre></td></tr></table></figure><p><strong>创建tomcat及service资源文件</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim tomcat.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">tomcat</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">tomcat</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">tomcat</span></span><br><span class="line"><span class="attr">        image:</span> <span class="number">10.145</span><span class="number">.197</span><span class="number">.182</span><span class="string">/ops/tomcat:latest</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat-svc</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">tomcat</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">    nodePort:</span> <span class="number">32135</span></span><br></pre></td></tr></table></figure><p><strong>创建并查看</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建</span></span><br><span class="line">kubectl create -f  httpd.yaml </span><br><span class="line">kubectl create -f tomcat.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">kubectl get pods -n ingress-test</span><br><span class="line">kubectl get svc -n ingress-test</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/4.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/5.png" alt></p><p>可以看到通过nodeport暴露的方式是没有问题的，但是到该种方式在大规模的集群服务中，有很大的缺陷，所以接下来通过ingress-nginx进行实现。</p><h3 id="创建ingress-nginx"><a href="#创建ingress-nginx" class="headerlink" title="创建ingress-nginx"></a>创建ingress-nginx</h3><p>从GitHub上下载yaml文件：<a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/deploy/index.md" rel="noopener" target="_blank">官方地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/cloud/deploy.yaml</span><br><span class="line">kubectl apply -f deploy.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署环境为私有环境没有lb 所有把Deployment改成DaemonSet 同时网络模式使用hostNetwork</span></span><br><span class="line"><span class="comment"># 同时配文件 跟启动参数修改</span></span><br><span class="line"><span class="comment"># kubelet 参数node-ip 为ipv6 模式记得修改 service ipFamily: IPv6 模式不然新版本webhook 会报错</span></span><br><span class="line"><span class="comment"># 报错内容 Error from server (InternalError): error when creating "STDIN": Internal error occurred: failed calling webhook "validate.nginx.ingress.kubernetes.io": Post https://ingress-nginx-controller-admission.ingress-nginx.svc:443/extensions/v1beta1/ingresses?timeout=30s: no endpoints available for service "ingress-nginx-controller-admission"</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对照如下deploy.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/controller-serviceaccount.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/controller-configmap.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line"><span class="attr">  allow-backend-server-header:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">  client-body-buffer-size:</span> <span class="number">1024</span><span class="string">k</span></span><br><span class="line"><span class="attr">  enable-underscores-in-headers:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">  generate-request-id:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">  ignore-invalid-headers:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">  large-client-header-buffers:</span> <span class="number">4</span> <span class="number">128</span><span class="string">k</span></span><br><span class="line"><span class="attr">  log-format-upstream:</span> <span class="string">$remote_addr</span> <span class="bullet">-</span> <span class="string">[$remote_addr]</span> <span class="bullet">-</span> <span class="string">$remote_user</span> <span class="string">[$time_local]</span></span><br><span class="line">    <span class="string">"$request"</span> <span class="string">$status</span> <span class="string">$body_bytes_sent</span> <span class="string">"$http_referer"</span> <span class="string">"$http_user_agent"</span> <span class="string">$request_length</span></span><br><span class="line">    <span class="string">"$http_x_forwarded_for"</span> <span class="string">$remote_addr</span> <span class="string">$request_time</span> <span class="string">[$proxy_upstream_name]</span> <span class="string">$upstream_addr</span></span><br><span class="line">    <span class="string">$upstream_response_length</span> <span class="string">$upstream_response_time</span> <span class="string">$upstream_status</span> <span class="string">$req_id</span> <span class="string">$host</span></span><br><span class="line"><span class="attr">  max-worker-connections:</span> <span class="string">"65536"</span></span><br><span class="line"><span class="attr">  proxy-body-size:</span> <span class="number">8192</span><span class="string">m</span></span><br><span class="line"><span class="attr">  proxy-buffer-size:</span> <span class="number">64</span><span class="string">k</span></span><br><span class="line"><span class="attr">  proxy-connect-timeout:</span> <span class="string">"300"</span></span><br><span class="line"><span class="attr">  proxy-next-upstream-timeout:</span> <span class="string">"10"</span></span><br><span class="line"><span class="attr">  proxy-read-timeout:</span> <span class="string">"300"</span></span><br><span class="line"><span class="attr">  proxy-send-timeout:</span> <span class="string">"300"</span></span><br><span class="line"><span class="attr">  reuse-port:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">  server-tokens:</span> <span class="string">"false"</span></span><br><span class="line"><span class="attr">  ssl-redirect:</span> <span class="string">"false"</span></span><br><span class="line"><span class="attr">  upstream-keepalive-connections:</span> <span class="string">"10000"</span></span><br><span class="line"><span class="attr">  upstream-keepalive-requests:</span> <span class="string">"1000"</span></span><br><span class="line"><span class="attr">  upstream-keepalive-timeout:</span> <span class="string">"300"</span></span><br><span class="line"><span class="attr">  worker-cpu-affinity:</span> <span class="string">auto</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tcp-services</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">udp-services</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/clusterrole.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">configmaps</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">endpoints</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">nodes</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">pods</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">secrets</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">nodes</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">services</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">update</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">extensions</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">networking.k8s.io</span>   <span class="comment"># k8s 1.14+</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ingresses</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">events</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">create</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">patch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">extensions</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">networking.k8s.io</span>   <span class="comment"># k8s 1.14+</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ingresses/status</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">update</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">networking.k8s.io</span>   <span class="comment"># k8s 1.14+</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ingressclasses</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/clusterrolebinding.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">  - kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/controller-role.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">namespaces</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">configmaps</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">pods</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">secrets</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">endpoints</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">services</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">update</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">extensions</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">networking.k8s.io</span>   <span class="comment"># k8s 1.14+</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ingresses</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">extensions</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">networking.k8s.io</span>   <span class="comment"># k8s 1.14+</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ingresses/status</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">update</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">networking.k8s.io</span>   <span class="comment"># k8s 1.14+</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ingressclasses</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">configmaps</span></span><br><span class="line"><span class="attr">    resourceNames:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ingress-controller-leader-nginx</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">update</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">configmaps</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">create</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">endpoints</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">create</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">update</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">events</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">create</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">patch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/controller-rolebinding.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">  - kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/controller-service-webhook.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-controller-admission</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"><span class="attr">  ipFamily:</span> <span class="string">IPv6</span> <span class="comment"># ipv4 ¿ÉÒÔ²»Ìí¼Ó</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">https-webhook</span></span><br><span class="line"><span class="attr">      port:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">      targetPort:</span> <span class="string">webhook</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/controller-service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"><span class="attr">  ipFamily:</span> <span class="string">IPv6</span>   <span class="comment"># ipv4 ¿ÉÒÔ²»Ìí¼Ó</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">      port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">      protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">      targetPort:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">https</span></span><br><span class="line"><span class="attr">      port:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">      protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">      targetPort:</span> <span class="string">https</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/controller-deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line">      <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">  revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  minReadySeconds:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line">        <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">      annotations:</span></span><br><span class="line">        <span class="string">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">        <span class="string">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      dnsPolicy:</span> <span class="string">ClusterFirstWithHostNet</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">controller</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.33.0</span></span><br><span class="line"><span class="attr">          imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">          lifecycle:</span></span><br><span class="line"><span class="attr">            preStop:</span></span><br><span class="line"><span class="attr">              exec:</span></span><br><span class="line"><span class="attr">                command:</span></span><br><span class="line"><span class="bullet">                  -</span> <span class="string">/wait-shutdown</span></span><br><span class="line"><span class="attr">          args:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--election-id=ingress-controller-leader</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--ingress-class=nginx</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--configmap=$(POD_NAMESPACE)/ingress-nginx-controller</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--v=2</span>            </span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--validating-webhook=:8443</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--validating-webhook-certificate=/usr/local/certificates/cert</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--validating-webhook-key=/usr/local/certificates/key</span></span><br><span class="line"><span class="attr">          securityContext:</span></span><br><span class="line"><span class="attr">            capabilities:</span></span><br><span class="line"><span class="attr">              drop:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">ALL</span></span><br><span class="line"><span class="attr">              add:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line"><span class="attr">            runAsUser:</span> <span class="number">101</span></span><br><span class="line"><span class="attr">            allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">          env:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">POD_NAME</span></span><br><span class="line"><span class="attr">              valueFrom:</span></span><br><span class="line"><span class="attr">                fieldRef:</span></span><br><span class="line"><span class="attr">                  fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line"><span class="attr">              valueFrom:</span></span><br><span class="line"><span class="attr">                fieldRef:</span></span><br><span class="line"><span class="attr">                  fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line"><span class="attr">          livenessProbe:</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/healthz</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">10254</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">          readinessProbe:</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/healthz</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">10254</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">              containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">              hostPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">              protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">https</span></span><br><span class="line"><span class="attr">              containerPort:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">              hostPort:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">              protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">webhook</span></span><br><span class="line"><span class="attr">              containerPort:</span> <span class="number">8443</span></span><br><span class="line"><span class="attr">              hostPort:</span> <span class="number">8443</span></span><br><span class="line"><span class="attr">              protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          volumeMounts:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">webhook-cert</span></span><br><span class="line"><span class="attr">              mountPath:</span> <span class="string">/usr/local/certificates/</span></span><br><span class="line"><span class="attr">              readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">localtime</span></span><br><span class="line"><span class="attr">              mountPath:</span> <span class="string">/etc/localtime</span></span><br><span class="line"><span class="attr">              readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">          resources:</span></span><br><span class="line"><span class="attr">            requests:</span></span><br><span class="line"><span class="attr">              cpu:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">              memory:</span> <span class="number">90</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">      terminationGracePeriodSeconds:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">webhook-cert</span></span><br><span class="line"><span class="attr">          secret:</span></span><br><span class="line"><span class="attr">            secretName:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">localtime</span></span><br><span class="line"><span class="attr">          hostPath:</span></span><br><span class="line"><span class="attr">            path:</span> <span class="string">/etc/localtime</span></span><br><span class="line"><span class="attr">            type:</span> <span class="string">File</span></span><br><span class="line"><span class="attr">  updateStrategy:</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">RollingUpdate</span></span><br><span class="line"><span class="attr">    rollingUpdate:</span></span><br><span class="line"><span class="attr">      maxUnavailable:</span> <span class="number">1</span>        </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/admission-webhooks/validating-webhook.yaml</span></span><br><span class="line"><span class="comment"># before changing this value, check the required kubernetes version</span></span><br><span class="line"><span class="comment"># https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#prerequisites</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">admissionregistration.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ValidatingWebhookConfiguration</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">webhooks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">validate.nginx.ingress.kubernetes.io</span></span><br><span class="line"><span class="attr">    rules:</span></span><br><span class="line"><span class="attr">      - apiGroups:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">extensions</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">networking.k8s.io</span></span><br><span class="line"><span class="attr">        apiVersions:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">v1beta1</span></span><br><span class="line"><span class="attr">        operations:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">CREATE</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">UPDATE</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">ingresses</span></span><br><span class="line"><span class="attr">    failurePolicy:</span> <span class="string">Fail</span></span><br><span class="line"><span class="attr">    clientConfig:</span></span><br><span class="line"><span class="attr">      service:</span></span><br><span class="line"><span class="attr">        namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">ingress-nginx-controller-admission</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">/extensions/v1beta1/ingresses</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">helm.sh/hook:</span> <span class="string">pre-install,pre-upgrade,post-install,post-upgrade</span></span><br><span class="line">    <span class="string">helm.sh/hook-delete-policy:</span> <span class="string">before-hook-creation,hook-succeeded</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">admissionregistration.k8s.io</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">validatingwebhookconfigurations</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">update</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">helm.sh/hook:</span> <span class="string">pre-install,pre-upgrade,post-install,post-upgrade</span></span><br><span class="line">    <span class="string">helm.sh/hook-delete-policy:</span> <span class="string">before-hook-creation,hook-succeeded</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">  - kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Job</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-admission-create</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">helm.sh/hook:</span> <span class="string">pre-install,pre-upgrade</span></span><br><span class="line">    <span class="string">helm.sh/hook-delete-policy:</span> <span class="string">before-hook-creation,hook-succeeded</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">ingress-nginx-admission-create</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line">        <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">        <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">        <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">        <span class="string">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">create</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">docker.io/jettech/kube-webhook-certgen:v1.2.2</span></span><br><span class="line"><span class="attr">          imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">          args:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">create</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.ingress-nginx.svc</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--namespace=ingress-nginx</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--secret-name=ingress-nginx-admission</span></span><br><span class="line"><span class="attr">      restartPolicy:</span> <span class="string">OnFailure</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">      securityContext:</span></span><br><span class="line"><span class="attr">        runAsNonRoot:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        runAsUser:</span> <span class="number">2000</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Job</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-admission-patch</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">helm.sh/hook:</span> <span class="string">post-install,post-upgrade</span></span><br><span class="line">    <span class="string">helm.sh/hook-delete-policy:</span> <span class="string">before-hook-creation,hook-succeeded</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">ingress-nginx-admission-patch</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line">        <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">        <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">        <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">        <span class="string">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">patch</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">docker.io/jettech/kube-webhook-certgen:v1.2.2</span></span><br><span class="line"><span class="attr">          imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">          args:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">patch</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--webhook-name=ingress-nginx-admission</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--namespace=ingress-nginx</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--patch-mutating=false</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--secret-name=ingress-nginx-admission</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--patch-failure-policy=Fail</span></span><br><span class="line"><span class="attr">      restartPolicy:</span> <span class="string">OnFailure</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">      securityContext:</span></span><br><span class="line"><span class="attr">        runAsNonRoot:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        runAsUser:</span> <span class="number">2000</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/role.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">helm.sh/hook:</span> <span class="string">pre-install,pre-upgrade,post-install,post-upgrade</span></span><br><span class="line">    <span class="string">helm.sh/hook-delete-policy:</span> <span class="string">before-hook-creation,hook-succeeded</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">secrets</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">create</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">helm.sh/hook:</span> <span class="string">pre-install,pre-upgrade,post-install,post-upgrade</span></span><br><span class="line">    <span class="string">helm.sh/hook-delete-policy:</span> <span class="string">before-hook-creation,hook-succeeded</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">  - kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">helm.sh/hook:</span> <span class="string">pre-install,pre-upgrade,post-install,post-upgrade</span></span><br><span class="line">    <span class="string">helm.sh/hook-delete-policy:</span> <span class="string">before-hook-creation,hook-succeeded</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">helm.sh/chart:</span> <span class="string">ingress-nginx-2.10.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/version:</span> <span class="number">0.33</span><span class="number">.0</span></span><br><span class="line">    <span class="string">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="string">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/6.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#查看ingress-nginx pod是否运行</span><br><span class="line">kubectl get svc -n ingress-nginx</span><br><span class="line">kubectl get pods -n ingress-nginx</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/7.png" alt></p><h3 id="创建ingress规则"><a href="#创建ingress规则" class="headerlink" title="创建ingress规则"></a><strong>创建ingress规则</strong></h3><p>yaml文件内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建该规则就是用于分别代理后端的apache和tomcat服务。</span></span><br><span class="line"><span class="string">vim</span> <span class="string">ingress-rule.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">test-ingress</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-test</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">ingress.test.com</span>   <span class="comment">#后端应用通过该域名进行访问</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span>   <span class="comment">#apache的网页根目录：/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">httpd-svc</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/tomcat</span>   <span class="comment">#tomcat的网页更目录：/tomcat</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">tomcat-svc</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 规则生效</span></span><br><span class="line">kubectl create -f ingress-rule.yaml</span><br><span class="line"><span class="comment"># 查看绑定信息</span></span><br><span class="line">kubectl get ingresses. -n ingress-test</span><br><span class="line"><span class="comment"># 查看describe查看详细信息</span></span><br><span class="line">kubectl describe ingresses. -n ingress-test</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/11.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 查看状态</span><br><span class="line">kubectl get pods -n ingress-nginx</span><br><span class="line"># 进入ingress容器查看nginx的配置文件</span><br><span class="line">kubectl exec -it -n ingress-nginx ingress-nginx-controller-cf5dx /bin/bash</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/12.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/13.png" alt></p><p>通过查看nginx配置文件，我们可以清楚的知道之前所说的ingress-controller会根据我们编写的ingress规则（代理后端应用），动态的去更改nginx的配置文件。</p><h3 id="通过域名访问集群内的服务"><a href="#通过域名访问集群内的服务" class="headerlink" title="通过域名访问集群内的服务"></a><strong>通过域名访问集群内的服务</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#当前我们需要知道ingress运行在那个node上</span><br><span class="line">kubectl get pod -o wide -n ingress-nginx</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/14.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在windows主机上将node02的ip地址添加到hosts文件中，做域名解析：</span></span><br><span class="line"><span class="comment">#修改路径：C:\Windows\System32\drivers\etc\hosts（需要给予修改权限）</span></span><br><span class="line">10.145.197.120  ingress.test.com  <span class="comment">#ip无论是node1,2都可以添加该条内容</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/15.png" alt></p><p>ingress-nginx 双栈部署成功。</p><h2 id="基于虚拟主机的ingress"><a href="#基于虚拟主机的ingress" class="headerlink" title="基于虚拟主机的ingress"></a>基于虚拟主机的ingress</h2><p><strong>搭建虚拟主机的目的：实现以不同的域名访问同一个web界面</strong><br>本文就仅基于上面的httpd服务，我们为该服务绑定两个不同的域名来访问：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#vim ingress-rule.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">test-ingress</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-test</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">ingress.test.com</span>   <span class="comment">#后端应用通过该域名进行访问</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span>   <span class="comment">#apache的网页根目录：/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">httpd-svc</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/tomcat</span>   <span class="comment">#tomcat的网页更目录：/tomcat</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">tomcat-svc</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">ingress.test2.com</span>   <span class="comment">#只需要在rules字段下添加另一个host字段即可。</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span>   </span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">httpd-svc</span>          <span class="comment">#注意，serviceName所有虚拟主机必须保持一致</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#创建新的虚拟主机并查看</span><br><span class="line">kubectl apply -f ingress-rule.yaml</span><br><span class="line">kubectl get ingresses. -n ingress-test</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/16.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#通过不同的域名进行访问httpd网页：</span><br><span class="line">#因为我们没有搭建dns服务器，所以需要在windows hosts文件将新的域名进行绑定</span><br><span class="line">10.145.197.176 ingress.test.com</span><br><span class="line">10.145.197.120 ingress.test2.com</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/17.png" alt></p><h2 id="基于HTTPS的Ingress"><a href="#基于HTTPS的Ingress" class="headerlink" title="基于HTTPS的Ingress"></a>基于HTTPS的Ingress</h2><p>通过部署ingress后，我们不必按照常规的，为后端所有的pod都颁发一个证书，只需为ingress代理的域名颁发证书就能够实现。</p><h3 id="创建CA证书"><a href="#创建CA证书" class="headerlink" title="创建CA证书"></a><strong>创建CA证书</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir https</span><br><span class="line"><span class="built_in">cd</span> https</span><br><span class="line">openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj <span class="string">"/CN=nginxsvc/O=nginxsvc"</span>  <span class="comment">#参数可根据需求自定义</span></span><br><span class="line"><span class="comment">#查看</span></span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/18.png" alt></p><h3 id="创建deployment，service，ingress资源-（以nginx服务来实践）"><a href="#创建deployment，service，ingress资源-（以nginx服务来实践）" class="headerlink" title="创建deployment，service，ingress资源:（以nginx服务来实践）"></a><strong>创建deployment，service，ingress资源:（以nginx服务来实践）</strong></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">nginx-ingress2.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span>    <span class="comment">#创建deployment</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">test-web</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">test-web</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">nginx:latest</span>  <span class="comment">#私有仓库中的镜像（已提供）</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span>    <span class="comment">#创建service，关联上述deployment</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-svc</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">test-web</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span>  <span class="comment">#创建ingress规则</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">test-ingress2</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  tls:</span>          <span class="comment">#为域名颁发证书</span></span><br><span class="line"><span class="attr">    - hosts:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ingress.nginx.com</span></span><br><span class="line"><span class="attr">      secretName:</span> <span class="string">tls-secret</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">    - host:</span> <span class="string">ingress.nginx.com</span></span><br><span class="line"><span class="attr">      http:</span>   <span class="comment">#注意，此处字段为http，不支持https</span></span><br><span class="line"><span class="attr">        paths:</span></span><br><span class="line"><span class="attr">        - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">          backend:</span></span><br><span class="line"><span class="attr">            serviceName:</span> <span class="string">web-svc</span></span><br><span class="line"><span class="attr">            servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建基于https的ingress服务</span></span><br><span class="line">kubectl create -f  nginx-ingress2.yaml </span><br><span class="line"><span class="comment"># 查看ingress资源和映射的service端口</span></span><br><span class="line">kubectl get pod -n ingress-test | grep web</span><br><span class="line">kubectl get ingresses. -n ingress-test</span><br><span class="line"><span class="comment">#可以看到新创建的ingress提供了80和443端口</span></span><br><span class="line"></span><br><span class="line">kubectl get svc -n ingress-nginx</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/19.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/20.png" alt></p><h3 id="通过ingress代理的443端口访问nginx服务"><a href="#通过ingress代理的443端口访问nginx服务" class="headerlink" title="通过ingress代理的443端口访问nginx服务"></a><strong>通过ingress代理的443端口访问nginx服务</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#在hosts文件中绑定域名：</span><br><span class="line">10.145.197.120 ingress.nginx.com</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/f6f38be4/21.png" alt></p><p>基于HTTPS的ingress服务成功实现，至此，ingress-nginx部署完成。。。。。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;本文对k8s中Ingress反向代理进行详细剖析，详细介绍了原理，并通过实际例子来详细说明。&lt;/p&gt;
    
    </summary>
    
      <category term="容器编排" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/"/>
    
      <category term="K8s" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/K8s/"/>
    
    
      <category term="K8s" scheme="https://wandouduoduo.github.io/tags/K8s/"/>
    
  </entry>
  
  <entry>
    <title>容器版Jenkins连接K8s</title>
    <link href="https://wandouduoduo.github.io/articles/3cfe518.html"/>
    <id>https://wandouduoduo.github.io/articles/3cfe518.html</id>
    <published>2020-07-02T09:08:51.000Z</published>
    <updated>2020-08-04T06:27:19.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>本文详解介绍了容器版jenkins连接k8s的配置和使用详情。特别注意：必须用谷歌浏览器，而且非容器版jenkins是无法安装kubernetes插件的，所以无法连接k8s。<a href="https://wandouduoduo.github.io/articles/87f87b20.html">搭建k8s集群教程</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>操作系统版本:     Ubuntu 18.04 TLS</p><p>软件版本:                       Jenkins 2.121.2</p><a id="more"></a><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="安装k8s插件"><a href="#安装k8s插件" class="headerlink" title="安装k8s插件"></a>安装k8s插件</h3><p>系统管理-&gt;管理插件-&gt;可选插件,   搜索kubernetes plugin（没有选择kubernetes）并选择安装。</p><h3 id="配置插件连接k8s集群"><a href="#配置插件连接k8s集群" class="headerlink" title="配置插件连接k8s集群"></a>配置插件连接k8s集群</h3><p>点击系统管理-&gt;系统设置-&gt;添加一个云,  在下拉菜单中选择kubernets并添加，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/1.png" alt></p><h3 id="云kubernetes配置"><a href="#云kubernetes配置" class="headerlink" title="云kubernetes配置"></a>云kubernetes配置</h3><p>注：Name值任意添加，Kubernetes URL值添加K8S  apiserver连接地址和端口，jenkins URL值添加jenkins UI访问地址和端口,如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/2.png" alt></p><h3 id="添加云pod-template并配置"><a href="#添加云pod-template并配置" class="headerlink" title="添加云pod template并配置"></a>添加云pod template并配置</h3><p><a href="https://wandouduoduo.github.io/articles/7aff7329.html">参考教程</a></p><h3 id="配置云连接K8S集群的验证文件"><a href="#配置云连接K8S集群的验证文件" class="headerlink" title="配置云连接K8S集群的验证文件"></a>配置云连接K8S集群的验证文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在jenkins所在的node节点上操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建目录</span></span><br><span class="line">mkdir -p /opt/crt/</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取K8S的/root/.kube/config文件</span></span><br><span class="line"><span class="comment">#获取/root/.kube/config中certificate-authority-data的内容并转化成base64 encoded文件</span></span><br><span class="line"></span><br><span class="line">[root@test2 ~]<span class="comment"># echo LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lVYTdJRGZlOENZdmc0ZGpBR0cxQS81WHBLZVRNd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TURjeE9UQTBNVEl3TUZvWERUSXpNRGN4T0RBME1USXdNRm93WlRFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdTRxK1l2TDZMMjRZcEx3Y0cvMmoKdllFTTY5QmIxMmFzZFBtNXBLekMzc3o5Q2JnZ3llb2ZzZFNxSmFIVkNHRkFmNjBEN3J5elhPMVgxY1RGaGdYdQp5SGtrcnBLdGVyNm1aNXpRVGxrQXlyM1AyOXd0NXhJRHJINkhKOE9FcGZNYWlCRlkrcHhTKzJicEZNVUJ3UTcwCksxVE5tWXFsN0lIOEt5V290UXhKQURtQS9VWUpDWHgwNnB5bVlvRzRmcTVjeUVJK3hBSkRsZ3l5blZpc2Y1cEkKUGo2dEl3SHc1UzVGbGVNUE04WVFMSE5JNUlwUEYvR0txNmdaYldLTHFOamNvL2dVTExXSThsWm5mSlVSbE16VwpLa05XYkxETktwSzZOOG5jc09Yc2lFTjNvMW0zeGg2RjlJUWsyWU95d3hTM1dvWTlUQWp3d0VxdTV0bUtVZ1lhCjN3SURBUUFCbzJZd1pEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFqQWQKQmdOVkhRNEVGZ1FVQ1QyM3ora3J5clcvNHJGblR4cFlBalJqa253d0h3WURWUjBqQkJnd0ZvQVVDVDIzeitrcgp5clcvNHJGblR4cFlBalJqa253d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHNmRWZitPTnlUcVJzRlBVaWRxClVvODJSUSs3RytVOWdxN3VpRjFyamx6cms4d0JxQ0J3SEVwOGFKbzhKa1hBN3JNZUptVk9hcmJPK1lsempmbTcKUlM5QnJNV3I0ZEt5TUw0UTIvWHgreCs5Um1GemxabmZoTFR4SE9XTTJiam9HTjliNk90RnF1VmFqaWtjU0Zkdwp3cTF2cS9Ud05ock41aXlIRko1V3h6YXRpa3BlVmZQdnhsS0xKbmpQOGhxeVh2RWxYcEIydnV1ZStJeEdmUWJiCjROQUFJcVIwOUsvS1FVQ3dQK0lQNjlxK0FMazJIWWRrNVB0SmpOMnpOSEw5SUppWHVQUGViZGtSYVNnMGIvZzMKc3BNeFZTY05jNDR3MGFyQ0ZFU2Foa0tMbHJFRGNjbjcxSVpPb2dEMStaMHgycFB4RDc5OWNlQjlxMUtsNnhOWQp6T2s9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K | base64 -d &gt; /opt/crt/ca.crt</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取/root/.kube/config中client-certificate-data和client-key-data的内容并转化成base64 encoded文件</span></span><br><span class="line"></span><br><span class="line">[root@test2 ~]<span class="comment"># echo LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQzVENDQXNXZ0F3SUJBZ0lVSkw2RzR5YjlsaGwvWlIyT01laENmbVBOK2s4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TURjeE9UQTJORFF3TUZvWERUSTRNRGN4TmpBMk5EUXdNRm93YXpFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RnpBVgpCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6TVE4d0RRWURWUVFMRXdaVGVYTjBaVzB4RGpBTUJnTlZCQU1UCkJXRmtiV2x1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2Ui9GZ2krKzJMdmUKU0ttNU11TG9DeVZ6aUVsOEVCVFhIS0tacWczMG5iOWgvUHAxZEV2a3JFbHFtOFJHN3JOOGFFRkkyZi9mcHF4SwpMdFlTWmVYTjEybWFRQTBiV1JlSG1nYWxnTzBZbVpYV1psc0FOR0xLcEtJOEF4czVXeDB3WlNIdWlxeFlCOXlnCkdPR0dhMW41SmZPUDBRWFZNeTVDZlcweWtLRnZmbDJ6TENwSnRNTzJtdWZxR20zM2wrd0l0SlNKaEJUdUc0RDUKa0pnOFFSNUZzUDk1eXF2RWNnT1NrNUZpNFVKZkcwakY1Rnd3UGt1ekhnTmNFQ29YMVNrTlkrZFJ3aSt5OUNZYQpSdWcvbXBrd1F5RWFBVW5BbzNhaTlWTFd5dnRkc3h1YlFMMUJMUGczZE4xTFRPeUxFaGMzZVJNdWFUR0dhNDc4CmwxUWJYeTV2K3dJREFRQUJvMzh3ZlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZCRFdIRTIxUzhLSApHeFBCT3lNem1LQjZqc1V3TUI4R0ExVWRJd1FZTUJhQUZBazl0OC9wSzhxMXYrS3haMDhhV0FJMFk1SjhNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBRkpaSFpYbmR3ZGJQQVcxSUtMTFUzNlRTUm9pUXVIVk5nWWwzZFRJcVYKMzllTFcxSFJ5djIzdTlOSkhXRkhyZHBWbjNWM0ZTR1lsUW5jRSsxU1o5MUFWZXhGcDMxeWNnbVo0WEdjZ0pVZwphcExoZFJOdHNSVmpHKzF0OFplL2VCdHVXYXFlNXluZUFtT3ZzdmpPcDU5cVpDakxSbDk0YWZ4WVYrVlNiVFByCnAvZHRCcHh3MUlOK3puajh1SXRnRDhQTEpzUXViYWsyeTU2QThWUTJCTmVkSG5ZK3lVaC9NVHgzQ1BkSlB3OTUKbnk3T0ovaWNCV1drbS95Qy9weURqSFhEczdtNVkvWG80VnJ2YUQwd05ucllOWWluTTh0VHRReU1zUEpBaVlLYQpmZDAycEs1eGFzVjUweWdpL3AxaUl4MzEybHMxaWc1eG8zRjAyb2xocWtNKwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== | base64 -d &gt; /opt/crt/client.crt</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@test2 ~]<span class="comment"># echo LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdlIvRmdpKysyTHZlU0ttNU11TG9DeVZ6aUVsOEVCVFhIS0tacWczMG5iOWgvUHAxCmRFdmtyRWxxbThSRzdyTjhhRUZJMmYvZnBxeEtMdFlTWmVYTjEybWFRQTBiV1JlSG1nYWxnTzBZbVpYV1psc0EKTkdMS3BLSThBeHM1V3gwd1pTSHVpcXhZQjl5Z0dPR0dhMW41SmZPUDBRWFZNeTVDZlcweWtLRnZmbDJ6TENwSgp0TU8ybXVmcUdtMzNsK3dJdEpTSmhCVHVHNEQ1a0pnOFFSNUZzUDk1eXF2RWNnT1NrNUZpNFVKZkcwakY1Rnd3ClBrdXpIZ05jRUNvWDFTa05ZK2RSd2kreTlDWWFSdWcvbXBrd1F5RWFBVW5BbzNhaTlWTFd5dnRkc3h1YlFMMUIKTFBnM2ROMUxUT3lMRWhjM2VSTXVhVEdHYTQ3OGwxUWJYeTV2K3dJREFRQUJBb0lCQUQzbVNqVEQvOGpjSkhMUAo2aWUza0k4bFlOejRnRHliTlpUUHUwK25aYXJEMndSN3pUbVZKWEVtVGxoUk00NG8vTXo2b1NlSTBlQ3hmMDQ1CkRxaC9RSklDcEZQV2RsOEFqb2RoS1lZN0U5UWc4SjFycDNOOTZpbGNXQndFS3craFRCZXR0Vzk1M1E0bHJkaTIKNTlIM0RzN1hHdmtrMlpUNHpSWlVTVHFCUEFhMWY4c2ZuSzFicHNwOEd2OWxZQTZTa1FKNG5XSDIvZXlMVXdZNQpoTXVDZW94TGc3STVIN24vOGpJWGV0Wkk0RW96MkpZa0dJN3FYZVNtdkE5U0JadFVBNGlzSVFSK0lzdVRManpXCmNrOGVrWkpkZU5PeFhrRXpaTC9iSUxwQ1ZZWVdRa2c1R2pCaFdyVGxqWGpWZzltcDJNeENLRlEwT0VGM3FZU0kKa1lZWkFSRUNnWUVBN3VmWnlPZ0o4RFh2NTdUNlFFNmdyM3U2YXdKTXZxcWhJU1l6RnNlRXJ3U0Z0b3hGY2Y1eQpWWHFIOElEUkFDMmRhMjFvV01GcDBrQUN4cjVBK014R2pxUXRTQXZSRjJES09TQk1HUHJiOG9YaktNNytZOHp5CmdueXhaMm5yYjFOdGRqN21Nc1B4UnU0V3FLeWdLRnE3a1YzOFM3Sm5aN0xRQUxiSGJmOUFMSGNDZ1lFQXlxZ00KVlpXYmIyTjZhaGRZdi8vUkVmdXo5Q0c2RGxETmhNNW0xRFlJdjNzMVZEcmhqNHM1MDR2c3JFbHZwVFlLT1o3VQppbUNjSDBZUXpsZnN2UUsxQTNSNFpvNmpFdWNMcUE0S1JWbGlyQk9jODhqSi9hUEdHa1lzQ2NBUzZ0d2pZdy9oCjliQUxVWTJISTFsOVlhYmtSYXdEYk10bi9MWWZFaExMTU5EZjdaMENnWUVBdWw5WXdLaDBDRmFyZndEcU1QeWwKMGdBZDM1ajlzY2greHROOEM0cytjU0tBQlhiTVBpK1hsaU51cFNwNDRVQzBpN2ZnTFUxRmRtWEZSTEhyRWF5YQpabkNoZXBEdFh1VjlISytiYmVsVmFJOFdOU0cxeHJsOWZsbzBNMDZvQWtMOUk3L1I2VXgranl6eHRFaG04TlJICmV4SHMza2lnN243S1VhUkZWQVJLVmVVQ2dZQW9HTjN2NVIwUENnakRpd0VGWkRGU3RKR2pnVFRWOWtqanVROEIKZC90OUgzeXF3TWUyWmg2MzY1eVZiaVpIOHd4TTRFOC9YZVFtRCsvdFU5cEVmNCtmTW1GTU1YYTBtOEJqclB0OQpRelZSeE1PdVBKRXl2VC9LSFE1RGs1eHFtY25xcE03WmxNNTRnVjgyc0ZNdGloN3FaaUY3V2plbCtjYm1CWS9zCmhiZDR4UUtCZ0hsYkNDeFhEOFVVSktIQjNraWVnSHYrOTZlN2oxUHNUTGdjZG9adXp6ejZZK0ZERGdITzk0ZWoKeXdndm12cW1aZmZ0cmdxK1BmOW54WmRGaHc1WmxjbDRtZTltalB6UFc5WFMyVHVsandGZytabDNrNjRESEo3VwpmM2VwOGIvSlpHTmFOWFQ3akF2ZnNhclhYNVQzNUJpS3J4Z0tFOTdvMStFbVhBVENaMXprCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg== | base64 -d &gt; /opt/crt/client.key</span></span><br></pre></td></tr></table></figure><h3 id="生产Client-P12认证文件cert-pfx，并下载至本地windows"><a href="#生产Client-P12认证文件cert-pfx，并下载至本地windows" class="headerlink" title="生产Client P12认证文件cert.pfx，并下载至本地windows"></a>生产Client P12认证文件cert.pfx，并下载至本地windows</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -<span class="built_in">export</span> -out /opt/crt/cert.pfx -inkey /opt/crt/client.key -<span class="keyword">in</span> /opt/crt/client.crt -certfile /opt/crt/ca.crt</span><br><span class="line">Enter Export Password: 123</span><br><span class="line">Verifying - Enter Export Password: 123</span><br><span class="line"></span><br><span class="line">sz /opt/crt/cert.pfx</span><br><span class="line"></span><br><span class="line"><span class="comment">#注：自定义一个password并牢记</span></span><br></pre></td></tr></table></figure><h3 id="在云k8s中添加凭证"><a href="#在云k8s中添加凭证" class="headerlink" title="在云k8s中添加凭证"></a>在云k8s中添加凭证</h3><p>添加凭证–&gt; 首先密码填写123–&gt; 类型 –&gt; Certificate –&gt;  Upload PKCS#12 certificate –&gt; 上传证书 –&gt; 选择文件–&gt; cert –&gt; 打开 –&gt; 上传 –&gt; 添加 –&gt; 选择凭证</p><p>注：Upload certificate上次刚生成并下载至本地的cert.pfx文件，Password值添加生成cert.pfx文件时输入的密钥</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/3.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/4.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/5.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/6.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/7.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/8.png" alt></p><h3 id="添加命名空间"><a href="#添加命名空间" class="headerlink" title="添加命名空间"></a>添加命名空间</h3><p>Kubernetes 命名空间中的值添加/root/.kube/config文件中cluster部分中name的内容（否则连接失败）</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/9.png" alt></p><h3 id="测试连接kubernetes集群"><a href="#测试连接kubernetes集群" class="headerlink" title="测试连接kubernetes集群"></a>测试连接kubernetes集群</h3><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/10.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3cfe518/11.png" alt></p><h3 id="配置jenkins-jnlp代理端口"><a href="#配置jenkins-jnlp代理端口" class="headerlink" title="配置jenkins jnlp代理端口"></a>配置jenkins jnlp代理端口</h3><p>系统管理-&gt;全局安全配置中的”代理”项,指定端口为50000</p><h2 id="拍错"><a href="#拍错" class="headerlink" title="拍错"></a>拍错</h2><h3 id="显示证书不对"><a href="#显示证书不对" class="headerlink" title="显示证书不对"></a>显示证书不对</h3><p>Error testing connection <a href="https://192.168.0.91:6443" rel="noopener" target="_blank">https://192.168.0.91:6443</a>: Get Key failed: Given final block not properly padded. Such issues can arise if a bad key is used during decryption</p><p>解决：</p><p>是因为添加平局那一界面的下面没有输入之前设置的密码（123）。输入密码、再次导入即可解决</p><h3 id="显示无法连接"><a href="#显示无法连接" class="headerlink" title="显示无法连接"></a>显示无法连接</h3><p>解决：</p><p>cert.pfx 可能没有生成好 ；或者ca.cert没有生成好，有空格， 重新生成一遍就好</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;本文详解介绍了容器版jenkins连接k8s的配置和使用详情。特别注意：必须用谷歌浏览器，而且非容器版jenkins是无法安装kubernetes插件的，所以无法连接k8s。&lt;a href=&quot;https://wandouduoduo.github.io/articles/87f87b20.html&quot;&gt;搭建k8s集群教程&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;操作系统版本:     Ubuntu 18.04 TLS&lt;/p&gt;
&lt;p&gt;软件版本:                       Jenkins 2.121.2&lt;/p&gt;
    
    </summary>
    
      <category term="容器编排" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/"/>
    
      <category term="K8s" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/K8s/"/>
    
    
      <category term="K8s" scheme="https://wandouduoduo.github.io/tags/K8s/"/>
    
      <category term="Jenkins" scheme="https://wandouduoduo.github.io/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>k8s版jenkins带maven、jdk、git各种工具用master/slave模式实现CI/CD</title>
    <link href="https://wandouduoduo.github.io/articles/7aff7329.html"/>
    <id>https://wandouduoduo.github.io/articles/7aff7329.html</id>
    <published>2020-07-02T06:56:01.000Z</published>
    <updated>2020-08-04T06:27:19.607Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>本文在k8s集群中把各种工具（jdk，git, maven等）集成到jenkins，用master/slave模式实现CI/CD。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>k8s集群    <a href="https://wandouduoduo.github.io/articles/87f87b20.html">参考教程</a></p><p>Hubor镜像服务  <a href="https://wandouduoduo.github.io/articles/b9ccc582.html">参考教程</a></p><p>nfs/Ceph持久存储   <a href="https://wandouduoduo.github.io/articles/3acab424.html">参考教程</a></p><p><a href="https://wandouduoduo.github.io/articles/12aa61a7.html">K8s中Jenkins实践教程</a></p><a id="more"></a><h2 id="M-S模式实现"><a href="#M-S模式实现" class="headerlink" title="M/S模式实现"></a>M/S模式实现</h2><h3 id="创建Master镜像文件"><a href="#创建Master镜像文件" class="headerlink" title="创建Master镜像文件"></a>创建Master镜像文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编写Dockerfile：</span></span><br><span class="line"></span><br><span class="line">cat&gt;/home/jenkins-dockerfile/Dockerfile &lt;&lt;EOF</span><br><span class="line">FROM jenkinsci/jenkins</span><br><span class="line">USER root</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y libltdl7.*</span><br><span class="line">RUN apt-get install vim -y</span><br><span class="line">RUN apt-get install maven -y</span><br><span class="line">RUN apt-get install git -y</span><br><span class="line">ARG dockerGid=999</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">"docker:x:<span class="variable">$&#123;dockerGid&#125;</span>:jenkins"</span> &gt;&gt; /etc/group</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">"jenkins ALL=NOPASSWD: ALL"</span> &gt;&gt; /etc/sudoers</span><br><span class="line">RUN mkdir -p /opt/maven/repository</span><br><span class="line">RUN mkdir -p /ceph/maven/repository</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#该Dockerfile所做的工作为：</span></span><br><span class="line"><span class="comment">#安装Maven，git,vim</span></span><br><span class="line"><span class="comment">#配置Maven仓库位置，以便启动时挂载宿主机仓库为容器中Maven仓库</span></span><br><span class="line"><span class="comment">#设置启动用户为root把jenkins加入docker组，否则无法使用宿主机的docker</span></span><br><span class="line"><span class="comment">#安装libltdl7.* 库，否则无法使用宿主机的docker</span></span><br></pre></td></tr></table></figure><h3 id="构建Master镜像"><a href="#构建Master镜像" class="headerlink" title="构建Master镜像"></a>构建Master镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t jenkinsci/jenkins:v1 /home/jenkins-dockerfile/</span><br></pre></td></tr></table></figure><h3 id="启动YAML配置文件"><a href="#启动YAML配置文件" class="headerlink" title="启动YAML配置文件"></a>启动YAML配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#jenkins命令空间创建</span></span><br><span class="line"></span><br><span class="line">cat &gt;namespace-jenkins.yaml&lt;&lt;EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">   name: jenkins</span><br><span class="line">   labels:</span><br><span class="line">     name: jenkins</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#Jenkins 权限配置</span></span><br><span class="line"><span class="comment">#此处直接将jenkins-admin集成了cluster-admin权限，可根据自己具体需要进行权限的设置</span></span><br><span class="line"></span><br><span class="line">cat&gt;jenkins-account.yaml&lt;&lt;EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: jenkins</span><br><span class="line">  name: jenkins-admin</span><br><span class="line">  namespace: jenkins</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: jenkins-admin</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: jenkins</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: jenkins-admin</span><br><span class="line">    namespace: jenkins</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Jenkins Deployment配置</span></span><br><span class="line"><span class="comment">#此处配置简单明了，需要说明的地方是挂在卷，此处挂载了四个目录，下面分别做出挂载原因：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#/var/jenkins_home（容器） –&gt; /ceph/jenkins_home（宿主机） </span></span><br><span class="line"><span class="comment">#我们需要将容器中的Jenkins源目录挂载导本地宿主机，因为该目录下保存了Jenkins产生的所有配置、我们的自定义配置、任务配置及详情等等信息，所以需要持久化导宿主机，以便重新启动Jenkins容器的时候能够找到相应数据，防止数据丢失。此处我们使用的ceph，保证整个kubernetes集群所有机器能够共享同一个目录。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#/opt/maven/repository（容器） –&gt; /ceph/maven/repository（宿主机） </span></span><br><span class="line"><span class="comment">#这一对挂载目录是Maven仓库的挂载目录，不管是Jenkins master容器或者是Jenkins slave目录都需要挂载该目录，以便容器中maven能够在下载编译代码时能够从该仓库中找到相应Jar包，同时也保证了数据的持久化。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#/usr/bin/docker（容器） –&gt; /usr/bin/docker（宿主机）</span></span><br><span class="line"><span class="comment">#/var/run/docker.sock（容器） –&gt; /var/run/docker.sock（宿主机） </span></span><br><span class="line"><span class="comment">#这两对挂载目录作用是能够在容器中操作宿主机docker，具体的用途是在slave容器中编辑maven代码并生成jar之后，需要生成该代码服务的docker镜像,并上传至本地私有仓库。因此需要操作宿主机docker以便完成这一系列操作</span></span><br><span class="line"></span><br><span class="line">cat&gt;jenkins-deployment.yaml&lt;&lt;EOF</span><br><span class="line">apiVersion: apps/v1beta2</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: jenkins</span><br><span class="line">  namespace: jenkins</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: jenkins</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: jenkins</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: jenkins</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: jenkins</span><br><span class="line">        image: jenkinsci/jenkins:v1</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: jenkins-home</span><br><span class="line">          mountPath: /var/jenkins_home</span><br><span class="line">        - name: maven-repository</span><br><span class="line">          mountPath: /opt/maven/repository</span><br><span class="line">        - name: docker</span><br><span class="line">          mountPath: /usr/bin/docker</span><br><span class="line">        - name: docker-sock</span><br><span class="line">          mountPath: /var/run/docker.sock</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">        - containerPort: 50000</span><br><span class="line">      volumes:</span><br><span class="line">        - name: jenkins-home</span><br><span class="line">          hostPath:</span><br><span class="line">            path: /ceph/jenkins_home</span><br><span class="line">        - name: maven-repository</span><br><span class="line">          hostPath:</span><br><span class="line">            path: /ceph/maven/repository</span><br><span class="line">        - name: docker</span><br><span class="line">          hostPath:</span><br><span class="line">            path: /usr/bin/docker</span><br><span class="line">        - name: docker-sock</span><br><span class="line">          hostPath:</span><br><span class="line">            path: /var/run/docker.sock</span><br><span class="line">      serviceAccountName: jenkins-admin</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Jenkins Service配置</span></span><br><span class="line"><span class="comment">#该Service配置作用是能够让用户访问到Jenkins。此处开放并配置了8080、32000端口，这两个端口在Deployment 中也应该开放。此处配置的宿主机开放端口分别为：31888、32000</span></span><br><span class="line"></span><br><span class="line">cat&gt;jenkins-service.yaml&lt;&lt;EOF</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: jenkins</span><br><span class="line">  name: jenkins</span><br><span class="line">  namespace: jenkins</span><br><span class="line">  annotations:</span><br><span class="line">    prometheus.io/scrape: <span class="string">'true'</span></span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - name: jenkins</span><br><span class="line">      port: 8080</span><br><span class="line">      nodePort: 31888</span><br><span class="line">      targetPort: 8080</span><br><span class="line">    - name: jenkins-agent</span><br><span class="line">      port: 50000</span><br><span class="line">      nodePort: 50000</span><br><span class="line">      targetPort: 50000</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: jenkins</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="启动Jenkins-Master容器"><a href="#启动Jenkins-Master容器" class="headerlink" title="启动Jenkins Master容器"></a>启动Jenkins Master容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f namespace-jenkins.yaml</span><br><span class="line">kubectl apply -f jenkins-account.yaml</span><br><span class="line">kubectl apply -f jenkins-deployment.yaml</span><br><span class="line">kubectl apply -f jenkins-service.yaml</span><br></pre></td></tr></table></figure><h3 id="创建Jenkins-slave镜像文件"><a href="#创建Jenkins-slave镜像文件" class="headerlink" title="创建Jenkins slave镜像文件"></a>创建Jenkins slave镜像文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需要使用官方镜像cnych-jenkins，其他的镜像里面都没有kubectl工具，都试过。</span></span><br><span class="line"><span class="comment">#编写Dockerfile： </span></span><br><span class="line"></span><br><span class="line">cat&gt;/home/jenkins-dockerfile/Dockerfile &lt;&lt;EOF</span><br><span class="line">FROM cnych/jenkins:jnlp</span><br><span class="line">USER root</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y libltdl7.*</span><br><span class="line">RUN apt-get install maven -y</span><br><span class="line">RUN apt-get install vim -y</span><br><span class="line">RUN apt-get install git -y</span><br><span class="line">ARG dockerGid=999</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">"docker:x:<span class="variable">$&#123;dockerGid&#125;</span>:jenkins"</span> &gt;&gt; /etc/group</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">"jenkins ALL=NOPASSWD: ALL"</span> &gt;&gt; /etc/sudoers</span><br><span class="line">RUN mkdir -p /opt/maven/repository</span><br><span class="line">RUN mkdir -p /ceph/maven/repository</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#该Dockerfile所做的工作为：</span></span><br><span class="line"><span class="comment">#安装Maven,git,vim</span></span><br><span class="line"><span class="comment">#配置Maven仓库位置，以便启动时挂载宿主机仓库为容器中Maven仓库</span></span><br><span class="line"><span class="comment">#设置启动用户为root</span></span><br></pre></td></tr></table></figure><h3 id="构建Slave镜像"><a href="#构建Slave镜像" class="headerlink" title="构建Slave镜像"></a>构建Slave镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t cnych/jenkins:v1 /home/jenkins-dockerfile/</span><br></pre></td></tr></table></figure><h3 id="查看镜像列表"><a href="#查看镜像列表" class="headerlink" title="查看镜像列表"></a>查看镜像列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h3 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#访问jenkins</span></span><br><span class="line">http://192.168.0.92:31888</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看密码</span></span><br><span class="line">[root@test2 ~]<span class="comment"># docker ps -l</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">6f8a62f8a0f7        2114cb298e17        <span class="string">"/sbin/tini -- /us..."</span>   About an hour ago   Up About an hour                        k8s_jenkins_jenkins-7b46757695-4hx6f_jenkins_e8cb1035-3fe6-11e9-a258-000c2980fc47_0</span><br><span class="line"></span><br><span class="line">[root@test2 ~]<span class="comment"># docker exec 6f8a62f8a0f7 cat /var/jenkins_home/secrets/initialAdminPassword</span></span><br><span class="line">471234cd0eb44ec3bfc4015fbacd599b</span><br></pre></td></tr></table></figure><h3 id="页面配置master"><a href="#页面配置master" class="headerlink" title="页面配置master"></a>页面配置master</h3><h5 id="升级和重置密码"><a href="#升级和重置密码" class="headerlink" title="升级和重置密码"></a>升级和重置密码</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#然后会要求安装一些插件，这里选择默认安装即可，否则下一步打开是空白页</span></span><br><span class="line"><span class="comment">#设置登录用户名密码：</span></span><br><span class="line">admin/jenkins@123</span><br><span class="line"></span><br><span class="line"><span class="comment">#这时候会跳转到首页， 此时Jenkins就可以真正使用了： </span></span><br><span class="line"><span class="comment">#对jenkins进行升级</span></span><br><span class="line"><span class="comment">#重启jenkins（有点慢，等5分钟）</span></span><br><span class="line"><span class="comment">#刷新网页重新登录</span></span><br><span class="line">admin/471234cd0eb44ec3bfc4015fbacd599b</span><br><span class="line"><span class="comment">#查看更新后的版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重置admin密码方法：</span></span><br><span class="line"><span class="comment">#进入首页-》系统管理-》全局安全配置</span></span><br><span class="line"><span class="comment">#把“启用安全”勾上和把Jenkins专有用户数据库勾上、允许用户注册勾上-》保存</span></span><br><span class="line"><span class="comment">#点击右上角的admin-》设置-》修改里面的密码为（jenkins@123）-》保存-》重新登录-》输入账号密码</span></span><br></pre></td></tr></table></figure><h5 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Kubernetes Cli Plugin：该插件可直接在Jenkins中使用kubernetes命令行进行操作。</span></span><br><span class="line"><span class="comment">#Kubernetes plugin： 使用kubernetes则需要安装该插件</span></span><br><span class="line"><span class="comment">#Kubernetes Continuous Deploy Plugin：kubernetes部署deploymrnt.yaml 时候需要使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装步骤：</span></span><br><span class="line"><span class="comment">#进入首页-》系统管理-》插件管理-》可选插件-》输入kubernetes-》选中所有带kubernetes的插件进行安装-》安装完返回首页</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有带kubernetes的插件是否安装上</span></span><br><span class="line"><span class="comment">#进入首页-》系统管理-》插件管理-》已安装-》输入kubernetes查看</span></span><br><span class="line"><span class="comment">#也可登录该网站：https://plugins.jenkins.io/，查找需要的插件</span></span><br></pre></td></tr></table></figure><h5 id="增加一个kubernetes云"><a href="#增加一个kubernetes云" class="headerlink" title="增加一个kubernetes云"></a>增加一个kubernetes云</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#系统管理-&gt;系统设置，往下拉可看到云，点击新增一个云来新增一个kubernetes云</span></span><br></pre></td></tr></table></figure><p><a href="https://wandouduoduo.github.io/articles/3cfe518.html">配置jenkins连接kubernetes教程</a></p><h5 id="配置K8s-Pod-Template"><a href="#配置K8s-Pod-Template" class="headerlink" title="配置K8s Pod Template"></a>配置K8s Pod Template</h5><p>其实就是配置Jenkins的jnlp-slave</p><p>在该kubernetes云下，新增Kubernetes Pod Template，配置一个模板容器配置，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/1.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/2.png" alt></p><p>配置镜像，下面里面的镜像一定要写对，否则写成别的镜像，到最后编译时候就一直报错没有mvn</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/3.png" alt></p><p>配置卷：就是deployment.yaml 里面的挂载路径</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/4.png" alt></p><h5 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h5><p>点击 系统管理-&gt;全局工具配置，此处可配置配置一些常用的工具配置，比如java、ant、maven、docker</p><p><a href="https://wandouduoduo.github.io/articles/6f80621c.html">参照教程</a></p><h3 id="创建流水线任务项目"><a href="#创建流水线任务项目" class="headerlink" title="创建流水线任务项目"></a>创建流水线任务项目</h3><h5 id="新建任务项目"><a href="#新建任务项目" class="headerlink" title="新建任务项目"></a>新建任务项目</h5><p>点击新建Item –&gt; 进入任务配置界面–&gt;选择Pipeline（中文版为：流水线）–&gt;确定。则可编写Pipeline，进行任务配置</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/5.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/6.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Pipeline任务采用流式的处理方法，步骤清晰，非常适合进行任务配置。</span></span><br><span class="line"><span class="comment">#下面pipline里面的简单任务：查看slave镜像里面是否有java的家目录、查看maven的版本等操作，</span></span><br><span class="line"></span><br><span class="line">def label = <span class="string">"jnlp-slave"</span></span><br><span class="line">podTemplate(label: label, cloud: <span class="string">'kubernetes'</span>,containers: [</span><br><span class="line">    containerTemplate(name: <span class="string">'jnlp-slave'</span>, image: <span class="string">'cnych/jenkins:v1'</span>)</span><br><span class="line">  ],</span><br><span class="line">  volumes: [hostPathVolume(mounntPath:<span class="string">'/opt/maven/repository'</span>,hostPath:<span class="string">'/ceph/maven/repository'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">'/usr/bin/docker'</span>,hostPath:<span class="string">'/usr/bin/docker'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">'/var/run/docker.sock'</span>,hostPath:<span class="string">'/var/run/docker.sock'</span>)]) &#123;</span><br><span class="line">    node(label) &#123;</span><br><span class="line">        stage(<span class="string">'Get a Maven project'</span>) &#123;</span><br><span class="line">            container(label) &#123;</span><br><span class="line">                stage(<span class="string">'wait for exec check'</span>)&#123;</span><br><span class="line">                    sh <span class="string">'sleep 1'</span></span><br><span class="line">                    sh <span class="string">'echo $JAVA_HOME'</span></span><br><span class="line">                    sh <span class="string">'mvn -v'</span></span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                stage(<span class="string">'get maven env'</span>) &#123;</span><br><span class="line">                    sh <span class="string">'cat /etc/resolv.conf'</span></span><br><span class="line">                    sh <span class="string">'cat /etc/issue'</span></span><br><span class="line">                    sh <span class="string">'uname -a'</span></span><br><span class="line">                    sh <span class="string">'env'</span></span><br><span class="line">                &#125;</span><br><span class="line">              </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/7.png" alt></p><h5 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看构建前的pod个数</span></span><br><span class="line">kubectl get pod -n [namespace]</span><br></pre></td></tr></table></figure><p>页面点击立即构建</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/8.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/9.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看构建时的pod数量</span></span><br><span class="line">kubectl get pod -n [NAMEspace]  </span><br><span class="line"></span><br><span class="line"><span class="comment">#再次查看pod个数：发现消失从上边的pod个数变化中，我们可以清晰的看到 Jenkins Slave 自动创建到注销删除的过程，整个过程是自动完成的，不需要人工干预。</span></span><br></pre></td></tr></table></figure><h2 id="使用宿主机的kubectl命令"><a href="#使用宿主机的kubectl命令" class="headerlink" title="使用宿主机的kubectl命令"></a>使用宿主机的kubectl命令</h2><h3 id="镜像选择"><a href="#镜像选择" class="headerlink" title="镜像选择"></a>镜像选择</h3><p>slave镜像需要使用cnych/jenkins:jnlp，这个官方镜像里面有kubectl工具，其他的没有，都试过，上面就是用的这个镜像，所以直接下一步</p><h3 id="挂载kubectl工具"><a href="#挂载kubectl工具" class="headerlink" title="挂载kubectl工具"></a>挂载kubectl工具</h3><p>/root/.kube 目录，我们将这个目录挂载到容器的 /home/jenkins/.kube 目录下面这是为了让我们能够在 Pod 的容器中能够使用 kubectl 工具来访问我们的 Kubernetes 集群，方便我们后面在 Slave Pod 部署 Kubernetes 应用。添加一个挂在路径，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/10.png" alt></p><h3 id="pipline脚本"><a href="#pipline脚本" class="headerlink" title="pipline脚本"></a>pipline脚本</h3><p>先试试是否能使用宿主机的kubectl命令，只查看一个pod情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">def label = <span class="string">"jnlp-slave"</span></span><br><span class="line">podTemplate(label: label, cloud: <span class="string">'kubernetes'</span>,containers: [</span><br><span class="line">    containerTemplate(name: <span class="string">'jnlp-slave'</span>, image: <span class="string">'cnych/jenkins:v1'</span>)</span><br><span class="line">  ],</span><br><span class="line">  volumes: [hostPathVolume(mounntPath:<span class="string">'/opt/maven/repository'</span>,hostPath:<span class="string">'/ceph/maven/repository'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">'/usr/bin/docker'</span>,hostPath:<span class="string">'/usr/bin/docker'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">'/var/run/docker.sock'</span>,hostPath:<span class="string">'/var/run/docker.sock'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">' /home/jenkins/.kube'</span>,hostPath:<span class="string">'/root/.kube'</span>)]) &#123;</span><br><span class="line">    node(label) &#123;</span><br><span class="line">        stage(<span class="string">'Get a Maven project'</span>) &#123;</span><br><span class="line">            container(label) &#123;</span><br><span class="line">                stage(<span class="string">'wait for exec check'</span>)&#123;</span><br><span class="line">                    sh <span class="string">'kubectl get pod -n jenkins'</span></span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="构建，查看控制台输出"><a href="#构建，查看控制台输出" class="headerlink" title="构建，查看控制台输出"></a>构建，查看控制台输出</h3><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/11.png" alt></p><h3 id="使用jenkins-salve创建nignx项目"><a href="#使用jenkins-salve创建nignx项目" class="headerlink" title="使用jenkins-salve创建nignx项目"></a>使用jenkins-salve创建nignx项目</h3><h5 id="pipline脚本-1"><a href="#pipline脚本-1" class="headerlink" title="pipline脚本"></a>pipline脚本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">def label = <span class="string">"jnlp-slave"</span></span><br><span class="line">podTemplate(label: label, cloud: <span class="string">'kubernetes'</span>,containers: [</span><br><span class="line">    containerTemplate(name: <span class="string">'jnlp-slave'</span>, image: <span class="string">'cnych/jenkins:v1'</span>)</span><br><span class="line">  ],</span><br><span class="line">  volumes: [hostPathVolume(mounntPath:<span class="string">'/opt/maven/repository'</span>,hostPath:<span class="string">'/ceph/maven/repository'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">'/usr/bin/docker'</span>,hostPath:<span class="string">'/usr/bin/docker'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">'/usr/bin/docker'</span>,hostPath:<span class="string">'/usr/bin/docker'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">' /home/jenkins/.kube'</span>,hostPath:<span class="string">'/root/.kube'</span>)]) &#123;</span><br><span class="line">    node(label) &#123;</span><br><span class="line">        stage(<span class="string">'create a pod'</span>) &#123;</span><br><span class="line">            container(label) &#123;</span><br><span class="line">                stage(<span class="string">'cat the pod'</span>)&#123;</span><br><span class="line">                    sh <span class="string">'kubectl get pod -n jenkins'</span></span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">        stage(<span class="string">'create the deploy-nginx.yaml'</span>)&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'create the deploy-nginx.yaml'</span></span><br><span class="line">sh <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">cat &gt;deploy-nginx.yaml&lt;&lt;EOF</span></span><br><span class="line"><span class="string">apiVersion: extensions/v1beta1</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: http-test-dm2</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  replicas: 1</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        name: http-test-dm2</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: http-test-con</span></span><br><span class="line"><span class="string">        image: nginx</span></span><br><span class="line"><span class="string">        imagePullPolicy: Never      </span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 80</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Service</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: http-nginx-ser</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  type: NodePort</span></span><br><span class="line"><span class="string">  ports: </span></span><br><span class="line"><span class="string">  - port: 80</span></span><br><span class="line"><span class="string">    nodePort: 31000</span></span><br><span class="line"><span class="string">    targetPort: 80</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    name: http-test-dm2</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: extensions/v1beta1</span></span><br><span class="line"><span class="string">kind: Ingress</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: nginx</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  rules:</span></span><br><span class="line"><span class="string">  - host: www.nginx2.com      </span></span><br><span class="line"><span class="string">    http:</span></span><br><span class="line"><span class="string">      paths:</span></span><br><span class="line"><span class="string">      - path: /</span></span><br><span class="line"><span class="string">        backend:</span></span><br><span class="line"><span class="string">          serviceName: http-nginx-ser</span></span><br><span class="line"><span class="string">          servicePort: 80</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">            &#125;</span><br><span class="line">                stage(<span class="string">'deploy to k8s'</span>)&#123;</span><br><span class="line">                    sh <span class="string">'kubectl create -f deploy-nginx.yaml'</span></span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">              </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="开始构建"><a href="#开始构建" class="headerlink" title="开始构建"></a>开始构建</h5><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/12.png" alt></p><h5 id="查看命名空间下的pod验证"><a href="#查看命名空间下的pod验证" class="headerlink" title="查看命名空间下的pod验证"></a>查看命名空间下的pod验证</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#多次执行下面命令，对比输出结果</span></span><br><span class="line">kubectl get pod -n jenkins</span><br></pre></td></tr></table></figure><h5 id="测试访问nginx"><a href="#测试访问nginx" class="headerlink" title="测试访问nginx"></a>测试访问nginx</h5><p>浏览器访问<a href="http://x.x.x.x:31000" rel="noopener" target="_blank">http://x.x.x.x:31000</a></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/7aff7329/13.png" alt></p><h5 id="编写pipline脚本"><a href="#编写pipline脚本" class="headerlink" title="编写pipline脚本"></a>编写pipline脚本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注意下面pipline脚本里面的 maven build步骤，里面的JAVA_HOME和mvn工具 都是jenkins-slave里面的，而不是jenkins-master里面的工具，</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如何查看jenkins-slave里面JAVA_HOME位置：只有通过构建的时候，在pipline里面写shell命令进行查看，因为制作jenkins-slave镜像的基础</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#镜像是从官方镜像拉取的，而这个官方jenkins-slave镜像是不能独立启动的，试过，用docker无法启动，只能当slave使用。但是为什么还要用这个镜像，就是因为这个基础镜像里面包含kubectl工具， 自己之前尝试往jenkins-master镜像里面添加kubectl工具，但是失败，</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：下面piplene里面的第三个stage步骤里面的JAVA_HOME路径是第一个stage步骤mvn -v 得到的结果有java路径，要填写这个，不要填写echo $JAVA_HOME得到的结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#先编译构建一下，然后得到mvn -v 结果后，及时暂停，然后把java路径填写到第三个stage步骤里面，从新编译打包</span></span><br><span class="line"></span><br><span class="line">def label = <span class="string">"jnlp-slave"</span></span><br><span class="line">podTemplate(label: label, cloud: <span class="string">'kubernetes'</span>,containers: [</span><br><span class="line">    containerTemplate(name: <span class="string">'jnlp-slave'</span>, image: <span class="string">'cnych/jenkins:v1'</span>)</span><br><span class="line">  ],</span><br><span class="line">  volumes: [hostPathVolume(mounntPath:<span class="string">'/opt/maven/repository'</span>,hostPath:<span class="string">'/ceph/maven/repository'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">'/usr/bin/docker'</span>,hostPath:<span class="string">'/usr/bin/docker'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">'/usr/bin/docker'</span>,hostPath:<span class="string">'/usr/bin/docker'</span>),</span><br><span class="line">            hostPathVolume(mounntPath:<span class="string">' /home/jenkins/.kube'</span>,hostPath:<span class="string">'/root/.kube'</span>)]) &#123;</span><br><span class="line">    node(label) &#123;</span><br><span class="line">        stage(<span class="string">'create a pod'</span>) &#123;</span><br><span class="line">            container(label) &#123;</span><br><span class="line">                stage(<span class="string">'cat the pod'</span>)&#123;</span><br><span class="line">                    sh <span class="string">'kubectl get pod -n jenkins'</span></span><br><span class="line">                    sh <span class="string">'echo $JAVA_HOME'</span></span><br><span class="line">                    sh <span class="string">'mvn -v'</span></span><br><span class="line">                &#125;</span><br><span class="line">                stage(<span class="string">'git checkout'</span>)&#123;</span><br><span class="line">            </span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'git clone'</span></span><br><span class="line">                checkout([<span class="variable">$class</span>: <span class="string">'GitSCM'</span>, branches: [[name: <span class="string">'*/master'</span>]], doGenerateSubmoduleConfigurations: <span class="literal">false</span>, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: <span class="string">'c2ca4523-96d0-4fdc-a427-bfefc36a3aa5'</span>, url: <span class="string">'http://192.168.0.96:8081/root/hello.git'</span>]]])</span><br><span class="line">           </span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                stage(<span class="string">'maven build'</span>)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'maven build'</span></span><br><span class="line">                    sh <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">                export JAVA_HOME=/usr/local/newhope/java1.8</span></span><br><span class="line"><span class="string">                /usr/bin/mvn clean package -Dmaven.test.skip=true</span></span><br><span class="line"><span class="string">                '</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">        stage(<span class="string">'docker build and push images'</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'docker build and push images'</span></span><br><span class="line">sh <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">REPOSITORY=192.168.0.98:5000/library/solo/solo:$&#123;Tag&#125;</span></span><br><span class="line"><span class="string">cat &gt;Dockerfile&lt;&lt;EOF</span></span><br><span class="line"><span class="string">FROM 192.168.0.98:5000/library/tomcat-85:latest</span></span><br><span class="line"><span class="string">RUN rm -rf /usr/local/tomcat/webapps/ROOT/</span></span><br><span class="line"><span class="string">COPY target/*.war /usr/local/tomcat/webapps/ROOT.war</span></span><br><span class="line"><span class="string">WORKDIR /usr/local/tomcat</span></span><br><span class="line"><span class="string">EXPOSE 8080</span></span><br><span class="line"><span class="string">CMD ["./bin/catalina.sh", "run"]</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">docker build -t $REPOSITORY .</span></span><br><span class="line"><span class="string">docker login -u admin -p Harbor12345 192.168.0.98:5000</span></span><br><span class="line"><span class="string">docker push $REPOSITORY</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">        stage(<span class="string">'create the deploy-solo.yaml'</span>)&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'create the deploy-solo.yaml'</span></span><br><span class="line">sh <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">REPOSITORY=192.168.0.98:5000/library/solo/solo:$&#123;Tag&#125;</span></span><br><span class="line"><span class="string">cat &gt;deploy-solo.yaml&lt;&lt;EOF</span></span><br><span class="line"><span class="string">apiVersion: extensions/v1beta1</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: http-solo-dm2</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  replicas: 1</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        name: http-solo-dm2</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: http-solo-con</span></span><br><span class="line"><span class="string">        image: $REPOSITORY</span></span><br><span class="line"><span class="string">        imagePullPolicy: Never      </span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 80</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Service</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: http-solo-ser</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  type: NodePort</span></span><br><span class="line"><span class="string">  ports: </span></span><br><span class="line"><span class="string">  - port: 8080</span></span><br><span class="line"><span class="string">    nodePort: 33580</span></span><br><span class="line"><span class="string">    targetPort: 8080</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    name: http-solo-dm2</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: extensions/v1beta1</span></span><br><span class="line"><span class="string">kind: Ingress</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: solo</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  rules:</span></span><br><span class="line"><span class="string">  - host: www.solo.com      </span></span><br><span class="line"><span class="string">    http:</span></span><br><span class="line"><span class="string">      paths:</span></span><br><span class="line"><span class="string">      - path: /</span></span><br><span class="line"><span class="string">        backend:</span></span><br><span class="line"><span class="string">          serviceName: http-solo-ser</span></span><br><span class="line"><span class="string">          servicePort: 8080</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">            &#125;</span><br><span class="line">                stage(<span class="string">'deploy to k8s'</span>)&#123;</span><br><span class="line">                    sh <span class="string">'kubectl create -f deploy-solo.yaml'</span></span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">              </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#上面pipline脚本做的事情如下：</span></span><br><span class="line"><span class="comment">#查看JAVA_HOME</span></span><br><span class="line"><span class="comment">#查看maven版本</span></span><br><span class="line"><span class="comment">#拉取代码：git checkout</span></span><br><span class="line"><span class="comment">#编译打包：maven build</span></span><br><span class="line"><span class="comment">#构建并推送镜像：docker build and push images</span></span><br><span class="line"><span class="comment">#创建yaml文件：create the deploy-solo.yaml</span></span><br><span class="line"><span class="comment">#部署到k8s集群里面：deploy to k8s</span></span><br></pre></td></tr></table></figure><h5 id="查看harbor仓库"><a href="#查看harbor仓库" class="headerlink" title="查看harbor仓库"></a>查看harbor仓库</h5><p><a href="http://192.168.0.98:5000" rel="noopener" target="_blank">http://192.168.0.98:5000</a></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="生成自定义Jenkins-master镜像"><a href="#生成自定义Jenkins-master镜像" class="headerlink" title="生成自定义Jenkins master镜像"></a>生成自定义Jenkins master镜像</h3><p>Dockerfile：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> <span class="number">192.168</span>.<span class="number">1.184</span>:<span class="number">5000</span>/jenkins/jenkins:<span class="number">2.89</span>.<span class="number">3</span></span><br><span class="line"><span class="keyword">ENV</span> MAVEN_VERSION <span class="number">3.0</span>.<span class="number">5</span></span><br><span class="line"><span class="keyword">ENV</span> JAVA_HOME /usr/java/jdk1.<span class="number">8.0</span>_121</span><br><span class="line"><span class="keyword">ENV</span> MAVEN_HOME /opt/maven/apache-maven-$&#123;MAVEN_VERSION&#125;</span><br><span class="line"><span class="keyword">ENV</span> CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># build java</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./jdk1.8.0_121 <span class="variable">$&#123;JAVA_HOME&#125;</span></span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./libltdl.so.7 /usr/lib/libltdl.so.7</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># build maven</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> apache-maven-<span class="variable">$&#123;MAVEN_VERSION&#125;</span>-bin.tar.gz /tmp/maven/apache-maven-<span class="variable">$&#123;MAVEN_VERSION&#125;</span>-bin.tar.gz</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> settings.xml /tmp/maven/settings.xml</span></span><br><span class="line"><span class="keyword">USER</span> root:root</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p /opt/maven/repository \</span></span><br><span class="line"><span class="bash">&amp;&amp; <span class="built_in">cd</span> /opt/maven \</span></span><br><span class="line"><span class="bash">&amp;&amp; tar -zxvf /tmp/maven/apache-maven-<span class="variable">$&#123;MAVEN_VERSION&#125;</span>-bin.tar.gz \</span></span><br><span class="line"><span class="bash">&amp;&amp; cp /tmp/maven/settings.xml <span class="variable">$&#123;MAVEN_HOME&#125;</span>/conf/settings.xml \</span></span><br><span class="line"><span class="bash">&amp;&amp; rm -rf /tmp/maven</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> PATH $&#123;JAVA_HOME&#125;/bin:$&#123;MAVEN_HOME&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure><p>该Dockerfile所做的工作为：</p><ol><li>重新安装Java环境并配置环境变量；</li><li>安装Maven并配置环境变量；</li><li>配置Maven仓库位置，以便启动时挂载宿主机仓库为容器中Maven仓库;</li><li>设置启动用户为root。</li></ol><h3 id="生成自定义Jenkins-slave镜像"><a href="#生成自定义Jenkins-slave镜像" class="headerlink" title="生成自定义Jenkins slave镜像"></a>生成自定义Jenkins slave镜像</h3><p>Dockerfile：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> jenkinsci/jnlp-slave:latest</span><br><span class="line"><span class="keyword">ENV</span> MAVEN_VERSION <span class="number">3.0</span>.<span class="number">5</span></span><br><span class="line"><span class="keyword">ENV</span> JAVA_HOME /usr/java/jdk1.<span class="number">8.0</span>_121</span><br><span class="line"><span class="keyword">ENV</span> MAVEN_HOME /opt/maven/apache-maven-$&#123;MAVEN_VERSION&#125;</span><br><span class="line"><span class="keyword">ENV</span> CLASSPATH .:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># build java</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./jdk1.8.0_121 <span class="variable">$&#123;JAVA_HOME&#125;</span></span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./libltdl.so.7 /usr/lib/libltdl.so.7</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># build maven</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> apache-maven-<span class="variable">$&#123;MAVEN_VERSION&#125;</span>-bin.tar.gz /tmp/maven/apache-maven-<span class="variable">$&#123;MAVEN_VERSION&#125;</span>-bin.tar.gz</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> settings.xml /tmp/maven/settings.xml</span></span><br><span class="line"><span class="keyword">USER</span> root:root</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p /opt/maven/repository \</span></span><br><span class="line"><span class="bash">&amp;&amp; <span class="built_in">cd</span> /opt/maven \</span></span><br><span class="line"><span class="bash">&amp;&amp; tar -zxvf /tmp/maven/apache-maven-<span class="variable">$&#123;MAVEN_VERSION&#125;</span>-bin.tar.gz \</span></span><br><span class="line"><span class="bash">&amp;&amp; cp /tmp/maven/settings.xml <span class="variable">$&#123;MAVEN_HOME&#125;</span>/conf/settings.xml \</span></span><br><span class="line"><span class="bash">&amp;&amp; rm -rf /tmp/maven \</span></span><br><span class="line"><span class="bash">&amp;&amp; apt-get -yq update \</span></span><br><span class="line"><span class="bash">&amp;&amp; apt-get -yq --no-install-recommends --no-install-suggests install sshpass \</span></span><br><span class="line"><span class="bash">&amp;&amp; apt-get clean -y</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> PATH $&#123;MAVEN_HOME&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure><p>该Dockerfile操作与Jenkins master的Dockerfile基本一致。不过该镜像中缺少libltdl.so.7文件，需要从宿主机中拷贝进去，该文件在slave节点容器中使用docker时会用到，因此十分重要</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;本文在k8s集群中把各种工具（jdk，git, maven等）集成到jenkins，用master/slave模式实现CI/CD。&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;k8s集群    &lt;a href=&quot;https://wandouduoduo.github.io/articles/87f87b20.html&quot;&gt;参考教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hubor镜像服务  &lt;a href=&quot;https://wandouduoduo.github.io/articles/b9ccc582.html&quot;&gt;参考教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;nfs/Ceph持久存储   &lt;a href=&quot;https://wandouduoduo.github.io/articles/3acab424.html&quot;&gt;参考教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wandouduoduo.github.io/articles/12aa61a7.html&quot;&gt;K8s中Jenkins实践教程&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="容器编排" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/"/>
    
      <category term="K8s" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/K8s/"/>
    
    
      <category term="K8s" scheme="https://wandouduoduo.github.io/tags/K8s/"/>
    
      <category term="Jenkins" scheme="https://wandouduoduo.github.io/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7安装指定版本Docker-ce</title>
    <link href="https://wandouduoduo.github.io/articles/e09b4ef6.html"/>
    <id>https://wandouduoduo.github.io/articles/e09b4ef6.html</id>
    <published>2020-07-02T06:09:58.000Z</published>
    <updated>2020-08-04T06:27:19.565Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker版本说明"><a href="#Docker版本说明" class="headerlink" title="Docker版本说明"></a><strong>Docker版本说明</strong></h2><p>Docker-CE指Docker社区版，由社区维护和提供技术支持，为免费版本，适合个人开发人员和小团队使用。</p><p>Docker-EE指Docker企业版，为收费版本，由售后团队和技术团队提供技术支持，专为企业开发和IT团队而设计。</p><p>相比Docker-EE，增加一些额外功能，更重要的是提供了更安全的保障。</p><p>此外，Docker的发布版本分为Stable版和Edge版，区别在于前者是按季度发布的稳定版(发布慢)，后者是按月发布的边缘版(发布快)。</p><p>通常情况下，Docker-CE足以满足我们的需求。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="配置docker-yum源"><a href="#配置docker-yum源" class="headerlink" title="配置docker yum源"></a>配置docker yum源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/e09b4ef6/1.png" alt></p><h3 id="安装指定版本docker-ce"><a href="#安装指定版本docker-ce" class="headerlink" title="安装指定版本docker-ce"></a>安装指定版本docker-ce</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看可安装的版本</span></span><br><span class="line">yum list docker-ce --showduplicates | sort -r</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装指定版本</span></span><br><span class="line">yum install docker-ce-&lt;VERSION STRING&gt;</span><br><span class="line"><span class="comment">#如果不指定，默认安装最新版本</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/e09b4ef6/2.png" alt></p><h3 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line"><span class="comment">#加入开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/e09b4ef6/3.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Docker版本说明&quot;&gt;&lt;a href=&quot;#Docker版本说明&quot; class=&quot;headerlink&quot; title=&quot;Docker版本说明&quot;&gt;&lt;/a&gt;&lt;strong&gt;Docker版本说明&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;Docker-CE指Docker社区版，由社区维护和提供技术支持，为免费版本，适合个人开发人员和小团队使用。&lt;/p&gt;
&lt;p&gt;Docker-EE指Docker企业版，为收费版本，由售后团队和技术团队提供技术支持，专为企业开发和IT团队而设计。&lt;/p&gt;
&lt;p&gt;相比Docker-EE，增加一些额外功能，更重要的是提供了更安全的保障。&lt;/p&gt;
&lt;p&gt;此外，Docker的发布版本分为Stable版和Edge版，区别在于前者是按季度发布的稳定版(发布慢)，后者是按月发布的边缘版(发布快)。&lt;/p&gt;
&lt;p&gt;通常情况下，Docker-CE足以满足我们的需求。&lt;/p&gt;
    
    </summary>
    
      <category term="容器技术" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Centos" scheme="https://wandouduoduo.github.io/tags/Centos/"/>
    
      <category term="Docker" scheme="https://wandouduoduo.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>jenkins配置jdk、git、maven等工具</title>
    <link href="https://wandouduoduo.github.io/articles/6f80621c.html"/>
    <id>https://wandouduoduo.github.io/articles/6f80621c.html</id>
    <published>2020-07-01T11:26:55.000Z</published>
    <updated>2020-08-04T06:27:19.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>本文详细介绍jenkins配置各种打包工具。</p><a id="more"></a><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>进入首页-》系统管理-》全局工具配置</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/6f80621c/1.png" alt></p><h3 id="配置jdk"><a href="#配置jdk" class="headerlink" title="配置jdk"></a>配置jdk</h3><p><strong>查找jdk安装路径</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果是容器版jenkins，就登进容器里面查看jdk路径</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br><span class="line"></span><br><span class="line">/docker-java-home</span><br></pre></td></tr></table></figure><p><strong>配置路径</strong></p><p>新增JDK-》去掉自动安装对勾-》填写JAVA_HOME-》保存,如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/6f80621c/2.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/6f80621c/3.png" alt></p><h3 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h3><p><strong>查找git安装路径</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果是容器版jenkins，就登进容器里面查看</span></span><br><span class="line"></span><br><span class="line">whereis git</span><br><span class="line"></span><br><span class="line">git: /usr/bin/git /usr/share/man/man1/git.1.gz</span><br></pre></td></tr></table></figure><p><strong>配置路径</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/6f80621c/4.png" alt></p><h3 id="配置maven"><a href="#配置maven" class="headerlink" title="配置maven"></a>配置maven</h3><p><strong>查找maven安装路径</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果是容器版jenkins，就登进容器里面查看</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$MAVEN_HOME</span></span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/apache-maven-3.5.4</span><br></pre></td></tr></table></figure><p><strong>配置路径</strong></p><p>新增Maven -》去掉自动安装对勾-》填写MAVEN_HOME-》保存  ，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/6f80621c/5.png" alt></p><p>配置完成，保存即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;本文详细介绍jenkins配置各种打包工具。&lt;/p&gt;
    
    </summary>
    
      <category term="CI&amp;CD" scheme="https://wandouduoduo.github.io/categories/CI-CD/"/>
    
      <category term="Jenkins" scheme="https://wandouduoduo.github.io/categories/CI-CD/Jenkins/"/>
    
    
      <category term="Jenkins" scheme="https://wandouduoduo.github.io/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装gitlab详细教程</title>
    <link href="https://wandouduoduo.github.io/articles/adf03e2d.html"/>
    <id>https://wandouduoduo.github.io/articles/adf03e2d.html</id>
    <published>2020-06-30T10:09:38.000Z</published>
    <updated>2020-08-04T06:27:19.562Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>博客中有docker直接启动gitlab服务，这里再补充下直接裸机部署gitlab服务的教程。</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>操作系统：centos7.5</p><p>服务端：192.168.0.74</p><p>客户端：192.168.0.73</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="服务端终端操作"><a href="#服务端终端操作" class="headerlink" title="服务端终端操作"></a>服务端终端操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打开系统防火墙HTTP和SSH访问</span></span><br><span class="line">yum install curl policycoreutils openssh-server openssh-clients -y</span><br><span class="line">systemctl <span class="built_in">enable</span> sshd</span><br><span class="line">systemctl start sshd</span><br><span class="line">yum install postfix -y</span><br><span class="line">systemctl <span class="built_in">enable</span> postfix</span><br><span class="line">systemctl start postfix</span><br><span class="line">firewall-cmd --permanent --add-service=http</span><br><span class="line">systemctl reload firewalld </span><br><span class="line"></span><br><span class="line"><span class="comment">#添加GitLab镜像源并安装</span></span><br><span class="line">curl -sS http://packages.gitlab.com.cn/install/gitlab-ce/script.rpm.sh | sudo bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#这是官方的yum源，安装速度会比较慢，可以使用国内源，修改如下文件即可：</span></span><br><span class="line">cat&gt;&gt;/etc/yum.repos.d/gitlab_gitlab-ce.repo&lt;&lt;EOF</span><br><span class="line">[gitlab-ce]</span><br><span class="line">name=gitlab-ce</span><br><span class="line">baseurl=http://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://packages.gitlab.com/gpg.key</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">yum install gitlab-ce -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改配置，指定服务器ip和自定义端口</span></span><br><span class="line">vim /etc/gitlab/gitlab.rb</span><br><span class="line"></span><br><span class="line">external_url <span class="string">'http://192.168.0.94:8081'</span>       <span class="comment">#本地ip+端口</span></span><br><span class="line"><span class="comment">#注意这里设置的端口不能被占用，默认是8080端口，如果8080已经使用，请自定义其它端口，并在防火墙设置开放相对应得端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置GitLab</span></span><br><span class="line">gitlab-ctl reconfigure   <span class="comment">#需要很长时间不要按ctrl+c  每次修改配置文件都需要重置，否则不生效</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#出现如下结果表明重置成功</span></span><br><span class="line">Running handlers:</span><br><span class="line">Running handlers complete</span><br><span class="line">Chef Client finished, 454/655 resources updated <span class="keyword">in</span> 04 minutes 29 seconds</span><br><span class="line">gitlab Reconfigured!</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动GitLab</span></span><br><span class="line">gitlab-ctl start</span><br><span class="line"></span><br><span class="line">ok: run: gitlab-git-http-server: (pid 3922) 1s</span><br><span class="line">ok: run: logrotate: (pid 3929) 0s</span><br><span class="line">ok: run: nginx: (pid 3936) 1s</span><br><span class="line">ok: run: postgresql: (pid 3941) 0s</span><br><span class="line">ok: run: redis: (pid 3950) 0s</span><br><span class="line">ok: run: sidekiq: (pid 3955) 0s</span><br><span class="line">ok: run: unicorn: (pid 3961) 1s</span><br><span class="line"><span class="comment">#提示“ok: run:”表示启动成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止gilab</span></span><br><span class="line">gitlab-ctl stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure><h3 id="服务端页面操作"><a href="#服务端页面操作" class="headerlink" title="服务端页面操作"></a>服务端页面操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果没有域名，直接输入服务器ip和指定端口进行访问</span></span><br><span class="line"><span class="comment">#第一次访问GitLab，系统会重定向页面到重定向到重置密码页面，你需要输入初始化管理员账号的密码，管理员的用户名为root，初始密码为5iveL!fe。重置密码后，新密码即为刚输入的密码。</span></span><br><span class="line"></span><br><span class="line">http://192.168.0.94:8081</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始账户: root 密码: 5iveL!fe</span></span><br><span class="line"><span class="comment">#第一次登录需要修改密码</span></span><br><span class="line"><span class="comment">#修改密码为：</span></span><br><span class="line">jenkins@123</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新登录</span></span><br><span class="line">root/jenkins@123</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建项目</span></span><br><span class="line"><span class="comment">#创建一个hello项目 --&gt; 点击小扳手（管理区域）--&gt; 新建项目</span></span><br><span class="line"></span><br><span class="line">Project name为项目的名称</span><br><span class="line">Import project from从其他代码仓库导入代码</span><br><span class="line">Project description项目说明</span><br><span class="line">Visibility Level项目等级</span><br><span class="line">private只有你自己跟你指定的人能看</span><br><span class="line">internal只有拥有gitlab账号的用户可以查看与拉取</span><br><span class="line">public该项目能被所有人访问到并<span class="built_in">clone</span></span><br></pre></td></tr></table></figure><h3 id="客户端操作"><a href="#客户端操作" class="headerlink" title="客户端操作"></a>客户端操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装git</span></span><br><span class="line">yum install -y git</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成ssh密钥</span></span><br><span class="line">ssh-keygen -t rsa -f /root/.ssh/id_rsa -P <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#添加ssh-key公钥到gitlab， 需要连接gitlab服务器，就需要把他的公钥添加到gitlab服务器上</span></span><br><span class="line"><span class="comment">#查看</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxiS/XYe2x+iwhU6PuiV8XTmNgQ9w3FMgC4JuPkyHwIhHxh+1M/Evj7AqGJIURcrl1CHqJKng8d/M8WT+NoqwlA524hKpjv4RgEW2dl1kLfQLVVJmoB9NOvr5+cdmQ1V8xuhhxtcLw7JhigXu7HNCEs6bJ+MVwD83oc9jV7HVB3mgmZrk2+Ntxz8cr/W9MoLmkqEQJ3JYmsXmJsofcMPOQJNpmIScAu7kWJ4tIJAN5SuhNjQTw+v5HgLJT/LTdf/0DUCP55ulsDWP03ilIsEMT1FX1mz2tkQsopim2Z/Tqtk96OTNYB5svNb+nJXkRUskbQ+pYjU3hr0kxkAr/NEzX root@test3</span><br><span class="line"></span><br><span class="line"><span class="comment">#页面登录gitlab，在右上角设置中找到SSH密钥</span></span><br><span class="line"><span class="comment">#将刚才生成的公钥内容复制到密钥中，标题名字随意</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#克隆项目</span></span><br><span class="line">mkdir /root/<span class="built_in">test</span>/</span><br><span class="line"><span class="built_in">cd</span> /root/<span class="built_in">test</span>/</span><br><span class="line">git <span class="built_in">clone</span> git@192.168.0.94:root/hello.git</span><br><span class="line"><span class="comment">#这里有个警告，因为刚才创建的版本库是空的，所以这里提醒，克隆了一个空库</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#推送代码</span></span><br><span class="line"><span class="comment">#创建一个文件</span></span><br><span class="line"><span class="built_in">cd</span> /root/<span class="built_in">test</span>/hello/</span><br><span class="line">touch read.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Hello world"</span> &gt;&gt; read.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#将文件添加到仓库</span></span><br><span class="line">git add read.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置用户名和邮箱</span></span><br><span class="line">git config --global user.email <span class="string">"wandouduoduo@163.com"</span></span><br><span class="line">git config --global user.name <span class="string">"wandouduoduo"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提交文件到仓库</span></span><br><span class="line">git commit -m <span class="string">"wandouduoduo"</span>    </span><br><span class="line"><span class="comment">#2nd Commit是本次提交的说明</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建tag版本</span></span><br><span class="line">git tag 1.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看git版本号</span></span><br><span class="line">git tag</span><br><span class="line"></span><br><span class="line"><span class="comment">#推送</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line"><span class="comment">#在gitlab上看到，已经推送成功了</span></span><br></pre></td></tr></table></figure><h2 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建目录</span></span><br><span class="line">mkdir /home/<span class="built_in">local</span>/gitlab</span><br><span class="line"><span class="built_in">cd</span> /home/<span class="built_in">local</span>/gitlab</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装git</span></span><br><span class="line">yum install -y git</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载最新的汉化包：</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitlab.com/xhang/gitlab.git</span><br><span class="line"><span class="comment">#如果是要下载老版本的汉化包，需要加上老版本的分支。以10.0.2为例，可以运行如下语句：</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitlab.com/xhang/gitlab.git -b v10.0.2-zh</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止GitLab并执行如下语句：</span></span><br><span class="line">gitlab-ctl stop</span><br><span class="line">\cp -rf /home/<span class="built_in">local</span>/gitlab/* /opt/gitlab/embedded/service/gitlab-rails/ </span><br><span class="line"></span><br><span class="line"><span class="comment">#配置和重启</span></span><br><span class="line">sudo gitlab-ctl reconfigure</span><br><span class="line">sudo gitlab-ctl restart</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动所有服务</span></span><br><span class="line">gitlab-ctl start</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动单独一个服务</span></span><br><span class="line">gitlab-ctl start nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看日志，查看所有日志</span></span><br><span class="line">gitlab-ctl tail</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看具体一个日志,类似tail -f</span></span><br><span class="line">gitlab-ctl tail nginx</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;博客中有docker直接启动gitlab服务，这里再补充下直接裸机部署gitlab服务的教程。&lt;/p&gt;
    
    </summary>
    
      <category term="运维技术" scheme="https://wandouduoduo.github.io/categories/%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF/"/>
    
      <category term="服务部署" scheme="https://wandouduoduo.github.io/categories/%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF/%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="Git" scheme="https://wandouduoduo.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>k8s之jenkins动态创建slave</title>
    <link href="https://wandouduoduo.github.io/articles/12aa61a7.html"/>
    <id>https://wandouduoduo.github.io/articles/12aa61a7.html</id>
    <published>2020-06-30T07:42:05.000Z</published>
    <updated>2020-08-04T06:27:19.602Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>持续构建与发布是我们日常工作中必不可少的一个步骤，目前大多公司都采用 Jenkins 集群来搭建符合需求的 CI/CD 流程，然而传统的 Jenkins Slave 一主多从方式会存在一些痛点，比如：</p><ul><li>主 Master 发生单点故障时，整个流程都不可用了</li><li>每个 Slave 的配置环境不一样，来完成不同语言的编译打包等操作，但是这些差异化的配置导致管理起来非常不方便，维护起来也是比较费劲</li><li>资源分配不均衡，有的 Slave 要运行的 job 出现排队等待，而有的 Slave 处于空闲状态</li><li>资源有浪费，每台 Slave 可能是物理机或者虚拟机，当 Slave 处于空闲状态时，也不会完全释放掉资源。</li></ul><p>正因为上面的这些种种痛点，我们渴望一种更高效更可靠的方式来完成这个 CI/CD 流程，而 Docker 虚拟化容器技术能很好的解决这个痛点，又特别是在 Kubernetes 集群环境下面能够更好来解决上面的问题，下图是基于 Kubernetes 搭建 Jenkins 集群的简单示意图：<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/1.png" alt></p><p>从图上可以看到 Jenkins Master 和 Jenkins Slave 以 Pod 形式运行在 Kubernetes 集群的 Node 上，Master 运行在其中一个节点，并且将其配置数据存储到一个 Volume 上去，Slave 运行在各个节点上，并且它不是一直处于运行状态，它会按照需求动态的创建并自动删除。</p><p>这种方式的工作流程大致为：当 Jenkins Master 接受到 Build 请求时，会根据配置的 Label 动态创建一个运行在 Pod 中的 Jenkins Slave 并注册到 Master 上，当运行完 Job 后，这个 Slave 会被注销并且这个 Pod 也会自动删除，恢复到最初状态。</p><p>使用jenkins动态slave的优势：</p><ul><li><strong>服务高可用</strong>，当 Jenkins Master 出现故障时，Kubernetes 会自动创建一个新的 Jenkins Master 容器，并且将 Volume 分配给新创建的容器，保证数据不丢失，从而达到集群服务高可用。</li><li><strong>动态伸缩</strong>，合理使用资源，每次运行 Job 时，会自动创建一个 Jenkins Slave，Job 完成后，Slave 自动注销并删除容器，资源自动释放，而且 Kubernetes 会根据每个资源的使用情况，动态分配 Slave 到空闲的节点上创建，降低出现因某节点资源利用率高，还排队等待在该节点的情况。</li><li><strong>扩展性好</strong>，当 Kubernetes 集群的资源严重不足而导致 Job 排队等待时，可以很容易的添加一个 Kubernetes Node 到集群中，从而实现扩展。</li></ul><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><a href="https://wandouduoduo.github.io/articles/87f87b20.html">k8s 集群</a> </p><p>版本:  1.18.3</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.cnblogs.com/effortsing/p/10486960.html" rel="noopener" target="_blank">网友博客</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="创建namespace"><a href="#创建namespace" class="headerlink" title="创建namespace"></a>创建namespace</h3><p>创建一个kube-ops的 namespace（为了方便管理）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create namespace kube-ops</span><br></pre></td></tr></table></figure><h3 id="创建pv和pvc"><a href="#创建pv和pvc" class="headerlink" title="创建pv和pvc"></a>创建pv和pvc</h3><p>创建pv、pvc或使用storageclass都可以，本实验使用前者（pvc.yaml）</p><p><em>注意：下面使用的是nfs的存储方式。</em><a href="https://wandouduoduo.github.io/articles/3acab424.html#more">详情参考</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">opspv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  capacity:</span></span><br><span class="line"><span class="attr">    storage:</span> <span class="number">3</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">ReadWriteMany</span></span><br><span class="line"><span class="attr">  persistentVolumeReclaimPolicy:</span> <span class="string">Recycle</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">nfs</span></span><br><span class="line"><span class="attr">  nfs:</span></span><br><span class="line"><span class="attr">    server:</span> <span class="number">10.220</span><span class="number">.169</span><span class="number">.231</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/data/k8s-volume</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">opspvc</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-ops</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteMany</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">nfs</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="attr">    requests:</span></span><br><span class="line"><span class="attr">      storage:</span> <span class="number">3</span><span class="string">Gi</span></span><br></pre></td></tr></table></figure><p>创建需要用到的 PVC 对象：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f pvc.yaml</span><br></pre></td></tr></table></figure><h3 id="权限绑定"><a href="#权限绑定" class="headerlink" title="权限绑定"></a>权限绑定</h3><p>给jenkins绑定权限（rbac.yaml），如果对rbac不熟悉，可以先给定cluster-admin权限</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-ops</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">["extensions",</span> <span class="string">"apps"</span><span class="string">]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["deployments"]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["create",</span> <span class="string">"delete"</span><span class="string">,</span> <span class="string">"get"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">]</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["services"]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["create",</span> <span class="string">"delete"</span><span class="string">,</span> <span class="string">"get"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">]</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["pods"]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["create","delete","get","list","patch","update","watch"]</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["pods/exec"]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["create","delete","get","list","patch","update","watch"]</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["pods/log"]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["get","list","watch"]</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["secrets"]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["get"]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-ops</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">  - kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">kube-ops</span></span><br></pre></td></tr></table></figure><p>创建 rbac 相关的资源对象：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f rbac.yaml</span><br><span class="line">serviceaccount <span class="string">"jenkins"</span> created</span><br><span class="line">role.rbac.authorization.k8s.io <span class="string">"jenkins"</span> created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io <span class="string">"jenkins"</span> created</span><br></pre></td></tr></table></figure><h3 id="创建jenkins-master"><a href="#创建jenkins-master" class="headerlink" title="创建jenkins  master"></a>创建jenkins  master</h3><p>新建一个 Deployment：(jenkins.yaml)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-ops</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">      serviceAccount:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">jenkins/jenkins:lts</span></span><br><span class="line"><span class="attr">        imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">          protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">50000</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">agent</span></span><br><span class="line"><span class="attr">          protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">1000</span><span class="string">m</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">500</span><span class="string">m</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">512</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          httpGet:</span></span><br><span class="line"><span class="attr">            path:</span> <span class="string">/login</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">12</span></span><br><span class="line"><span class="attr">        readinessProbe:</span></span><br><span class="line"><span class="attr">          httpGet:</span></span><br><span class="line"><span class="attr">            path:</span> <span class="string">/login</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">12</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">jenkinshome</span></span><br><span class="line"><span class="attr">          subPath:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/var/jenkins_home</span></span><br><span class="line"><span class="attr">        env:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">LIMITS_MEMORY</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            resourceFieldRef:</span></span><br><span class="line"><span class="attr">              resource:</span> <span class="string">limits.memory</span></span><br><span class="line"><span class="attr">              divisor:</span> <span class="number">1</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">JAVA_OPTS</span></span><br><span class="line"><span class="attr">          value:</span> <span class="bullet">-Xmx$(LIMITS_MEMORY)m</span> <span class="attr">-XshowSettings:vm</span> <span class="bullet">-Dhudson.slaves.NodeProvisioner.initialDelay=0</span> <span class="bullet">-Dhudson.slaves.NodeProvisioner.MARGIN=50</span> <span class="bullet">-Dhudson.slaves.NodeProvisioner.MARGIN0=0.85</span> <span class="bullet">-Duser.timezone=Asia/Shanghai</span></span><br><span class="line"><span class="attr">      securityContext:</span></span><br><span class="line"><span class="attr">        fsGroup:</span> <span class="number">1000</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">jenkinshome</span></span><br><span class="line"><span class="attr">        persistentVolumeClaim:</span></span><br><span class="line"><span class="attr">          claimName:</span> <span class="string">opspvc</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-ops</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">    nodePort:</span> <span class="number">30002</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">agent</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">50000</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="string">agent</span></span><br></pre></td></tr></table></figure><p>这里为了方便，通过 NodePort 的形式来暴露 Jenkins 的 web 服务，固定为30002端口，另外还需要暴露一个 agent 的端口，这个端口主要是用于 Jenkins 的 master 和 slave 之间通信使用的。<br>创建 Jenkins 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f jenkins.yaml</span><br><span class="line">deployment.extensions <span class="string">"jenkins"</span> created</span><br><span class="line">service <span class="string">"jenkins"</span> created</span><br></pre></td></tr></table></figure><h3 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h3><p>创建完成后，要去拉取镜像可能需要等待一会儿，查看下 Pod 的状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pods -n kube-ops</span><br><span class="line">NAME                        READY     STATUS    RESTARTS   AGE</span><br><span class="line">jenkins-7f5494cd44-pqpzs   0/1       Running   0          2m</span><br></pre></td></tr></table></figure><p>可以看到该 Pod 处于 Running 状态，但是 READY 值确为0，然后我们用 describe 命令去查看下该 Pod 的详细信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe pod jenkins-7f5494cd44-pqpzs -n kube-ops</span><br><span class="line">...</span><br><span class="line">Normal   Created                3m                kubelet, node01    Created container</span><br><span class="line">  Normal   Started                3m                kubelet, node01    Started container</span><br><span class="line">  Warning  Unhealthy              1m (x10 over 2m)  kubelet, node01    Liveness probe failed: Get http://10.244.1.165:8080/login: dial tcp 10.244.1.165:8080: getsockopt: connection refused</span><br><span class="line">  Warning  Unhealthy              1m (x10 over 2m)  kubelet, node01    Readiness probe failed: Get http://10.244.1.165:8080/login: dial tcp 10.244.1.165:8080: getsockopt: connection refused</span><br></pre></td></tr></table></figure><p>可以看到上面的 Warning 信息，健康检查没有通过，具体原因是什么引起的呢？可以通过查看日志进一步了解：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl logs -f jenkins-7f5494cd44-pqpzs -n kube-ops</span><br><span class="line">touch: cannot touch <span class="string">'/var/jenkins_home/copy_reference_file.log'</span>: Permission denied</span><br><span class="line">Can not write to /var/jenkins_home/copy_reference_file.log. Wrong volume permissions?</span><br></pre></td></tr></table></figure><p>很明显可以看到上面的错误信息，意思就是我们没有权限在 jenkins 的 home 目录下面创建文件，这是因为默认的镜像使用的是 jenkins 这个用户，而我们通过 PVC 挂载到 nfs 服务器的共享数据目录下面却是 root 用户的，所以没有权限访问该目录，要解决该问题，也很简单，我只需要在 nfs 共享数据目录下面把我们的目录权限重新分配下即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount -t nfs 10.220.169.231:/data/k8s-volume /data/k8s</span><br><span class="line">chown -R 1000 /data/k8s</span><br></pre></td></tr></table></figure><p>然后重新创建：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl delete -f jenkins.yaml</span><br><span class="line">deployment.extensions <span class="string">"jenkins"</span> deleted</span><br><span class="line">service <span class="string">"jenkins"</span> deleted</span><br><span class="line">$ kubectl create -f jenkins.yaml</span><br><span class="line">deployment.extensions <span class="string">"jenkins"</span> created</span><br><span class="line">service <span class="string">"jenkins"</span> created</span><br></pre></td></tr></table></figure><p>现在再去查看新生成的 Pod 已经没有错误信息了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pods -n kube-ops</span><br><span class="line">NAME                        READY     STATUS        RESTARTS   AGE</span><br><span class="line">jenkins-7f5494cd44-smn2r   1/1       Running       0          25s</span><br></pre></td></tr></table></figure><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p>等到服务启动成功后，可以根据Node节点的 IP:30002 端口就可以访问 jenkins 服务了，可以根据提示信息进行安装配置即可：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/3.png" alt></p><p>初始化的密码可以在 jenkins 的容器的日志中进行查看，也可以直接在 nfs 的共享数据目录中查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /data/k8s/jenkins/secrets/initialAdminPassword</span><br><span class="line">1974d7a773574a9ca58a6611bc1bed7f</span><br></pre></td></tr></table></figure><p>然后选择安装推荐的插件即可。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/2.png" alt></p><p>安装完成后添加管理员帐号即可进入到 jenkins 主界面：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/4.png" alt></p><h3 id="配置jenkins动态slave"><a href="#配置jenkins动态slave" class="headerlink" title="配置jenkins动态slave"></a>配置jenkins动态slave</h3><p><strong>安装kubernetes 插件</strong></p><p>点击 Manage Jenkins -&gt; 插件管理-&gt; 可用 -&gt; Kubernetes plugin 勾选安装即可。（如果搜索没有Kubernetes plugin，即选择Kubernetes），然后重启jenkins，使之生效。<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/5.png" alt></p><p><strong>插件配置</strong></p><p>点击 Manage Jenkins —&gt; 系统配置 —&gt; (拖到最下方)Add a new cloud —&gt; 选择 Kubernetes，然后填写 Kubernetes 和 Jenkins 配置信息。<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/7.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/8.png" alt></p><p><em>另外需要注意，如果这里 Test Connection 失败的话，很有可能是权限问题，这里就需要把 jenkins 的 serviceAccount 对应的 secret 添加到这里的 Credentials 里面。</em></p><p><strong>配置 Pod Template</strong></p><p>其实就是配置 Jenkins Slave 运行的 Pod 模板，命名空间同样使用 kube-ops，Labels 这里也非常重要，对于后面执行 Job 的时候需要用到该值，这里使用的是 cnych/jenkins:jnlp 这个镜像，这个镜像是在官方的 jnlp 镜像基础上定制的，加入了 kubectl 等一些实用的工具。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/9.png" alt></p><p>需要在下面挂载两个主机目录，一个是/var/run/docker.sock，该文件是用于 Pod 中的容器能够共享宿主机的 Docker，使用 docker in docker 的方式，Docker 二进制文件已经打包到上面的镜像中了，另外一个目录下/root/.kube目录，将这个目录挂载到容器的/root/.kube目录下面这是为了能够在 Pod 的容器中能够使用 kubectl 工具来访问 Kubernetes 集群，方便后面在 Slave Pod 部署 Kubernetes 应用。<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/10.png" alt></p><p>另外还有几个参数需要注意，如下图中的  <strong>代理的空闲存活时间（分）(Time in minutes to retain slave when idle)</strong>，这个参数表示的意思是当处于空闲状态的时候保留 Slave Pod 多长时间，这个参数最好保存默认就行了，如果你设置过大的话，Job 任务执行完成后，对应的 Slave Pod 就不会立即被销毁删除。（如没有，请忽略））<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/11.png" alt></p><p>另外在配置了后运行 Slave Pod 的时候出现了权限问题，因为 Jenkins Slave Pod 中没有配置权限，所以需要配置上 ServiceAccount，在 Slave Pod 配置的地方点击下面的高级，添加上对应的 ServiceAccount 即可：</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/12.png" alt></p><p>还有一个问题在配置完成后发现启动 Jenkins Slave Pod 的时候，出现 Slave Pod 连接不上，然后尝试100次连接之后销毁 Pod，然后会再创建一个 Slave Pod 继续尝试连接，无限循环，类似于下面的信息：（如没有，请忽略）<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/13.png" alt></p><p>如果出现这种情况的话就需要将 Slave Pod 中的运行命令和参数两个值给清空掉</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/14.png" alt></p><p>到这里 Kubernetes Plugin 插件就算配置完成了。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>Kubernetes 插件的配置工作完成了，接下来添加一个 Job 任务，看是否能够在 Slave Pod 中执行，任务执行完成后看 Pod 是否会被销毁。</p><p>在 Jenkins 首页点击create new jobs，创建一个测试的任务，输入任务名称，然后我们选择 Freestyle project 类型的任务：<br> 注意在下面的 Label Expression 这里要填入hwzx-cmp，就是前面我们配置的 Slave Pod 中的 Label，这两个地方必须保持一致</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/15.png" alt></p><p>然后往下拉，在 Build 区域选择Execute shell</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/16.png" alt></p><p>然后输入测试命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"测试 Kubernetes 动态生成 jenkins slave"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"==============docker in docker==========="</span></span><br><span class="line">docker info</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=============kubectl============="</span></span><br><span class="line">kubectl get pods</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/17.png" alt></p><p>现在直接在页面点击做成的 Build now 触发构建即可，然后观察 Kubernetes 集群中 Pod 的变化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n kube-ops -o wide</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/18.png" alt></p><p>可以看到在击立刻构建的时候可以看到一个新的 Pod：jnlp-r0wt6   被创建了，这就是我们的 Jenkins Slave。</p><p>查看控制台信息</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/20.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/21.png" alt></p><p>到这里证明任务已经构建完成，然后这个时候再去集群查看 Pod 列表，发现 kube-ops 这个 namespace 下面已经没有之前的 Slave 这个 Pod 了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n kube-ops -o wide</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/22.png" alt></p><p>到这里就完成了使用 Kubernetes 动态生成 Jenkins Slave 的方法。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;持续构建与发布是我们日常工作中必不可少的一个步骤，目前大多公司都采用 Jenkins 集群来搭建符合需求的 CI/CD 流程，然而传统的 Jenkins Slave 一主多从方式会存在一些痛点，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主 Master 发生单点故障时，整个流程都不可用了&lt;/li&gt;
&lt;li&gt;每个 Slave 的配置环境不一样，来完成不同语言的编译打包等操作，但是这些差异化的配置导致管理起来非常不方便，维护起来也是比较费劲&lt;/li&gt;
&lt;li&gt;资源分配不均衡，有的 Slave 要运行的 job 出现排队等待，而有的 Slave 处于空闲状态&lt;/li&gt;
&lt;li&gt;资源有浪费，每台 Slave 可能是物理机或者虚拟机，当 Slave 处于空闲状态时，也不会完全释放掉资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正因为上面的这些种种痛点，我们渴望一种更高效更可靠的方式来完成这个 CI/CD 流程，而 Docker 虚拟化容器技术能很好的解决这个痛点，又特别是在 Kubernetes 集群环境下面能够更好来解决上面的问题，下图是基于 Kubernetes 搭建 Jenkins 集群的简单示意图：&lt;br&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/12aa61a7/1.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;从图上可以看到 Jenkins Master 和 Jenkins Slave 以 Pod 形式运行在 Kubernetes 集群的 Node 上，Master 运行在其中一个节点，并且将其配置数据存储到一个 Volume 上去，Slave 运行在各个节点上，并且它不是一直处于运行状态，它会按照需求动态的创建并自动删除。&lt;/p&gt;
&lt;p&gt;这种方式的工作流程大致为：当 Jenkins Master 接受到 Build 请求时，会根据配置的 Label 动态创建一个运行在 Pod 中的 Jenkins Slave 并注册到 Master 上，当运行完 Job 后，这个 Slave 会被注销并且这个 Pod 也会自动删除，恢复到最初状态。&lt;/p&gt;
&lt;p&gt;使用jenkins动态slave的优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;服务高可用&lt;/strong&gt;，当 Jenkins Master 出现故障时，Kubernetes 会自动创建一个新的 Jenkins Master 容器，并且将 Volume 分配给新创建的容器，保证数据不丢失，从而达到集群服务高可用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态伸缩&lt;/strong&gt;，合理使用资源，每次运行 Job 时，会自动创建一个 Jenkins Slave，Job 完成后，Slave 自动注销并删除容器，资源自动释放，而且 Kubernetes 会根据每个资源的使用情况，动态分配 Slave 到空闲的节点上创建，降低出现因某节点资源利用率高，还排队等待在该节点的情况。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扩展性好&lt;/strong&gt;，当 Kubernetes 集群的资源严重不足而导致 Job 排队等待时，可以很容易的添加一个 Kubernetes Node 到集群中，从而实现扩展。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="容器编排" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/"/>
    
      <category term="K8s" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/K8s/"/>
    
    
      <category term="K8s" scheme="https://wandouduoduo.github.io/tags/K8s/"/>
    
      <category term="Jenkins" scheme="https://wandouduoduo.github.io/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>k8s之存储服务</title>
    <link href="https://wandouduoduo.github.io/articles/3acab424.html"/>
    <id>https://wandouduoduo.github.io/articles/3acab424.html</id>
    <published>2020-06-30T04:19:41.000Z</published>
    <updated>2020-08-04T06:27:19.604Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>本文详细介绍了kubernentes的存储，使用NFS进行演示，让你充分了解和使用pv和pvc，可以举一反三的使用持久化存储。</p><a id="more"></a><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="Volume"><a href="#Volume" class="headerlink" title="Volume"></a>Volume</h3><p>Volume可以支持<code>local</code>、<code>nfs</code>、<code>cephfs</code>、<code>glusterfs</code>以及各种云计算平台。</p><p>官网Volume的配置都是在一个创建pod的yaml文件中，例如</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">test-pd</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  containers:</span></span><br><span class="line"><span class="attr">  - image:</span> <span class="string">k8s.gcr.io/test-webserver</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">test-container</span></span><br><span class="line"><span class="attr">    volumeMounts:</span></span><br><span class="line"><span class="attr">    - mountPath:</span> <span class="string">/test-pd</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">test-volume</span></span><br><span class="line"><span class="attr">  volumes:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">test-volume</span></span><br><span class="line"><span class="attr">    hostPath:</span></span><br><span class="line">      <span class="comment"># directory location on host</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/data</span></span><br><span class="line">      <span class="comment"># this field is optional</span></span><br><span class="line"><span class="attr">      type:</span> <span class="string">Directory</span></span><br></pre></td></tr></table></figure><h3 id="PV和PVC"><a href="#PV和PVC" class="headerlink" title="PV和PVC"></a><strong>PV和PVC</strong></h3><p>PV的全称是: PersistentVolume (持久化卷)，是对底层的共享存储的一种抽象，PV由管理员进行创建和配置，它和具体的底层的共享存储技术的实现方式有关，比如Ceph、GlusterFS、NFS等，都是通过插件机制完成与共享存储的对接.</p><p>PVC的全称是: PersistenVolumeClaim (持久化卷声明)，PVC是用户存储的一种声明，PVC和Pod比较类型，Pod是消耗节点，PVC消耗的是PV资源，Pod可以请求CPU的内存，而PVC可以请求特定的存储空间和访问模式。对于真正存储的用户不需要关心底层的存储实现细节，只需要直接使用PVC即可.</p><p><em>但是通过PVC请求一定的存储空间也很有可能不足以满足对于存储设备的各种需求，而且不同的应用程序对于存储性能的要求也能也不尽相同，比如读写速度、并发性能等，为了解决这一问题，Kubernetes又为我们引入了一个新的资源对象: StorageClass,通过StorageClass的定义，管理员可以将存储资源定义为某种类型的资源，比如快速存储、慢速存储等，用户根据StorageClass的描述就可以非常直观的知道各种存储资源特性了，这样就可以根据应用的特性去申请合适的存储资源了</em></p><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><h3 id="安装NFS服务"><a href="#安装NFS服务" class="headerlink" title="安装NFS服务"></a>安装NFS服务</h3><p>#这里我使用单独服务器进行演示，实际上随便一台服务器安装nfs都可以 (建议和kubernetes集群分开，找单独一台机器)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum install nfs-utils -y rpcbind</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置nfs存储目录</span></span><br><span class="line">mkdir /data1/k8s-volume</span><br><span class="line">chmod 755 /data1/k8s-volume/</span><br><span class="line"></span><br><span class="line"><span class="comment">#编辑nfs配置文件</span></span><br><span class="line">cat /etc/exports</span><br><span class="line">/data1/k8s-volume *(rw,no_root_squash,sync)</span><br><span class="line"><span class="comment">#存储目录，*允许所有人连接，rw读写权限，sync文件同时写入硬盘及内存，no_root_squash 使用者root用户自动修改为普通用户</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#由于nfs需要向rpcbind进行注册，所以我们需要优先启动rpcbind</span></span><br><span class="line"><span class="comment">#启动rpcbind</span></span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br><span class="line">systemctl status rpcbind</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动nfs</span></span><br><span class="line">systemctl restart nfs</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs</span><br><span class="line">systemctl status nfs</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查rpcbind及nfs是否正常</span></span><br><span class="line"> rpcinfo |grep nfs</span><br></pre></td></tr></table></figure><h3 id="NFS客户端"><a href="#NFS客户端" class="headerlink" title="NFS客户端"></a>NFS客户端</h3><p><strong>我们nfs server端已经完毕，接下来在所有需要nfs挂载的集群节点安装以下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nfs-utils rpcbind</span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br><span class="line">systemctl start nfs</span><br><span class="line">ystemctl <span class="built_in">enable</span> nfs</span><br></pre></td></tr></table></figure><p><strong>客户端挂载测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#首先检查nfs服务端挂载目录是否正常</span></span><br><span class="line">showmount -e localhost</span><br><span class="line"></span><br><span class="line">Export list <span class="keyword">for</span> localhost:</span><br><span class="line">/data1/k8s-volume *</span><br><span class="line"></span><br><span class="line"><span class="comment">#现在进行节点挂载</span></span><br><span class="line"><span class="comment">#先在客户端创建数据目录（挂载点位置）</span></span><br><span class="line">mkdir -p /data1/k8s/</span><br><span class="line"></span><br><span class="line"><span class="comment">#现在进行挂载 分别是ip:nfs目录 节点存储目录</span></span><br><span class="line">mount -t nfs 10.4.82.118:/data1/k8s-volume /data1/k8s</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂在完成后我们使用df -h 就可以看到挂载点</span></span><br><span class="line"> df -h</span><br><span class="line"><span class="comment">#所有需要nfs节点这样挂载就可以</span></span><br></pre></td></tr></table></figure><h3 id="创建PV"><a href="#创建PV" class="headerlink" title="创建PV"></a>创建PV</h3><p>有了我们NFS共享存储，下面就可以来使用PV和PVC。PV作为存储资源，主要包括存储能力、访问模式、存储类型、回收策略等关键信息。pv.yaml如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span><span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">pv1</span> <span class="comment">#pv名称</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">capacity:</span>             <span class="comment">#存储能力，一个pv对象都要指定一个存储能力，目前仅支持存储空间的设置</span></span><br><span class="line"><span class="attr">storage:3Gi</span>                         <span class="comment">#存储空间</span></span><br><span class="line"><span class="attr">accessModes:</span></span><br><span class="line"><span class="bullet">-ReadWriteMany</span>                      <span class="comment">#访问模式</span></span><br><span class="line"><span class="attr">persistentVolumeReclaimPolicy:Recycle</span>   <span class="comment">#回收策略</span></span><br><span class="line"><span class="attr">nfs:</span>                              <span class="comment">#服务模式 (nfs、ceph、hostpath等)</span></span><br><span class="line"><span class="attr">path:/data1/k8s-volume</span>       <span class="comment">#共享数据目录挂载点</span></span><br><span class="line"><span class="attr">server:10.4.82.118</span>           <span class="comment">#nfs服务器地址</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建</span></span><br><span class="line">kubectl apply -f pv.yaml</span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">kubectl get pv</span><br></pre></td></tr></table></figure><p><strong>PV相关配置说明</strong></p><p>Capacity 存储能力 通过PV的capacity属性来设置存储空间，目前仅支持storage=数据大小，未来可能会加入IOPS、吞吐量等指标配置</p><p><strong>AccessModes 访问模式</strong></p><p>AccessModes 是用来对PV进行访问模式的设置，用于描述用户应用对存储资源的访问权限, 访问权限包括下面几种方式：</p><ul><li>ReadWriteOnce (RWO):  读写权限，但是只能被单个节点挂载 </li><li>ReadOnlyMany (ROX):  只读权限，可能被多个节点挂载 </li><li>ReadWriteMany (RWX):  读写权限，可以被多个节点挂载</li></ul><p><em>注意:一些PV可能支持多种访问模式，但是在挂载点时候只能使用一种访问模式，多种访问模式不生效</em></p><p>下面是一些常用的Volume插件支持的访问模式（需要根据我们配置的类型进行选择对应的访问模式）</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3acab424/1.png" alt></p><p><strong>persistentVolumeReclaimPolicy回收策略</strong> </p><ul><li>Retain (保留) 保留数据，需要管理员手动清理 </li><li>Recycle (回收) 清除PV中的数据，效果相当于执行删除命令 </li><li>Delete (删除) 与PV相连的后端存储完成volume的删除操作，常见于云服务商的存储服务</li></ul><p><em>不过需要注意的是，目前只有NFS和HostPath两类支持回收策略，一般设置Retain比较保险</em></p><p><strong>状态</strong></p><ul><li><p>Available (可用): 表示可用状态，还未被任何PVC绑定</p></li><li><p>Bound (已绑定)：已经绑定到某个PVC </p></li><li><p>Released (已释放)：对应的PVC已经删除,但资源还没有被集群收回 </p></li><li><p>Failed：PV自动回收失败</p></li></ul><h3 id="创建PVC"><a href="#创建PVC" class="headerlink" title="创建PVC"></a><strong>创建PVC</strong></h3><p>前面说过，PV实际上没有创建存储，相当于我们node一样，还需要创建Pod进行消费，接下来我们进行PVC的创建与配置</p><p>#前面我们已经在集群上都安装nfs客户端，并且进行挂载了。下面进行创建pvc</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建pvc同样需要建立一个数据卷声明</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span><span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">pvc-nfs</span></span><br><span class="line"><span class="attr">namespace:</span> <span class="string">kube-ops</span>                     <span class="comment">#指定命名空间，如没指定为默认</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">accessModes:</span></span><br><span class="line"><span class="bullet">-ReadWriteMany</span></span><br><span class="line"><span class="attr">resources:</span></span><br><span class="line"><span class="attr">requests:</span></span><br><span class="line"><span class="attr">storage:3Gi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建，pvc的yaml文件基本上和pv相同，这里不过多解释。</span></span><br><span class="line">kubectl apply -f pvc-nfs.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看pvc</span></span><br><span class="line">kubectl get pvc -n kube-ops</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看pv</span></span><br><span class="line">kubectl get pv</span><br><span class="line"><span class="comment">#这里我们可以看到，当我们创建pvc之后，pv的状态变成了Bound绑定状态，并且和pvc的状态相同。并且可以看到pvc已经绑定到名称为pv1的volume上，同时在pv上可以看到绑定到名称为pvc-nfs的pvc中</span></span><br><span class="line"><span class="comment">#在Kubernetes中会自动帮我们查看pv状态为Available并且根据声明pvc容量storage的大小进行筛选匹配，同时还会根据AccessMode进行匹配。如果pvc匹配不到pv会一直处于pending状态</span></span><br></pre></td></tr></table></figure><h3 id="使用Labels匹配PV与PVC"><a href="#使用Labels匹配PV与PVC" class="headerlink" title="使用Labels匹配PV与PVC"></a><strong>使用Labels匹配PV与PVC</strong></h3><p>pv与pvc中间还可以通过label标签进行匹配，配置如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#记得我们需要修改一下名字，名字是不可以重复的</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span><span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">pv2</span></span><br><span class="line"><span class="attr">labels:</span>           <span class="comment">#这里将pv设置一个labels</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">nfs</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">capacity:</span></span><br><span class="line"><span class="attr">storage:10Gi</span></span><br><span class="line"><span class="attr">accessModes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteOnce</span></span><br><span class="line"><span class="attr">persistentVolumeReclaimPolicy:Recycle</span></span><br><span class="line"><span class="attr">nfs:</span></span><br><span class="line"><span class="attr">path:/data1/k8s-volume</span></span><br><span class="line"><span class="attr">server:192.168.0.14</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span><span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">pvc2-nfs</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">accessModes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteOnce</span></span><br><span class="line"><span class="attr">resources:</span></span><br><span class="line"><span class="attr">requests:</span></span><br><span class="line"><span class="attr">storage:10Gi</span></span><br><span class="line"><span class="attr">selector:</span>             <span class="comment">##pvc匹配标签为app=nfs的pv</span></span><br><span class="line"><span class="attr">matchLabels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">nfs</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f test.yaml</span><br><span class="line">kubectl get pv, pvc</span><br><span class="line"><span class="comment">#这里我们可以看到创建的名称为pv2何pv2-nfs已经进行绑定</span></span><br><span class="line"><span class="comment">#需要注意，当我们pvc申请的容量小于我们pv的容量是可以进行绑定的，当我们申请pvc的容量大于pv的容量是无法进行绑定的。</span></span><br></pre></td></tr></table></figure><h3 id="Deployment引用pvc"><a href="#Deployment引用pvc" class="headerlink" title="Deployment引用pvc"></a><strong>Deployment引用pvc</strong></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span><span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">pv-nfs-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">replicas:3</span></span><br><span class="line"><span class="attr">selector:</span></span><br><span class="line"><span class="attr">matchLabels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">pv-nfs-nginx</span></span><br><span class="line"><span class="attr">template:</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">            labels:</span></span><br><span class="line"><span class="attr">                app:</span> <span class="string">pv-nfs-nginx</span></span><br><span class="line"><span class="attr">        spec:</span></span><br><span class="line"><span class="attr">            containers:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">pv-nfs-nginx</span></span><br><span class="line"><span class="attr">                image:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">                ports:</span></span><br><span class="line"><span class="attr">                - containerPort:</span><span class="number">80</span></span><br><span class="line"><span class="attr">                volumeMounts:</span>            <span class="comment">#挂载，首先添加需要挂载的目录</span></span><br><span class="line"><span class="attr">                - name:</span> <span class="string">pv-nginx</span>     <span class="comment">#挂载点的名称</span></span><br><span class="line"><span class="attr">                mountPath:</span><span class="string">/usr/share/nginx/html</span> <span class="comment">#挂载点的路径</span></span><br><span class="line"><span class="attr">            volumes:</span><span class="comment">#绑定</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">pv-nginx</span></span><br><span class="line"><span class="attr">                persistentVolumeClaim:</span>      <span class="comment">#将镜像中的nginx目录挂载到下面名称的pvc中</span></span><br><span class="line">                <span class="attr">claimName:</span> <span class="string">pvc-nfs</span>      <span class="comment">#pvc名称</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span><span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">nfs-pvc</span></span><br><span class="line"><span class="attr">labels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">pv-nfs-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">type:NodePort</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">port:80</span></span><br><span class="line"><span class="attr">targetPort:80</span></span><br><span class="line"><span class="attr">    selector:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">pv-nfs-nginx</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建nginx deployment</span></span><br><span class="line">kubectl apply -f pv-nginx.yaml</span><br><span class="line"><span class="comment">#检查pod和svc状态</span></span><br><span class="line">kubectl get pod,svc|grep pv</span><br><span class="line"><span class="comment">#这里我们可以看到pod已经正常启动，并且svc也已经暴露端口了。</span></span><br></pre></td></tr></table></figure><p>接下来我们直接访问nginx是无法访问的，因为在我们nfs挂载点的目录下面没有文件，所以无法访问</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3acab424/2.png" alt></p><p>接下来我们到nfs挂载点创建一个index.html</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"I am abcdocker"</span>&gt;&gt;/data1/k8s/index.html</span><br></pre></td></tr></table></figure><p>然后我们在进行访问查看</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3acab424/3.png" alt></p><p>由于我们的index.html直接挂在到了/data1/k8s目录下面，如果有很多个pod都使用pvc进行挂载，会造成我们数据目录的文件比较乱</p><p>这里我们添加一个subpathsubPath的目的是为了在单一Pod中多次使用同一个volume而设计的。</p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/3acab424/4.png" alt></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deployment文件如下</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span><span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">pv-nfs-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">replicas:3</span></span><br><span class="line"><span class="attr">selector:</span></span><br><span class="line"><span class="attr">matchLabels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">pv-nfs-nginx</span></span><br><span class="line"><span class="attr">template:</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">labels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">pv-nfs-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">containers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pv-nfs-nginx</span></span><br><span class="line"><span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">containerPort:80</span></span><br><span class="line"><span class="attr">volumeMounts:</span>       <span class="comment">#挂载，首先添加需要挂载的目录</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pv-nginx</span>    <span class="comment">#挂载点的名称</span></span><br><span class="line"><span class="attr">mountPath:/usr/share/nginx/html</span>  <span class="comment">#挂载点的路径</span></span><br><span class="line"><span class="attr">subPath:</span> <span class="string">nginx-pvc</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span> <span class="comment">#绑定</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pv-nginx</span></span><br><span class="line"><span class="attr">persistentVolumeClaim:</span> <span class="comment">#将镜像中的nginx目录挂载到下面名称的pvc中</span></span><br><span class="line"><span class="attr">claimName:</span> <span class="string">pvc-nfs</span>  <span class="comment">#pvc名称</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span><span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">nfs-pvc</span></span><br><span class="line"><span class="attr">labels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">pv-nfs-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">type:NodePort</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">port:80</span></span><br><span class="line"><span class="attr">targetPort:80</span></span><br><span class="line"><span class="attr">selector:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">pv-nfs-nginx</span></span><br></pre></td></tr></table></figure><p>当我们更新完pod之后，等pod正常启动。就可以看到在我们nfs存储目录下面单独创建了一个名称为nginx-pvc的目录，这个目录实际上就是我们subpath后面指定的名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f pv-nginx.yaml</span><br><span class="line">ls /data1/k8s/</span><br></pre></td></tr></table></figure><p>这个目录下面也是没有任何文件的，我们需要将原来index.html拷贝过去即可</p><p>现在我们删除deployment，下面的数据并不会删除。这样使用pv和pvc持久化就完成</p><p><strong>如果我们直接删除或者有pod在使用pv或者pvc是无法直接删除的,当我们使用Recycle模式时，删除所有pv和pvc后，数据也会进行删除。所以删除pv和pvc请谨慎操作</strong></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>系统内有一个已经不再使用的 PV ，已经删除了与其关联的 Pod 及 PVC ，并对其执行了删除命令，但是无法正常删除，一直出于如下状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pv</span><br><span class="line">NAME          CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS        CLAIM                                    STORAGECLASS          REASON   AGE</span><br><span class="line">pv-nfs-gysl   1Gi        RWO            Recycle          Terminating   default/www-vct-statefulset-pvc-gysl-0   managed-nfs-storage            22h</span><br></pre></td></tr></table></figure><p><strong>解决方法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl patch pv pv-nfs-gysl -p <span class="string">'&#123;"metadata":&#123;"finalizers":null&#125;&#125;'</span></span><br><span class="line">persistentvolume/pv-nfs-gysl patched</span><br><span class="line"></span><br><span class="line">$ kubectl get pv</span><br><span class="line">No resources found.</span><br></pre></td></tr></table></figure><p>通过系统帮助信息，我们可以获取patch的简要使用说明：</p><p>patch： 使用 strategic merge patch 更新一个资源的 field(s)。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;本文详细介绍了kubernentes的存储，使用NFS进行演示，让你充分了解和使用pv和pvc，可以举一反三的使用持久化存储。&lt;/p&gt;
    
    </summary>
    
      <category term="容器编排" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/"/>
    
      <category term="K8s" scheme="https://wandouduoduo.github.io/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/K8s/"/>
    
    
      <category term="K8s" scheme="https://wandouduoduo.github.io/tags/K8s/"/>
    
  </entry>
  
  <entry>
    <title>详解nexus私服仓库</title>
    <link href="https://wandouduoduo.github.io/articles/79a09f66.html"/>
    <id>https://wandouduoduo.github.io/articles/79a09f66.html</id>
    <published>2020-06-28T10:43:34.000Z</published>
    <updated>2020-08-04T06:27:19.691Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Nexus 是Maven仓库管理器，如果你使用Maven，你可以从Maven中央仓库 下载所需要的构件（artifact），但这通常不是一个好的做法，你应该在本地架设一个Maven仓库服务器，在代理远程仓库的同时维护本地仓库，以节省带宽和时间，Nexus就可以满足这样的需要。此外，他还提供了强大的仓库管理功能，构件搜索功能，它基于REST，友好的UI是一个extjs的REST客户端，它占用较少的内存，基于简单文件系统而非数据库。这些优点使其日趋成为最流行的Maven仓库管理器。</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>操作系统：Linux（以CentOS为例）</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>从<a href="http://www.sonatype.org/nexus/" rel="noopener" target="_blank">官方地址</a>下载</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>将压缩包解压到/usr目录下。</p><p>nexus里面有2个文件夹，第一个是核心文件，第二个用来存储下载下来的jar，如下图<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/1.png" alt="这里写图片描述"><br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/2.png" alt="这里写图片描述"></p><p><strong>修改端口</strong></p><p>进入nexus/nexubs-2.13.0-01/conf目录下，编辑nexus.properties文件<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/3.png" alt="这里写图片描述"><br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/4.png" alt="这里写图片描述"></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>进入nexus/nexubs-2.13.0-01/bin目录<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/5.png" alt="这里写图片描述"><br>运行命令：./nexus </p><p>//可以查看有那些运行命令<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/6.png" alt="这里写图片描述"><br>运行命令：./nexus start </p><p>//启动nexus<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/7.png" alt="这里写图片描述"><br><em>注意：可能会报错，报上面错误时：需要修改运行的用户</em></p><p>修改运行文件 nexus，将RUN_AS_USER修改为root；<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/8.png" alt="这里写图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/9.png" alt="这里写图片描述"><br>保存之后，再次启动nexus<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/10.png" alt="这里写图片描述"></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>查看nexus 控制台，命令：./nexus console<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/11.png" alt="这里写图片描述"></p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>设置nexus为Linux系统的服务，并开机自动启动</p><ol><li><p>复制$NEXUS_HOME/bin/jsw/linux-x86-64/nexus 到/etc/init.d/nexus</p></li><li><p>授于nexus脚本有可执行的权限：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`    ``chmod` `755 ``/etc/init``.d``/nexus`</span><br></pre></td></tr></table></figure><ol start="3"><li>修改nexus文件，配置以下参数：</li></ol><p>​      a) 修改NEXUS_HOME 绝对路径，如：NEXUS_HOME=”/usr/local/nexus”</p><p>​      b) 设置RUN_AS_USER=nexus，或都其它的用户，前提是创建了此用户。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`        ``NEXUS_HOME=``/usr/local/nexus` `        ``PLATFORM=linux-x86-64` `        ``PLATFORM_DIR=``&quot;$&#123;NEXUS_HOME&#125;/bin/jsw/$&#123;PLATFORM&#125;&quot;` `        ``WRAPPER_CMD=``&quot;$&#123;PLATFORM_DIR&#125;/wrapper&quot;` `        ``WRAPPER_CONF=``&quot;$&#123;PLATFORM_DIR&#125;/../conf/wrapper.conf&quot;` `        ``PIDDIR=``&quot;$&#123;NEXUS_HOME&#125;&quot;`</span><br></pre></td></tr></table></figure><ol start="4"><li>Red Hat, Fedora, CentOS增加nexus服务：       </li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`    ``<span class="built_in">cd</span>` `/etc/init``.d` `        ``chkconfig --add nexus` `        ``chkconfig --levels 345 nexus on` `        ``service nexus start` `        ``tail` `-f ``/usr/<span class="built_in">local</span>/nexus/logs/wrapper``.<span class="built_in">log</span>`</span><br></pre></td></tr></table></figure><p>Ubuntu and Debian增加nexus服务        </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`    ``<span class="built_in">cd</span>` `/etc/init``.d` `        ``update-rc.d nexus defaults` `        ``chkconfig --levels 345 nexus on` `        ``service nexus start` `        ``tail` `-f ``/usr/<span class="built_in">local</span>/nexus/logs/wrapper``.<span class="built_in">log</span>`</span><br></pre></td></tr></table></figure><p>配置完成后，在浏览器进行访问。地址：<a href="http://ip/" rel="noopener" target="_blank">http://ip</a>:端口/nexus </p><p><em><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/12.png" alt="这里写图片描述">在网页上的右上角进行登录，默认用户名：admin，密码：admin123</em> </p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>常用功能：<br>Nexus常用功能就是：指定私服的中央地址、将自己的Maven项目指定到私服地址、从私服下载中央库的项目索引、从私服仓库下载依赖组件、将第三方项目jar上传到私服供其他项目组使用。<br>开启Nexus服务后访问url地址<a href="http://localhost:8081/nexus/(推荐使用自己的ip地址)，之后登录系统，用户名密码分别是：admin/admin123" rel="noopener" target="_blank">http://localhost:8081/nexus/(推荐使用自己的ip地址)，之后登录系统，用户名密码分别是：admin/admin123</a>.<br>最频繁的就是点击左侧菜单栏的Repositories按钮<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/13.png" alt="这里写图片描述"><br>一般用到的仓库种类是hosted、proxy。Hosted代表宿主仓库，用来发布一些第三方不允许的组件，比如Oracle驱动、比如商业软件jar包。Proxy代表代理远程的仓库，最典型的就是Maven官方中央仓库、JBoss仓库等等。如果构建的Maven项目本地仓库没有依赖包，那么就会去这个代理站点去下载，那么如果代理站点也没有此依赖包，就回去远程中央仓库下载依赖，这些中央仓库就是proxy。代理站点下载成功后再下载至本机。笔者认为，其实Maven这个自带的默认仓库一般情况下已经够大多数项目使用了。特殊情况时在配置新的仓库，指定url即可，一般熟悉ExtJS的人操作这个Nexus都没什么问题，单词不是很难，不明白的查查单词基本差不多。就是如果Sonatype公司对其做了国际化的处理就更好了。</p><ul><li>hosted 类型的仓库，内部项目的发布仓库</li><li>releases内部的模块中release模块的发布仓库</li><li>snapshots发布内部的SNAPSHOT模块的仓库</li><li>3rd party第三方依赖的仓库，这个数据通常是由内部人员自行下载之后发布上去</li><li>proxy 类型的仓库，从远程中央仓库中寻找数据的仓库</li><li>group 类型的仓库，组仓库用来方便我们开发人员进行设置的仓库</li></ul><p>maven项目索引<br>下载Maven项目索引，项目索引是为了使用者能够在私服站点查找依赖使用的功能<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/14.png" alt="这里写图片描述"><br>保存后后台会运行一个任务，点击菜单栏的Scheduled Tasks选项即可看到有个任务在RUNNING。 下载完成后，Maven索引就可以使用了，在搜索栏输入要搜索的项，就可以查到相关的信息。例如spring-core<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/15.png" alt="这里写图片描述"><br>就可以检索出它的相关信息，包括怎么配置依赖信息。我们要想使用这个私服仓库，先在项目pom中配置相关私服信息指定仓库</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span>             <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://xxx:8081/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure><p>指定插件仓库</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span>        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.1.103:8081/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样只有本项目才在私服下载组件<br>这样这个Maven项目构建的时候会从私服下载相关依赖。当然这个配置仅仅是在此项目中生效，对于其他项目还是不起作用。如果相对Maven的其他项目也生效的话。需要修改全局的settings.xml文件。</p><p>修改settings.xml为<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/16.png" alt="这里写图片描述"></p><p>追加激活profile</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activeProfiles</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>central<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">activeProfiles</span>&gt;</span></span><br></pre></td></tr></table></figure><p>之后所有本机的Maven项目就在私服下载组件。（这样比较好）</p><p>项目的发布</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>user-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>User Project Release<span class="tag">&lt;/<span class="name">name</span>&gt;</span>        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.1.103:8081/nexus/content/repositories/releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>user-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>User Project SNAPSHOTS<span class="tag">&lt;/<span class="name">name</span>&gt;</span>    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.1.103:8081/nexus/content/repositories/snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意配置了还是发布项目到私服失败，原因为没有权限<br>配置权限在settings.xml<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/17.png" alt="这里写图片描述"><br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/18.png" alt="这里写图片描述"><br>然后运行发布<br>clean deploy<br>在控制台发布成功<br>然后进入到私服上的仓库中，看一下确实存在刚刚发布的项目<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/19.png" alt="这里写图片描述"></p><p>宿主库——3rd party<br>假如我们下载了Oracle的驱动程序jar包想给其他项目组使用，就需要上传该jar包。选中宿主库——3rd party，之后选择Artifact Upload上传至宿主空间。<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/20.png" alt="这里写图片描述"><br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/21.png" alt="这里写图片描述"><br>最后点击上传<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/22.png" alt="这里写图片描述"> </p><h2 id="索引更新"><a href="#索引更新" class="headerlink" title="索引更新"></a>索引更新</h2><p>索引好比目录，只有有了索引，才能根据索引去仓库下载需要的构件jar包。由于中央仓库向全世界提供下载服务，有很多构件，其索引文件也很大，大概1G左右。 </p><p>更新索引方式有两种</p><ol><li>在线更新索引<br>安装配置完成Nexus后，电脑联网状态下，Nexus会自动下载索引文件。下载好的索引文件存放在目录：sonatype-work\nexus\indexer</li><li>手动更新索引<br>网络环境不佳，或者在线更新有问题时，可以选择手动添加索引方式。<br>首先准备这几个文件:<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/25.png" alt="这里写图片描述"><br>到<a href="http://repo.maven.apache.org/maven2/.index/页面下载下面这两个文件，如图所示文件" rel="noopener" target="_blank">http://repo.maven.apache.org/maven2/.index/页面下载下面这两个文件，如图所示文件</a>:<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/23.png" alt="这里写图片描述"><br>到<a href="http://search.maven.org/" rel="noopener" target="_blank">http://search.maven.org</a>，搜索g:”org.apache.maven.indexer” AND a:”indexer-cli”下载特定解压文<br>indexer-cli-5.1.1.jar，如下图：<br><img src="https://cdn.jsdelivr.net/gh/wandouduoduo/wandouduoduo.github.io/articles/79a09f66/24.png" alt="这里写图片描述"><br>把这几个文件放在同一个文件路径下面，从cmd进入到这个路径里，输入命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar indexer-cli-5.1.1.jar -u nexus-maven-repository-index.gz -d indexer</span><br></pre></td></tr></table></figure><p>执行完之后，把indexer文件夹下的所有内容都复制到%nexus-home%\sonatype-work\nexus\indexer\central-ctx下面。<br>重新启动nexus，进入管理界面，选择central-&gt;Browse Index，就看到更新的索引了。<br>注意：nexus是需要重新启动的，我是在做上面的所有步骤之前，先停掉nexus，等上面四个步骤完成之后，再启动nexus的。</p><h2 id="仓库迁移"><a href="#仓库迁移" class="headerlink" title="仓库迁移"></a>仓库迁移</h2><p>Nexus的构件仓库都保存在sonatype-work目录中，该目录的位置由nexus/conf/nexus.properties配置文件指定。<br>仓库迁移需要两个过程：备份和还原</p><ul><li><ul><li>备份仓库：将sonatype-work文件夹整体备份即可，也可以选择只备份最重要的两个文件夹索引（indexer）和仓库（storage）</li><li>还原仓库：将备份好的sonatype-work文件拷贝到新的服务器中。然后修改nexus/conf/nexus.properties配置文件，重新指定仓库的目录。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;Nexus 是Maven仓库管理器，如果你使用Maven，你可以从Maven中央仓库 下载所需要的构件（artifact），但这通常不是一个好的做法，你应该在本地架设一个Maven仓库服务器，在代理远程仓库的同时维护本地仓库，以节省带宽和时间，Nexus就可以满足这样的需要。此外，他还提供了强大的仓库管理功能，构件搜索功能，它基于REST，友好的UI是一个extjs的REST客户端，它占用较少的内存，基于简单文件系统而非数据库。这些优点使其日趋成为最流行的Maven仓库管理器。&lt;/p&gt;
    
    </summary>
    
      <category term="运维技术" scheme="https://wandouduoduo.github.io/categories/%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF/"/>
    
      <category term="服务部署" scheme="https://wandouduoduo.github.io/categories/%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF/%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="Nexus" scheme="https://wandouduoduo.github.io/tags/Nexus/"/>
    
  </entry>
  
</feed>
